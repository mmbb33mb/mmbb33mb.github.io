@charset 'utf-8';

// botton-base
@mixin button-base($style: true, $display: inline-block) {
	@if $style {
		@include border-style($button-border-style);
		@include border-width($button-border-width);
		@include cursor($cursor-pointer-value);
		@include font-family($button-font-family);
		@include font-weight($button-font-weight);
		@include line-height(normal);
		@include margin($button-margin);
		@include position(relative);
		@include text-decoration(none);
		@include text-align($button-font-align);
		@include appearance(none);
		@include border-radius(0);
		@include min-width($button-min-width);
		@include min-height($button-min-height);
	}
	@if $display {
		@include display($display);
	}
}

@mixin button-style($bg: $button-bg-color, $radius: false, $disabled: false, $border-color: null) {

	// We control which background styles are used,
	// these can be removed by setting $bg:false
	@if $bg {

		// This find the lightness percentage of the background color.
		// $bg-lightness: lightness($bg);
		// $bg-hover-lightness: lightness($bg-hover);

		@if $radius != true {
			@include background-color($bg);
			@include border-color($border-color);
		}

		// We control the text color for you based on the background color.
		// color: if($bg-lightness > 70%, $button-font-color-alt, $button-font-color);
		@include color($button-font-color);
	}

	// We can set $disabled:true to create a disabled transparent button.
	@if $disabled {
		@include cursor($button-disabled-cursor);
		@include opacity($button-disabled-opacity);
		@include box-shadow(none);
		&:hover,
		&:focus {
			@include background-color($bg);
			@include position(relative);
		}
	}

	// We can control how much button radius is used.
	@if $radius == true {
		@include radius($button-radius);
	}
	@else if $radius {
		@include radius($radius);
	}
}

@mixin make-rich-button($bg: $button-bg-color){
	@include make-gradient(lighten($bg, 40%), $bg, vertical);
	@include box-shadow(inset 0 0 3px lighten($bg, 50%), 2px 2px 0 rgba(darken($bg, 50%), 0.3));
	@include border-color(darken($bg, 10%));
	@include transition(box-shadow $hover-duration, transform $hover-duration);

	&:hover {
		@include make-gradient(lighten(lighten($bg, 40%), 10%), lighten($bg, 10%), vertical);
		@include box-shadow(inset 0 0 3px lighten($bg, 50%), 1px 1px 0 rgba(darken($bg, 50%), 0.3));
		@include transform(translate(1px,1px));
	}

	&:active {
		@include background-color(darken($bg, 10%));
		@include box-shadow(0 0 0 lighten(lighten($bg, 50%), 50%), 0 0 0px rgba(0,0,0,0.2));
		@include transform(translate(2px, 2px));
		@include transition-duration(0.1s);
	}
}

// @mixins
//
// We use this to control border radius.
// $radius - Default: $global-radius || 4px
@mixin radius($radius: $global-radius) {
	@if $radius {
		@include border-radius($radius);
	}
}

@if $use-button {
	/* =============================================== */
	/** Button */
	/* =============================================== */
	// Default styles applied outside of media query
	button, .btn {
		@include button-base();
		@include button-style($radius:true);
		@if $button-padding != "" {
			@include padding($button-padding);
		}
		@else {
			@include padding(#{$button-padding-medium - $button-border-width $button-padding-medium * 2 - $button-border-width});
		}
		@include font-size($button-font-medium);
		@include background(transparent);

		&.btn-xlarge {
			@include padding(#{$button-padding-xlarge - $button-border-width $button-padding-large * 2 - $button-border-width});
			@include font-size($button-font-xlarge);
			@include font-weight(bold);
		}
		&.btn-large {
			@include padding(#{$button-padding-large - $button-border-width $button-padding-large * 2 - $button-border-width});
			@include font-size($button-font-large);
		}
		&.btn-small {
			@include padding(#{$button-padding-small - $button-border-width $button-padding-small * 2 - $button-border-width});
			@include font-size($button-font-small);
		}
		&.btn-expand {
			@include width(100%);
		}

		@media #{$small-only} {
			&.btn-small-only-expand {
				@include width(100%);
			}
		}

		@media #{$medium-up} {
			@if $button-padding != "" {
				@include padding($button-padding);
			}
			@else {
				@include padding(#{$button-padding-medium $button-padding-medium * 2});
			}
			&.btn-large {
				@include padding(#{$button-padding-large $button-padding-large * 2});
			}
			&.btn-small {
				@include padding(#{$button-padding-small $button-padding-small * 2});
			}
		}

		&.btn-primary {
			@include button-style($bg: $primary-color, $border-color: $primary-button-border-color);
			@if $button-type-rich {
				.btn-rich {
					@include make-rich-button($primary-color);
				}
			}
		}
		&.btn-secondary {
			@include button-style($bg: $secondary-color, $border-color: $secondary-button-border-color);
			@if $button-type-rich {
				.btn-rich {
					@include make-rich-button($secondary-color);
				}
			}
		}
		&.btn-success {
			@include button-style($bg: $success-color, $border-color: $success-button-border-color);
			@if $button-type-rich {
				.btn-rich {
					@include make-rich-button($success-color);
				}
			}
		}
		&.btn-alert {
			@include button-style($bg: $alert-color, $border-color: $alert-button-border-color);
			@if $button-type-rich {
				.btn-rich {
					@include make-rich-button($alert-color);
				}
			}
		}
		&.btn-warning {
			@include button-style($bg: $warning-color, $border-color: $warning-button-border-color);
			@if $button-type-rich {
				.btn-rich {
					@include make-rich-button($warning-color);
				}
			}
		}
		&.btn-info {
			@include button-style($bg: $info-color, $border-color: $info-button-border-color);
			@if $button-type-rich {
				.btn-rich {
					@include make-rich-button($info-color);
				}
			}
		}
		@if $button-type-ghost {
			&.btn-ghost {
				@include background(transparent);
				@include box-shadow(initial);
				@include transition(background $hover-duration, border $hover-duration, color $hover-duration);
				&.btn-primary {
					@include make-ghost-button($primary-color);
					&:hover {
						@include background($primary-color);
						@include color($primary-button-hover-color);
					}
				}
				&.btn-secondary {
					@include make-ghost-button($secondary-color);
					&:hover {
						@include background($secondary-color);
						@include color($primary-button-hover-color);
					}
				}
				&.btn-success {
					@include make-ghost-button($success-color);
					&:hover {
						@include background($success-color);
						@include color($success-button-hover-color);
					}
				}
				&.btn-alert {
					@include make-ghost-button($alert-color);
					&:hover {
						@include background($alert-color);
						@include color($alert-button-hover-color);
					}
				}
				&.btn-warning {
					@include make-ghost-button($warning-color);
					&:hover {
						@include background($warning-color);
						@include color($warning-button-hover-color);
					}
				}
				&.btn-info {
					@include make-ghost-button($info-color);
					&:hover {
						@include background($info-color);
						@include color($info-button-hover-color);
					}
				}
				&:hover {
					@include transform(initial);
					@include box-shadow(initial);
				}
				&:active {
					@include transform(scale(0.9) !important);
				}
			}
		}

		// &.-radius { @include button-style($bg:false, $radius:true); }
		&.btn-rounded {
			@include button-style($bg: false, $radius: $button-round);
		}

		&.btn-shadowed {
			@include box-shadow(0 3px 0 rgba(darken($primary-color, 10), 1));
			&.btn-primary {
				@include box-shadow(0 3px 0 rgba(darken($primary-color, 10), 1));
			}
			&.btn-secondary {
				@include box-shadow(0 3px 0 rgba(darken($secondary-color, 10), 1));
			}
			&.btn-success {
				@include box-shadow(0 3px 0 rgba(darken($success-color, 10), 1));
			}
			&.btn-alert {
				@include box-shadow(0 3px 0 rgba(darken($alert-color, 10), 1));
			}
			&.btn-warning {
				@include box-shadow(0 3px 0 rgba(darken($warning-color, 10), 1));
			}
			&.btn-info {
				@include box-shadow(0 3px 0 rgba(darken($info-color, 10), 1));
			}
		}

		&.btn-disabled,
		&[disabled] {
			@include button-style($bg: $button-bg-color, $disabled: true, $border-color: $button-border-color);
			&.btn-primary {
				@include button-style($bg: $primary-color, $disabled: true, $border-color: $primary-button-border-color);
			}
			&.btn-secondary {
				@include button-style($bg: $secondary-color, $disabled: true, $border-color: $secondary-button-border-color);
			}
			&.btn-success {
				@include button-style($bg: $success-color, $disabled: true, $border-color: $success-button-border-color);
			}
			&.btn-alert {
				@include button-style($bg: $alert-color, $disabled: true, $border-color: $alert-button-border-color);
			}
			&.btn-warning {
				@include button-style($bg: $warning-color, $disabled: true, $border-color: $warning-button-border-color);
			}
			&.btn-info {
				@include button-style($bg: $info-color, $disabled: true, $border-color: $info-button-border-color);
			}
		}

		&.btn-bordered {
			@include background($white);
			@include color($primary-color);

			&.btn-large	{
				@include font-size($button-font-large);
			}
			&.btn-small	{
				@include font-size($button-font-small);
			}
			&.btn-expand {
				@include width(100%);
			}

			&.btn-primary {
				@include color($primary-color);
			}
			&.btn-secondary {
				@include color($secondary-color);
			}
			&.btn-success {
				@include color($success-color);
			}
			&.btn-alert {
				@include color($alert-color);
			}
			&.btn-warning {
				@include color($warning-color);
			}
			&.btn-info {
				@include color($info-color);
			}
		}
	}

	//firefox 2px fix
	button::-moz-focus-inner {
		@include border(0);
		@include padding(0);
	}
}
