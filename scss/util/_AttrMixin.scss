@charset 'utf-8';
// =================================================================
// スタイル属性
// =================================================================

// ********************************************  A  **********************************************//

// =================================================
// アニメーションについてまとめて指定する
// $values					: 設定値一覧（アニメーション名 アニメーション一回分の時間の長さ 進行割合 遅延時間 繰り返し回数 アニメーションを交互に反転再生させるかどうか アニメーション前後のスタイル 再生状態を指定[省略可]）（初期値は設定ファイルのアニメーション名）
// -------------------------------------------------
// animationプロパティは、要素にキーフレームアニメーションを適用する場合に、 アニメーションについてまとめて指定する際に使用します。
// animationプロパティでは、 animation-name、 animation-duration、 animation-timing-function、 animation-delay、 animation-iteration-count、 animation-direction
// の6つのプロパティの値を、組み合わせて指定することができます。 省略された値はそれらの初期の値に設定されます。
// -------------------------------------------------
// *************************************************
// ※アニメーション一回分の時間の長さの設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// ※進行割合の設定値一覧
// cubic-vezier				: 0～1の範囲内で変化時間軸を設定
// ease						: cubic-bezier(0.25, 0.1, 0.25, 1.0) を指定したのと同じ（開始と完了を滑らかにする）（初期値）
// linear					: cubic-bezier(0.0, 0.0, 1.0, 1.0) を指定したのと同じ（一定）
// ease-in					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-out					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-in-out				: cubic-bezier(0.42, 0, 0.58, 1.0) を指定したのと同じ（ゆっくり始まってゆっくり終わる）
// *************************************************
// ※遅延時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// ※繰り返し回数の設定値一覧
// inifinite				: 無限に再生を繰り返す
// 数値で指定				: 数値で再生回数を指定する（初期値は1）
// *************************************************
// ※アニメーションを交互に反転再生させるかどうかの設定値一覧
// normal					: 普通方向の再生でアニメーションサイクルを繰り返す（初期値）
// alternate				: 奇数回では普通方向の再生、偶数回では逆方向の再生となって、アニメーションサイクルを繰り返す
// *************************************************
// ※再生前後のスタイルの設定値一覧
// none						: デフォルトの値でアニメーションの前後にはスタイルを適用しません
// backwards				: アニメーション終了後にそのスタイルを維持します。
// forwards					: アニメーション開始前に@keyframesが0%もしくはfromのスタイルを適用します。
// both						: backwardsとforwardsの両方のスタイルを適用します。
// *************************************************
// ※再生状態の設定値一覧
// runnnig					: アニメーションを再生中にする（初期値）
// paused					: アニメーションを一時停止にする
// *************************************************
// =================================================
@mixin animation($values: $default-animation-name) {
	@include grantPrefix(animation
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーションがいつ始まるかを指定する
// @param $delay			: 遅延時間（初期値は0）
// -------------------------------------------------
// animation-delayプロパティは、要素にキーフレームアニメーションを適用する場合に、 アニメーションがいつ始まるかを指定する際に使用します。
// animation-delayプロパティの値には、アニメーションの開始を遅らせる時間を指定します。
// 初期値は0でアニメーションがすぐに実行されます。
// 値に負の時間を指定した場合、アニメーションはすぐに実行されますが、 指定分の時間を遡った瞬間からアニメーションの実行が開始されていたかのような表示となります。
// つまり、アニメーションの再生サイクルの途中から開始されることになります。
// -------------------------------------------------
// *************************************************
// ※遅延時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// =================================================
@mixin animation-delay($delay: 0) {
	@include grantPrefix(animation-delay
						 , #{$delay}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーションを交互に反転再生させるかどうかを指定する
// @param $direction		: アニメーションのシーケンス完了時に、逆方向にアニメーションして繰り返すか、始めの状態にリセットしてアニメーションを繰り返すか（初期値はnormal）
// -------------------------------------------------
// animation-directionプロパティは、要素にキーフレームアニメーションを適用する場合に、 アニメーションを交互に反転再生させるかどうかを指定する際に使用します。
// 値にalternateを指定すると、 奇数回では普通方向の再生、偶数回では逆方向の再生となって、アニメーションサイクルを繰り返します。
// アニメーションが逆再生される最中には、 animation-timing-functionプロパティで指定されたタイミング・進行割合も逆方向になります。
// 例えば、animation-timing-functionプロパティの値にease-in（ゆっくり始まる）が指定されたアニメーションが逆再生される最中には、
// ease-out（ゆっくり終わる）が指定されたようになります。
// -------------------------------------------------
// *************************************************
// ※アニメーションを交互に反転再生させるかどうかの設定値一覧
// normal					: 普通方向の再生でアニメーションサイクルを繰り返す（初期値）
// alternate				: 奇数回では普通方向の再生、偶数回では逆方向の再生となって、アニメーションサイクルを繰り返す
// *************************************************
// =================================================
@mixin animation-direction($direction: normal) {
	@include grantPrefix(animation-direction
						 , #{$duration}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーション一回分の時間の長さを指定する
// @param $duration			: 時間を指定する（例：5秒なら5s）（初期値は0）
// -------------------------------------------------
// animation-durationプロパティは、要素にキーフレームアニメーションを適用する場合の、 アニメーション一回分の時間の長さを指定する際に使用します。
// animation-durationプロパティの値には、時間を指定します。
//  初期値は0ですが、この場合にはアニメーションは実行されません。 負の値を指定すると、0として扱われます。
// -------------------------------------------------
// *************************************************
// ※実行時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// =================================================
@mixin animation-duration($duration: 0) {
	@include grantPrefix(animation-duration
						 , #{$duration}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーションの繰り返し回数を指定する
// @param $count			: アニメーションを繰り返す回数（初期値は1）
// -------------------------------------------------
// animation-iteration-countプロパティは、要素にキーフレームアニメーションを適用する場合に、 アニメーションの繰り返し回数を指定する際に使用します。
// 初期値は1でアニメーションが開始から終了まで一回再生されます。
// 値にinfiniteを指定すると、アニメーションの再生を無限に繰り返します。 値に整数以外の数値を指定すると、再生サイクルの途中でアニメーションが終了します。
// 負の値を指定すると、0として扱われます。
// 例えば、アニメーションの再生を反転させる animation-direction: alternateの指定をしている場合に、
// このanimation-iteration-countプロパティで偶数の再生回数を指定してやると、キリの良い箇所でアニメーションの再生を終了させることができかもしれません。
// -------------------------------------------------
// *************************************************
// ※繰り返し回数の設定値一覧
// infinite					: 無限に再生を繰り返す
// 数値						: 数値で再生回数を指定する（初期値は1）
// *************************************************
// =================================================
@mixin animation-iteration-count($count: 1) {
	@include grantPrefix(animation-iteration-count
						 , #{$count}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーション名を指定する
// @param $name				: アニメーションのキーフレーム名（初期値は設定ファイルのデフォルトアニメーション名）
// -------------------------------------------------
// animation-nameプロパティは、要素にキーフレームアニメーションを適用する場合の、 アニメーション名を指定する際に使用します。
// animation系プロパティで要素にキーフレームアニメーションを適用する際には、@keyframesルールでキーフレームを定義する必要があります。
// キーフレームでは、アニメーション開始時点（0%）のスタイルと終了時点（100%）、 さらに、必要に応じてその進行途中（0～100%）のスタイルを指定します。
// animation-nameプロパティでアニメーション名を指定すると、@keyframesルールで定義したキーフレームが選択されます。
// それにより、アニメーション効果を与える色・サイズなどのスタイルと、 アニメーション効果の適用方法（時間・進行割合・繰り返し回数・反転再生・一時停止・いつ始まるか）が関連付けられます。
// animation-nameプロパティの初期値はnoneですが、この場合にはアニメーションは実行されません。
// また、指定したアニメーション名がどのキーフレームにも存在しない場合もアニメーションは実行されません。
// -------------------------------------------------
// *************************************************
// ※アニメーションのキーフレーム名の設定値一覧
// none						: アニメーション効果を指定しない
// アニメーション名			: カンマ（ , ）区切りでアニメーション名のリストを指定する
// *************************************************
// =================================================
@mixin animation-name($names: $default-animation-name) {
	@include grantPrefix(animation-name
						 , #{$names}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 再生中か一時停止かを指定する
// @param $playState		: アニメーション実行設定（一時停止 or 再開）（初期値はrunning）
// -------------------------------------------------
// animation-play-stateプロパティは、要素にキーフレームアニメーションを適用する場合に、 再生中か一時停止かを指定する際に使用します。
// 初期値はrunningでアニメーションが再生されますが、値にpausedを指定すると一時停止にすることができます。
// 一時停止中のアニメーションを再生するには、値をrunningにします。
// 一時停止中のアニメーションは、一時停止した時点の状態で静止して表示され続けます。
// 再開されるときには、アニメーションの最初からではなく、その状態から再生されます。
// 尚、animation-play-stateプロパティは、他の方法で同じ効果を得られるという理由から仕様からの削除が検討されています。
// 例えば、アニメーションを一度削除してから再指定するなどの方法で、再生と一時停止を切り替えることが可能なためです。
// -------------------------------------------------
// *************************************************
// ※アニメーション実行設定の設定値一覧
// runnnig					: アニメーションを再生中にする（初期値）
// paused					: アニメーションを一時停止にする
// *************************************************
// =================================================
@mixin animation-play-state($playState: running) {
	@include grantPrefix(animation-play-state
						 , #{$playState}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーションのタイミング・進行割合を指定する
// @param $timing			: アニメーションの進行割合（初期値はease）
// -------------------------------------------------
// animation-timing-functionプロパティは、要素にキーフレームアニメーションを適用する場合の、 アニメーションのタイミング・進行割合を指定する際に使用します。
// animation-timing-functionでは、アニメーションが継続している際に、 そのアニメーションの進行速度の割合を変更して調整することで動きを滑らかにすることができます。
// これは一般的にイージング機能と呼ばれるもので、 グラフィックソフトで曲線を描く際などに利用されるベジェ曲線と呼ばれる数学的な関数を使います。
// animation-timing-functionプロパティでは、アニメーションの進行割合を3次ベジェ曲線で指定します。
// animation-timing-functionプロパティの値には、 ease、linear、ease-in、ease-out、ease-in-outのいずれかのキーワード、
// または、 cubic-bezier関数（3次ベジェ関数）でP1とP2それぞれのXとYの値を指定します。 cubic-bezier関数で指定できる値は0～1の範囲内で、その範囲外の場合には無効となります。
// 尚、キーフレームアニメーションでは、animation-timing-functionプロパティの指定は、 アニメーション全体ではなくキーフレームごとに適用されます。
// 例えば、ease-in-out（ゆっくり始まってゆっくり終わる）を指定した場合、 アニメーションはキーフレームの開始時にゆっくりになり、キーフレームの終了時にゆっくりになります。
// -------------------------------------------------
// *************************************************
// ※アニメーションの進行割合の設定値一覧
// cubic-vezier				: 0～1の範囲内で変化時間軸を設定
// ease						: cubic-bezier(0.25, 0.1, 0.25, 1.0) を指定したのと同じ（開始と完了を滑らかにする）（初期値）
// linear					: cubic-bezier(0.0, 0.0, 1.0, 1.0) を指定したのと同じ（一定）
// ease-in					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-out					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-in-out				: cubic-bezier(0.42, 0, 0.58, 1.0) を指定したのと同じ（ゆっくり始まってゆっくり終わる）
// *************************************************
// =================================================
@mixin animation-timing-function($function: ease) {
	@include grantPrefix(animation-timing-function
						 , #{$function}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// アニメーションが適応される前後の状態を指定する
// @param $fillMode			: アニメーションの実行前後に指定したスタイルを適用するか（初期値はnone）
// -------------------------------------------------
// animation-fill-modeはkeyframesで作成したアニメーションが適応される前後の状態を指定できるプロパティです。
// animation-delayによりアニメーションが遅延されている場合はアニメーションが実行されるまでの時間、
// そしてアニメーションが終了したあとの状態をどのようにするかが指定できます。
// -------------------------------------------------
// *************************************************
// ※アニメーションの実行前後のスタイルの設定値一覧
// none						: デフォルトの値でアニメーションの前後にはスタイルを適用しません（初期値）
// backwards				: アニメーション終了後にそのスタイルを維持します。
// forwards					: アニメーション開始前に@keyframesが0%もしくはfromのスタイルを適用します。
// both						: backwardsとforwardsの両方のスタイルを適用します。
// *************************************************
// =================================================
@mixin animation-fill-mode($fill-mode: none) {
	@include grantPrefix(animation-fill-mode
						 , #{$fill-mode}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// プラットフォームにおける標準的なUIの外観にする
// @param $type				: タイプ（初期値はnormal）
// -------------------------------------------------
// appearanceプロパティは、ユーザーが利用するプラットフォームに応じて、 要素がその環境における標準的なUI（ユーザーインターフェース）のような外観になるよう指定する際に使用します。
// appearanceプロパティをサポートするユーザーエージェント（ブラウザ）は、 icon 、window 、button 、menu 、field の5つの値をサポートする必要があるとされています。
// この5つの値のそれぞれのグループの中には、さらに詳細な値が用意されていますが、 例えば、window グループの1つである dialog の値をサポートしていない場合には、window の値が適用されることになっています。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// normal					: 標準的な外観（初期値）
// icon						: アイコン
// window					: ウィンドウ
//	※特定種類のウィンドウを指定する値として以下のものがある
//	desktop					: システム全体を表示するウィンドウ（しばしば他のウィンドウを含む）
//	workspace				: プロジェクトやアプリケーションを表示するウィンドウ（他のウィンドウを含むこともある）
//	document				: ユーザードキュメントを表示するウィンドウ
//	tooltip					: 一時的にオブジェクトに関する情報やヘルプを表示するウィンドウ
//	dialog					: 操作の選択肢としてユーザーへの通知や代替手段を表示するウィンドウ
// button					: ボタン
//	※特定種類のボタンを指定する値として以下のものがある
//	push-button				: 押しボタン（たいていは三次元的に凸型になっている）
//	hyperlink				: ハイパーリンク（たいていは下線を付けて色を変えたテキスト）
//	radio-button			: ラジオボタン（チェックが付けられているかどうかを示す小さな円形のボタン）
//	checkbox				: チェックボックス（チェックが付けられているかどうかを示す小さな箱型のボタン）
//	menu-item				: メニュー内の1つの選択肢（階層メニューのラベルとして機能することもある）
//	tab						: タブ（タブ・インターフェースの一枠を示すボタン）
// menu						: メニュー
//	※特定種類のメニューを指定する値として以下のものがある
//	menubar					: メニューバー（主に水平方向に直線的に配置されたメニューのメニュー）
//	pull-down-menu			: プルダウンメニュー（メニュー名は表示されているが、オプション項目が隠れていて、ユーザー操作で表示させるメニュー）
//	pop-up-menu				: ポップアップメニュー（選択中のオプション項目以外はすべて隠れていて、ユーザー操作で表示させるメニュー）
//	list-menu				: リストメニュー（おそらく1つ以上の選択肢が用意されている選択メニュー）
//	radio-group				: ラジオグループ（選択肢がラジオボタンで表示されるメニュー）
//	checkbox-group			: チェックボックスグループ（選択肢がチェックボックスで表示されるメニュー）
//	outline-tree			: アウトラインツリー（小さな三角・プラス・マイナスなどの記号を操作して、選択肢の表示と非表示を切り替えられるメニュー）
//	range					: レンジ（スライダーをドラッグしたり、つまみを回して調節するメニュー）
// field					: フィールド
//	※特定種類のフィールドを指定する値として以下のものがある
//	combo-box				: コンボボックス（典型的な入力値がすばやく入力できるように入力候補が提示される入力欄）
//	signature				: 署名入力欄（署名を入力するための入力欄）
//	password				: パスワード入力欄（通常は入力値を目立たなくするために●などで表示される）
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin appearance($type: normal) {
	@include grantPrefix(appearance
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// flexアイテムの縦方向の整列を指定します
// @param $type 			: 配置タイプ（初期値はcenter）
// -------------------------------------------------
// flexアイテムの縦方向の整列を指定します。（flex-directionプロパティの値がcolumn、column-reverseのときは横方向）
// align-itemsプロパティはflexコンテナ（親要素）に指定して、すべてのflexアイテム（子要素）に同じ位置揃えを要求します。
// align-selfプロパティはflexアイテム（子要素）に指定して、個別のflexアイテム（子要素）の位置揃えを要求します。
// -------------------------------------------------
// *************************************************
// ※配置タイプの設定値一覧
// flex-start 				: 上揃えです。（flex-directionプロパティの値がcolumn、column-reverseのときは左揃え）
// flex-end 				: 下揃えです。（flex-directionプロパティの値がcolumn、column-reverseのときは右揃え）
// center					: 上下中央寄せです。
// baseline					: 最初のflexアイテムのbaselineに揃います。
// stretch					: flexコンテナいっぱいに広がります。
// *************************************************
// =================================================
@mixin align-items($type: center) {
	// 旧ブラウザ設定値を判定
	$oldParam: "";
	@if $type == "flex-start" {
		$oldParam: start;
	}
	@else if $type == "flex-end" {
		$oldParam: end;
	}
	@else if $type == "center" {
		$oldParam: center;
	}
	@else if $type == "space-between" {
		$oldParam: justify;
	}
	@else if $type == "space-around" {
		$oldParam: distribute;
	}
	@if $support-for-old-android {
		-webkit-box-align: #{$oldParam};
	}
	@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
		-ms-flex-align: #{$oldParam};
	}
	@include grantPrefix(align-items
						 , #{$type}
						 , false, -webkit, false, false, false, official
						);
}

// =================================================
// flexアイテム自身の縦方向の位置を指定します
// @param $type 			: 配置タイプ（初期値はauto）
// -------------------------------------------------
// align-self CSS プロパティはカレントの flex ラインの flex アイテムを、
// align-items の値を上書きして配置します。flex アイテムの cross-axis 側のマージンのいずれかが
// auto に設定されている場合、align-self は無視されます。
// -------------------------------------------------
// *************************************************
// ※配置タイプの設定値一覧
// auto 					: 親要素の align-items の値から計算します。または、親要素を持たない場合は stretch になります。
// flex-start 				: flex アイテムの cross-start 側マージンの端は、ラインの cross-start の端に寄せられます。
// flex-end 				: flex アイテムの cross-end 側マージンの端は、ラインの cross-end の端に寄せられます。
// center 					: flex アイテムのマージンボックスは、cross-axis 上でライン内の中央に置かれます。アイテムの cross-size が flex コンテナより大きい場合は、両方向へ均等にはみ出します。
// baseline 				: すべての flex アイテムは、ベースラインが一直線になるように配置されます。cross-start 側マージンの端とベースラインの間の距離が最大のアイテムが、ラインの cross-start の端に寄せられます。
// stretch 					: アイテムのマージンボックスの cross-size が、幅や高さの制約の範囲内でラインと同じになるように拡張されます。
// *************************************************
// =================================================
@mixin align-self($type: auto) {
	@include grantPrefix(align-self
						 , #{$type}
						 , false, -webkit, false, false, false, official
						);
}

// =================================================
// flexアイテムコンテナ内に縦方向の余白がある場合のタイプを設定する
// @param $type 			: 配置タイプ（初期値はcenter）
// -------------------------------------------------
// flex-directionの値が『row』『row-reverse』で（つまり横フローのとき）、
// flexコンテナ内の縦に余白がある場合、どのように一連のflexラインを並べるか指定するプロパティです。
// このプロパティは、flexコンテナ内にflexアイテムが一つしかないときは無効です。
// -------------------------------------------------
// *************************************************
// ※配置タイプの設定値一覧
// flex-start 				: flexコンテナの始端から並びます。
// flex-end 				: flex コンテナの終端に、flexアイテムの終端が合うように並びます。
// center					: flex コンテナの中央に並びます。
// space-between			: flex コンテナの中で均等に分布されます。
// space-around				: 始端と終端に空間が生まれます。その空間はflexアイテム同士の間隔の半分の幅です。
// stretch					: flexコンテナ内に余白が生まれないようにflexアイテムが伸びます。
// *************************************************
// =================================================
@mixin align-content($position: center) {
	@include grantPrefix(align-items
						 , #{$position}
						 , false, -webkit, false, false, false, official
						);
}

// ********************************************  B  **********************************************//

// =================================================
// 要素の背面の表示/非表示を切り替えるプロパティ
// @param $type				: 表示タイプ（初期値はvisible）
// -------------------------------------------------
// 要素に回転などの3D変形を適用した結果、要素ボックスの背面がユーザー側になるときに、
// 要素ボックスを表示するかどうかを指定できます。
// 背面を表示する場合は「visible」、要素ボックスを隠す場合は「hidden」を指定します。
// -------------------------------------------------
// *************************************************
// ※表示タイプの設定値一覧
// visible					: 背面を表示します。（初期値）
// hidden					: 要素ボックスを隠します。
// *************************************************
// =================================================
@mixin backface-visibility($type: visible) {
	@include grantPrefix(backface-visibility
						 , #{$type}
						 , false, -webkit, false, false, false, official
						);
}

// =================================================
// 背景画像を設定する
// @param $values			: 設定値一覧(背景色 背景画像パス 背景画像の繰り返し 背景画像を固定するかどうか 背景画像のX軸位置 背景画像のY軸位置)（初期値はtransparent）
// -------------------------------------------------
// backgroundプロパティは、背景に関する指定をまとめて行う際に使用します。 指定の順序は問われません。また、必要のない指定は省略可能です。
// -------------------------------------------------
// *************************************************
// ※背景色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: 背景色を透明にします。（初期値）
// *************************************************
// ※背景画像のパスの設定値一覧
// URI(URL)で指定			: URI（URL）で画像ファイルを指定します。
// none						: 背景に画像ファイルを使用しないことを明示します。（初期値）
// *************************************************
// ※背景画像の繰り返しの設定値一覧
// repeat					: 縦横に背景画像を繰り返して表示します。（初期値）
// repeat-x					: 横方向にのみ背景画像を繰り返して表示します。
// repeat-y					: 縦方向にのみ背景画像を繰り返して表示します。
// no-repeat				: 背景画像を一回だけ表示して繰り返しません。
// *************************************************
// 背景画像を固定するかどうかの設定値一覧
// fixed					: 背景画像の位置が固定され、スクロールしても動かなくなります。
// scroll					: スクロールに伴って、背景画像も移動します。
// *************************************************
// 背景画像のX軸位置の設定値一覧
// パーセントで指定			: 背景画像が表示される領域の左上からの距離を、％で指定します。例えば、background-position-x: 20%; と指定した場合、表示される領域の左端から20％の位置が背景画像の表示開始位置となります。
// 数値で指定				: 背景画像が表示される領域の左上からの距離を、数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。数値にはマイナスの値も指定することができます。
// left						: 0%と等しい
// center					: 50%と等しい
// right					: 100%と等しい
// *************************************************
// 背景画像のY軸位置の設定値一覧
// パーセントで指定			: 背景画像が表示される領域の左上からの距離を、％で指定します。例えば、background-position-x: 20%; と指定した場合、表示される領域の左端から20％の位置が背景画像の表示開始位置となります。
// 数値で指定				: 背景画像が表示される領域の左上からの距離を、数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。数値にはマイナスの値も指定することができます。
// top						: 0%と等しい
// center					: 50%と等しい
// bottom					: 100%と等しい
// *************************************************
// =================================================
@mixin background($values: transparent) {
	background: #{$values};
}

// =================================================
// 背景画像の動作を設定する
// @param $type				: 位置タイプ（初期値はfixed）
// -------------------------------------------------
// background-attachmentプロパティは、画面をスクロールする際、 背景画像をその位置に固定されたままにするか、
// スクロールに伴って移動するかどうかを指定します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// fixed					: 背景画像の位置が固定され、スクロールしても動かなくなります（初期値）
// scroll					: スクロールに伴って、背景画像も移動します
// *************************************************
// =================================================
@mixin background-attachment($type: fixed) {
	background-attachment: #{$type};
}

// =================================================
// 背景の色を設定する
// @param $color			: 背景色(初期値はtransparent)
// -------------------------------------------------
// background-colorプロパティは、背景色を指定する際に使用します。
// 背景色を指定する際には、同時に文字色も指定するようにしてください。
// ユーザーの環境で文字色が設定されている場合などに、 背景色と文字色が近い色になって文字が読みにくくなってしまうことがあるからです。
// -------------------------------------------------
// *************************************************
// ※背景色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: 背景色を透明にします。（初期値）
// *************************************************
// =================================================
@mixin background-color($color: transparent) {
	background-color: #{$color};
}

// =================================================
// 背景の画像を設定する
// @param $path				: 背景画像パス（初期値はnone）
// -------------------------------------------------
// background-imageプロパティは、背景画像を指定する際に使用します。 <BODY>や <TABLE>だけではなく、 <P>・ <DIV>・ <SPAN>などの要素にも背景画像を指定することができます。
// 背景画像はURLで指定します。 スタイルシート部分を外部ファイルにしている場合には、HTMLファイルから見た相対パスではなく、
// 外部スタイルシートファイルからの相対パスで指定しなくてはならないので注意してください。
// 背景に画像を指定する際には、背景色と文字色も同時に指定するようにしてください。
// これは、ユーザーの環境により背景画像が表示されない場合に、 背景色と文字色の関係により、文字が読みにくくなってしまうことがあるからです。
// -------------------------------------------------
// *************************************************
// ※背景画像パスの設定値一覧
// URI(URL)で指定			: URI（URL）で画像ファイルを指定します。
// none						: 背景に画像ファイルを使用しないことを明示します。（初期値）
// *************************************************
// =================================================
@mixin background-image($path: none) {
	background-image: #{$path};
}

// =================================================
// 背景画像の位置を設定する
// @param $values			: 設定値一覧（X軸ポジション Y軸ポジション[省略可]）（初期値はcenter）
// (第2引数を省略した場合は第1引数と同等になります)
// -------------------------------------------------
// background-positionプロパティは、背景画像の表示開始位置を指定するプロパティです。
// 背景画像の表示開始位置を％値や数値で指定する場合には、値を横方向・縦方向の順にスペースで区切って指定してください。
// -------------------------------------------------
// *************************************************-
// ※X軸ポジションの設定値一覧
// パーセントで指定			: 背景画像が表示される領域の左上からの距離を、横方向と縦方向の順で、％で指定します。例えば、background-position: 20% 40%; と指定した場合、表示される領域の左端から20％、上端から40％の位置が背景画像の表示開始位置となります。
// 数値で指定				: 背景画像が表示される領域の左上からの距離を、横方向と縦方向の順で、数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。数値にはマイナスの値も指定することができます。
// left						: 0%と同じ
// center					: 50%と同じ
// right					: 100%と同じ
// *************************************************-
// ※Y軸ポジションの設定値一覧
// パーセントで指定			: 背景画像が表示される領域の左上からの距離を、横方向と縦方向の順で、％で指定します。例えば、background-position: 20% 40%; と指定した場合、表示される領域の左端から20％、上端から40％の位置が背景画像の表示開始位置となります。
// 数値で指定				: 背景画像が表示される領域の左上からの距離を、横方向と縦方向の順で、数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。数値にはマイナスの値も指定することができます。
// top						: 0%と同じ
// center					: 50%と同じ
// bottom					: 100%と同じ
// *************************************************-
// =================================================
@mixin background-position($values: center) {
	$value: null;
	// 初期値を設定
	$x: center;
	$y: center;

	// 文字列の場合はパース
	@if type-of($values) == string {
		$value: str-split($value, " ");
	}

	// 設定数が1つ以上ある場合は1つ目をX軸ポジションに設定
	@if length($value) > 0 {
		$x: nth($value, 1);
	}

	// 設定数が2つ以上ある場合は2つ目をY軸ポジションに設定
	@if length($value) > 1 {
		$y: nth($value, 2);
	}

	//IE独自のプロパティに対応
	background-position-x: #{$x};
	background-position-y: #{$y};
	background-position: #{$values};
}

// =================================================
// 背景画像の横位置を指定する（IE独自の仕様）
// @param $x				: X軸ポジション（初期値はcenter）
// -------------------------------------------------
// background-position-xプロパティは、背景画像の横方向の表示開始位置を指定するプロパティです。
// このプロパティはInternet Explorerが独自に追加した仕様です。
// 背景画像の横方向の表示開始位置は、 background-positionプロパティでも指定できるので、
// あえてbackground-position-xプロパティを使用する必要は無いように思います。
// -------------------------------------------------
// *************************************************-
// ※X軸ポジションの設定値一覧
// パーセントで指定			: 背景画像が表示される領域の左上からの距離を、％で指定します。例えば、background-position-x: 20%; と指定した場合、表示される領域の左端から20％の位置が背景画像の表示開始位置となります。
// 数値 + 単位で指定		: 背景画像が表示される領域の左上からの距離を、数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。数値にはマイナスの値も指定することができます。
// left						: 0%と同じ
// center					: 50%と同じ
// right					: 100%と同じ
// *************************************************-
// =================================================
@mixin background-position-x($x: center) {
	background-position-x: #{$x};
}

// =================================================
// 背景画像の縦位置を指定する（IE独自の仕様）
// @param $y				: Y軸ポジション（初期値はcenter）
// -------------------------------------------------
// background-position-yプロパティは、背景画像の縦方向の表示開始位置を指定するプロパティです。
// このプロパティはInternet Explorerが独自に追加した仕様です。
// 背景画像の縦方向の表示開始位置は、 background-positionプロパティでも指定できるので、
// あえてbackground-position-yプロパティを使用する必要は無いように思います。
// -------------------------------------------------
// *************************************************-
// ※Y軸ポジションの設定値一覧
// パーセントで指定			: 背景画像が表示される領域の左上からの距離を、％で指定します。例えば、background-position-x: 20%; と指定した場合、表示される領域の左端から20％の位置が背景画像の表示開始位置となります。
// 数値 + 単位で指定		: 背景画像が表示される領域の左上からの距離を、数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。数値にはマイナスの値も指定することができます。
// left						: 0%と同じ
// center					: 50%と同じ
// right					: 100%と同じ
// *************************************************-
// =================================================
@mixin background-position-y($y: center) {
	background-position-y: #{$y};
}

// =================================================
// 背景画像の繰り返しを設定する
// @param $repeat-type		: リピート指定（初期値はrepeat）
// -------------------------------------------------
// background-repeatプロパティは、背景画像のリピートの仕方を指定する際に使用します。
// -------------------------------------------------
// *************************************************-
// ※リピート指定の設定値一覧
// repeat					: 縦横に背景画像を繰り返して表示します。これが初期値です。
// repeat-x					: 横方向にのみ背景画像を繰り返して表示します。
// repeat-y					: 縦方向にのみ背景画像を繰り返して表示します。
// no-repeat				: 背景画像を一回だけ表示して繰り返しません。
// *************************************************-
// =================================================
@mixin background-repeat($repeat: repeat) {
	background-repeat: #{$repeat};
}

// =================================================
// 背景画像の動作を設定する
// (ファイアーフォックスのみ「-box」に対応していない為、除去)
// @param $boxType			: ボックスタイプ（初期値はborder-box）
// -------------------------------------------------
// background-clipプロパティは、背景の適用範囲を指定する際に使用します。
// 尚、Firefox3以下は、content-boxの値をサポートしておらず、他の値については-boxを付けない値をサポートしているようです。
// -------------------------------------------------
// *************************************************
// ※ボックスタイプの設定値一覧
// border-box				: 背景をボーダーボックスに適用する（初期値）
// padding-box				: 背景をパティングボックスに適用する
// content-box				: 背景をコンテントボックスに適用する
// *************************************************
// =================================================
@mixin background-clip($boxType: border-box) {
	@include grantPrefix(background-clip
						 , #{$boxType}
						 , -moz, -webkit, -o, -khtml, -ms, official
						 , "moz"
						 , "-box"
						 , ""
						);
}

// =================================================
// 背景の基準位置を指定する
// (background-attachmentプロパティの値にfixedが指定されている場合には、background-originプロパティの指定は無効となります。)
// (ファイアーフォックスのみ「-box」に対応していない為、除去)
// @param $boxType			: ボックスタイプ（初期値はpadding-box）
// -------------------------------------------------
// background-originプロパティは、背景の基準位置を指定する際に使用します。
// background-attachmentプロパティの値にfixedが指定されている場合には、background-originプロパティの指定は無効となります。
// 尚、Firefox3以下は、-boxを付けない値をサポートしているようです。
// -------------------------------------------------
// *************************************************
// ※ボックスタイプの設定値一覧
// padding-box				: 背景をパディングボックスに対して相対的に適用する（初期値）
// border-box				: 背景をボーダーボックスに対して相対的に適用する
// content-box				: 背景をコンテントボックスに適用する
// *************************************************
// =================================================
@mixin background-origin($boxType: padding-box) {
	@include grantPrefix(background-clip
						 , #{$boxType}
						 , -moz, -webkit, -o, -khtml, -ms, official
						 , "moz"
						 , "-box"
						 , ""
						);
}

// =================================================
// 背景画像のサイズを指定する
// @param $values			: 設定値一覧（横幅 縦幅）（初期値はauto）
// -------------------------------------------------
// background-sizeプロパティは、背景画像のサイズを指定する際に使用します。
// 長さやパーセンテージで指定する場合、値を２つ記述すると、それぞれ記述した順に幅と高さを表します。
// １つだけ指定した場合には、もう１つはautoと解釈されます。負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※背景画像のサイズの設定値一覧
// auto						: 自動的に算出される（初期値）
// contain					: 縦横比は保持して、背景領域に収まる最大サイズになるように背景画像を拡大縮小する
// cover					: 縦横比は保持して、背景領域を完全に覆う最小サイズになるように背景画像を拡大縮小する
// 長さ						: 背景画像の幅・高さを指定する
// パーセンテージ			: 背景領域に対する背景画像の幅・高さのパーセンテージを指定する
// *************************************************
// =================================================
@mixin background-size($values: auto) {
	@include grantPrefix(background-size
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボーダー上側の設定する
// @param $values			: 設定値一覧（線の太さ 線のスタイル 線の色（初期値は0 none transparent）
// -------------------------------------------------
// border-topプロパティは、上ボーダーのスタイル・太さ・色を指定する際に使用します。
// スタイル・太さ・色のうち、指定する値を任意の順序でスペースで区切って記述します。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-top($values: 0 none transparent) {
	border-top: #{$values};
}

// =================================================
// ボーダー上側の線の色を設定する
// @param $color			: 線の色（初期値はtransparent）
// -------------------------------------------------
// border-top-colorプロパティは、上ボーダーの色を指定する際に使用します。
// 上下左右のボーダーの色をまとめて指定する際には、border-colorを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-top-color($color: transparent) {
	border-top-color: #{$color};
}

// =================================================
// ボーダー上側の線のスタイルを設定する
// @param $style			: 線のスタイル（初期値はnone）
// -------------------------------------------------
// border-top-styleプロパティは、上ボーダーのスタイルを指定する際に使用します。
// 上下左右のボーダーのスタイルをまとめて指定する際には、border-styleを使用してください。
// -------------------------------------------------
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// =================================================
@mixin border-top-style($style: none) {
	border-top-style: #{$style};
}

// =================================================
// ボーダー上側の線の太さを設定する
// @param $width			: 線の太さ（初期値は0）
// -------------------------------------------------
// border-top-widthプロパティは、上ボーダーの太さを指定する際に使用します。
// 上下左右のボーダーの太さをまとめて指定する際には、border-widthを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// =================================================
@mixin border-top-width($width: 0) {
	border-bottom-width: #{$width};
}

// =================================================
// ボーダー右側を設定する
// @param $values			: 設定値一覧（線の太さ 線のスタイル 線の色）（初期値は0 none transparent）
// -------------------------------------------------
// border-rightプロパティは、右ボーダーのスタイル・太さ・色を指定する際に使用します。
// スタイル・太さ・色のうち、指定する値を任意の順序でスペースで区切って記述します。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-right($values: 0 none transparent) {
	border-right: #{$values};
}

// =================================================
// ボーダー右側の線の色を設定する
// @param $color			: 線の色（初期値はtransparent）
// -------------------------------------------------
// border-right-colorプロパティは、右ボーダーの色を指定する際に使用します。
// 上下左右のボーダーの色をまとめて指定する際には、border-colorを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-right-color($color: transparent) {
	border-right-color: #{$color};
}

// =================================================
// ボーダー右側の線のスタイルを設定する
// @param $style			: 線のスタイル（初期値はnone）
// -------------------------------------------------
// border-right-styleプロパティは、右ボーダーのスタイルを指定する際に使用します。
// 上下左右のボーダーのスタイルをまとめて指定する際には、border-styleを使用してください。
// -------------------------------------------------
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// =================================================
@mixin border-right-style($style: none) {
	border-right-style: #{$style};
}

// =================================================
// ボーダー右側の線の太さを設定する
// @param $width			: 線の太さ（初期値は0）
// -------------------------------------------------
// border-right-widthプロパティは、右ボーダーの太さを指定する際に使用します。
// 上下左右のボーダーの太さをまとめて指定する際には、border-widthを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// =================================================
@mixin border-right-width($width: 0) {
	border-bottom-width: #{$width};
}

// =================================================
// ボーダー下側を設定する
// @param $values			: 設定値一覧（線の太さ 線のスタイル 線の色）（初期値は0 none transparent）
// -------------------------------------------------
// border-bottomプロパティは、下ボーダーのスタイル・太さ・色を指定する際に使用します。
// スタイル・太さ・色のうち、指定する値を任意の順序でスペースで区切って記述します。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// 値で指定					: pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-bottom($values: 0 none transparent) {
	border-bottom: #{$values};
}

// =================================================
// ボーダー下側の線の色を設定する
// @param $color			: 線の色（初期値はtransparent）
// -------------------------------------------------
// border-bottom-colorプロパティは、下ボーダーの色を指定する際に使用します。
// 上下左右のボーダーの色をまとめて指定する際には、border-colorを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-bottom-color($color: transparent) {
	border-bottom-color: #{$color};
}

// =================================================
// ボーダー下側の線のスタイルを設定する
// @param $style			: 線のスタイル（初期値はnone）
// -------------------------------------------------
// border-bottom-styleプロパティは、下ボーダーのスタイルを指定する際に使用します。
// 上下左右のボーダーのスタイルをまとめて指定する際には、border-styleを使用してください。
// -------------------------------------------------
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// =================================================
@mixin border-bottom-style($style: none) {
	border-bottom-style: #{$style};
}

// =================================================
// ボーダー下側の線の太さを設定する
// @param $width			: 線の太さ（初期値は0）
// -------------------------------------------------
// border-bottom-widthプロパティは、下ボーダーの太さを指定する際に使用します。
// 上下左右のボーダーの太さをまとめて指定する際には、border-widthを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// =================================================
@mixin border-bottom-width($width: 0) {
	border-bottom-width: #{$width};
}

// =================================================
// ボーダー左側を設定する
// @param $values			: 設定値一覧（線の太さ 線のスタイル 線の色）（初期値は0 none transparent）
// -------------------------------------------------
// border-leftプロパティは、左ボーダーのスタイル・太さ・色を指定する際に使用します。
// スタイル・太さ・色のうち、指定する値を任意の順序でスペースで区切って記述します。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-left($values: 0 none transparent) {
	border-left: #{$values};
}

// =================================================
// ボーダー左側の線の色を設定する
// @param $color			: 線の色（初期値はtransparent）
// -------------------------------------------------
// border-left-colorプロパティは、左ボーダーの色を指定する際に使用します。
// 上下左右のボーダーの色をまとめて指定する際には、border-colorを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-left-color($color: transparent) {
	border-left-color: #{$color};
}

// =================================================
// ボーダー左側の線のスタイルを設定する
// @param $style			: 線のスタイル（初期値はnone）
// -------------------------------------------------
// border-left-styleプロパティは、左ボーダーのスタイルを指定する際に使用します。
// 上下左右のボーダーのスタイルをまとめて指定する際には、 border-styleを使用してください。
// -------------------------------------------------
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// =================================================
@mixin border-left-style($style: none) {
	border-left-style: #{$style};
}

// =================================================
// ボーダー左側の線の太さを設定する
// @param $width			: 線の太さ（初期値は0）
// -------------------------------------------------
// border-left-widthプロパティは、左ボーダーの太さを指定する際に使用します。
// 上下左右のボーダーの太さをまとめて指定する際には、border-widthを使用してください。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// =================================================
@mixin border-left-width($width: 0) {
	border-left-width: #{$width};
}

// =================================================
// ボーダーを設定する
// @param $values			: 設定値一覧（線の太さ 線のスタイル 線の色）（初期値は0 none transparent）
// -------------------------------------------------
// borderプロパティは、ボーダーのスタイル・太さ・色をまとめて指定する際に使用します。 スタイル・太さ・色のうち、指定する値を任意の順序でスペースで区切って記述します。
// borderプロパティでは、ボーダーのスタイル・太さ・色について上下左右バラバラの指定をすることはできません。
// 上下左右のボーダーを異なったものにする場合には、 border-top、 border-bottom、 border-left、 border-right、
// または、 border-style、 border-width、 border-color、 で指定してください。
// -------------------------------------------------
// *************************************************
// ※線の太さの設定値一覧
// pxなどでも指定出来るが、キーワードでも指定可能。thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。これが初期値です。
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border($values: none) {
	border: #{$values};
}

// =================================================
// ボーダーの線の色を設定する
// @param $color			: カラー（初期値はtransparent）
// -------------------------------------------------
//  border-colorプロパティは、上下左右のボーダーの色をまとめて指定する際に使用します。
// 上下左右を異なった色にしたい場合には、スペースで区切って複数の値を指定します。
// 値を1つ指定した場合：	[上下左右]がその色になります。
// 値を2つ指定した場合：	記述した順に[上下][左右]の色になります。
// 値を3つ指定した場合：	記述した順に[上][左右][下]の色になります。
// 値を4つ指定した場合：	記述した順に[上][右][下][左]の色になります。
// 尚、ボーダーは太さや色だけを指定しても表示されないので注意してください。
// これは、border-styleプロパティの初期値がnoneとなっているためです。 ボーダーを表示させるには、太さや色だけでなく種類も同時に指定してやる必要があります。
// -------------------------------------------------
// *************************************************
// ※線の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// transparent				: ボーダーの色を透明にします。
// *************************************************
// =================================================
@mixin border-color($color: transparent) {
	border-color: #{$color};
}

// =================================================
// セルのボーダーの表示の仕方を設定する
// @param $layout-style		: レイアウトスタイル（初期値はcollapse）
// -------------------------------------------------
// border-collapseプロパティは、隣接するセルのボーダーを重ねて表示するか（collapse）、
// 間隔をあけて表示するか（separate）を指定します。
// -------------------------------------------------
// *************************************************
// ※レイアウトスタイル一覧
// collapse					: 隣接するセルのボーダーを重ねて表示します。（初期値）
// separate					: 隣接するセルのボーダーを間隔をあけて表示します。
// *************************************************
// =================================================
@mixin border-collapse($layout-style: collapse) {
	border-collapse: #{$layout-style};
}

// =================================================
// 角丸をまとめて指定する
// @param $values			: 設定値一覧（左上の半径 右上の半径 右下の半径 左下の半径）（初期値は設定ファイルの設定値）
// -------------------------------------------------
// border-radiusプロパティは、ボックスの４つのコーナーの角丸をまとめて指定する際に使用します。
// それぞれの角丸コーナーは４分の１楕円になりますが、楕円の形状は、水平方向と垂直方向の２つの半径の組み合わせで決定されます。
// border-radiusプロパティで角丸を指定する際には、それぞれのコーナーの楕円の形状を水平方向と垂直方向の半径のセットで表します。指定するのは、ボーダーの外側の輪郭です。
// 水平方向と垂直方向の半径のセットは、スラッシュ（ / ）で区切ります。スラッシュの前後に水平方向と垂直方向の半径の値を、左上・右上・右下・左下の順で指定します。
// 例: border-radius: 100px 25px 50px 50px / 50px 25px 50px 25px;
// -------------------------------------------------
// *************************************************
// ※半径の設定値一覧
// 値で指定					: 楕円半径の長さを指定する（初期値は設定ファイルの設定値）
// パーセンテージで指定		: ボーダーボックスの幅と高さに対する楕円半径のパーセンテージを指定する
// *************************************************
// =================================================
@mixin border-radius($values: $base-radius) {
	@include grantPrefix(border-radius
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 右上の角丸を指定する
// @param $values			: 設定値一覧（横幅の距離 縦幅距離）（初期値は設定ファイルの設定値）
// -------------------------------------------------
// border-top-right-radiusプロパティは、ボックスの右上の角丸を指定する際に使用します。
// 角丸の形状を指定する際には、水平方向と垂直方向の半径のセットで表します。指定するのは、ボーダーの外側の輪郭です。
// 角丸の楕円半径は、長さかパーセンテージで指定します。２つの値を記述しますが、１つ目の値は水平方向、２つ目の値は垂直方向の半径となります。
// ２つ目の値が省略された場合には、１つ目と同じ値になります。
// 尚、border-radiusプロパティを使用すると、ボックスの４つのコーナーの角丸をまとめて指定することができます。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値で指定					: 背景画像の幅・高さを指定する（初期値は設定ファイルの設定値）
// パーセンテージで指定		: 背景領域に対する背景画像の幅・高さのパーセンテージを指定する
// *************************************************
// =================================================
@mixin border-top-right-radius($values: $base-radius) {
	@include grantPrefix(border-top-right-radius
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 左上の角丸を指定する
// @param $values			: 設定値一覧（横幅の距離 縦幅距離）（初期値は設定ファイルの設定値）
// -------------------------------------------------
// border-top-left-radiusプロパティは、ボックスの左上の角丸を指定する際に使用します。
// 角丸の形状を指定する際には、水平方向と垂直方向の半径のセットで表します。指定するのは、ボーダーの外側の輪郭です。
// 角丸の楕円半径は、長さかパーセンテージで指定します。２つの値を記述しますが、１つ目の値は水平方向、２つ目の値は垂直方向の半径となります。
// ２つ目の値が省略された場合には、１つ目と同じ値になります。
// 尚、border-radiusプロパティを使用すると、ボックスの４つのコーナーの角丸をまとめて指定することができます。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値で指定					: 背景画像の幅・高さを指定する（初期値は設定ファイルの設定値）
// パーセンテージで指定		: 背景領域に対する背景画像の幅・高さのパーセンテージを指定する
// *************************************************
// =================================================
@mixin border-top-left-radius($values: $base-radius) {
	@include grantPrefix(border-top-left-radius
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 右下の角丸を指定する
// @param $values			: 設定値一覧（横幅の距離 縦幅距離）（初期値は設定ファイルの設定値）
// -------------------------------------------------
// border-bottom-right-radiusプロパティは、ボックスの右下の角丸を指定する際に使用します。
// 角丸の形状を指定する際には、水平方向と垂直方向の半径のセットで表します。指定するのは、ボーダーの外側の輪郭です。
// 角丸の楕円半径は、長さかパーセンテージで指定します。２つの値を記述しますが、１つ目の値は水平方向、２つ目の値は垂直方向の半径となります。
// ２つ目の値が省略された場合には、１つ目と同じ値になります。
// 尚、border-radiusプロパティを使用すると、ボックスの４つのコーナーの角丸をまとめて指定することができます。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値で指定					: 背景画像の幅・高さを指定する（初期値は設定ファイルの設定値）
// パーセンテージで指定		: 背景領域に対する背景画像の幅・高さのパーセンテージを指定する
// *************************************************
// =================================================
@mixin border-bottom-right-radius($values: $base-radius) {
	@include grantPrefix(border-bottom-right-radius
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 左下の角丸を指定する
// @param $values			: 設定値一覧（横幅の距離 縦幅距離）（初期値は設定ファイルの設定値）
// -------------------------------------------------
// border-bottom-left-radiusプロパティは、ボックスの左下の角丸を指定する際に使用します。
// 角丸の形状を指定する際には、水平方向と垂直方向の半径のセットで表します。指定するのは、ボーダーの外側の輪郭です。
// 角丸の楕円半径は、長さかパーセンテージで指定します。２つの値を記述しますが、１つ目の値は水平方向、２つ目の値は垂直方向の半径となります。
// ２つ目の値が省略された場合には、１つ目と同じ値になります。
// 尚、border-radiusプロパティを使用すると、ボックスの４つのコーナーの角丸をまとめて指定することができます。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値で指定					: 背景画像の幅・高さを指定する（初期値は設定ファイルの設定値）
// パーセンテージで指定		: 背景領域に対する背景画像の幅・高さのパーセンテージを指定する
// *************************************************
// =================================================
@mixin border-bottom-left-radius($values: $base-radius) {
	@include grantPrefix(border-bottom-left-radius
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボーダーの線のスタイルを設定する
// @param $style			: 線のスタイル（初期値はnone）
// -------------------------------------------------
//  border-styleプロパティは、上下左右のボーダーのスタイルをまとめて指定する際に使用します。 上下左右を異なったスタイルにしたい場合には、スペースで区切って複数の値を指定します。
// 値を1つ指定した場合：	[上下左右]がそのスタイルになります。
// 値を2つ指定した場合：	記述した順に[上下][左右]のスタイルになります。
// 値を3つ指定した場合：	記述した順に[上][左右][下]のスタイルになります。
// 値を4つ指定した場合：	記述した順に[上][右][下][左]のスタイルになります。
// -------------------------------------------------
// *************************************************
// ※線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合は他の値が優先されます。（初期値）
// hidden					: ボーダーは表示されず、太さも0になります。表のセルなどのボーダーが重なり合う場合はこの値が優先されます。
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のボーダーが暗く、下と右のボーダーが明るく表示され、ボーダーで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のボーダーが明るく、下と右のボーダーが暗く表示され、ボーダーで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// =================================================
@mixin border-style($style: none) {
	border-style: #{$style};
}

// =================================================
// セルのボーダーの間隔を設定する
// @param $values			: 設定値一覧（値1 値2）（初期値は0）
// -------------------------------------------------
// border-spacingプロパティは、隣接するセルのボーダーとボーダーの間隔を指定する際に使用します。
// border-spacingプロパティは、border-collapseプロパティの値がseparateのときに有効となります。
// 値を1つ指定した場合： [上下左右]の間隔が指定された値になります。
// 値を2つ指定した場合： 記述した順に[左右][上下]の間隔が指定された値になります。
// 尚、border-spacingプロパティに負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin border-spacing($values: 0) {
	border-spacing: #{$values};
}

// =================================================
// 画像ボーダーの太さを指定する
// @param $values			: 設定値一覧（値1 値2 値3 値4）（初期値は0）
// -------------------------------------------------
// border-widthプロパティは、上下左右のボーダーの太さをまとめて指定する際に使用します。
// 上下左右を異なった太さにしたい場合には、スペースで区切って複数の値を指定します。
// 値を1つ指定した場合：	[上下左右]がその太さになります。
// 値を2つ指定した場合：	記述した順に[上下][左右]の太さになります。
// 値を3つ指定した場合：	記述した順に[上][左右][下]の太さになります。
// 値を4つ指定した場合：	記述した順に[上][右][下][左]の太さになります。
// 尚、ボーダーは太さや色だけを指定しても表示されないので注意してください。
// これは、border-styleプロパティの初期値がnoneとなっているためです。
// ボーダーを表示させるには、太さや色だけでなく種類も同時に指定してやる必要があります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin border-width($values: 0) {
	@include grantPrefix(border-width
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 画像ボーダーを指定する
// $values					: 設定値一覧（ボーダーの画像パス 画像のボーダー使用範囲[上・右・下・左] ボーダー画像の太さ ボーダーイメージエリアの広がり 画像の繰り返し）（初期値はnone）
// (画像のスライス距離を省略した場合は初期値が適用されます。引数によって対象の設定値が同等の値で設定されます)
// -------------------------------------------------
// border-imageプロパティは、画像ボーダーについてまとめて指定する際に使用します。
// border-imageプロパティでは、border-image-source、border-image-slice、border-image-width、border-image-outset、border-image-repeatの各プロパティの値を、
// まとめて指定することができます。省略された値はそれらの初期の値に設定されます。
// 現在のところ、個別のプロパティをサポートしているブラウザは無いようなので、画像ボーダーを実現する際には、border-imageプロパティを利用するのが一般的です。
// border-imageプロパティでも、border-image-outsetの値はブラウザでサポートされていないようです。
// 画像は上下左右それぞれのボーダー用に４枚必要となるわけではなく、１枚の画像で上下左右の画像ボーダーを実現します。
// 画像ボーダーの描画プロセスは以下の順序になります。
//  1.border-image-sourceでボーダーに使用する画像が指定される
//  2.border-image-sliceで画像の端から内側へスライスする距離が指定され、画像が９つのイメージパーツに分割される
//  3.border-image-widthで画像ボーダーの太さが指定される（border-widthで代替可）
//  4.border-image-repeatのキーワードstretch・round・repeat・spaceで、画像の繰り返し方法が指定される
//  5.画像タイルの開始位置が決定され、ボーダーイメージエリアに合わせて拡大縮小されてタイル状に敷き詰められる
// -------------------------------------------------
// *************************************************
// ※ボーダーの画像パスの設定値一覧
// none						: ボーダーに画像を使用しない（初期値）
// 画像ファイルのURI		: ボーダーに使用する画像ファイルのURIを指定する（例:url(../images/sample.gif)）
//							  （画像は9つに分割されてボーダー画像に使用されます）
// *************************************************
// ※画像のスライス距離の設定値一覧
// 数値で指定				: 上: 画像上端からの距離 / 右: 画像右端からの距離 / 下: 画像下端からの距離 / 左: 画像左端からの距離
// *************************************************
// ※ボーダーイメージエリアの広がりの設定値一覧
// 数値で指定				: border-widthの倍数を指定する
// *************************************************
// ※画像の繰り返しの設定値一覧
// stretch					: 画像が引き伸ばされて領域を埋める（初期値）
// round					: 画像がタイル状に繰り返されて領域を埋める。タイルが整数で並ばない場合には、並ぶように画像が拡大縮小される
// repeat					: 画像がタイル状に繰り返されて領域を埋める
// space					: 画像がタイル状に繰り返されて領域を埋める。タイルが整数で並ばない場合には、余ったスペースがタイルの周囲に分配される
// *************************************************
// =================================================
@mixin border-image($values: none) {
	@include grantPrefix(border-image
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボーダーイメージエリアを広げる
// @param $values			: 設定値一覧（上側の距離 右側の距離 下側の距離 左側の距離）（初期値は0）
// -------------------------------------------------
// border-image-outsetプロパティは、ボーダーイメージエリアを広げる際に使用します。
// ボーダーイメージエリアとは画像ボーダーが描かれる領域のことで、初期値ではボーダーボックスと同じ領域ですが、
// そこから外側に広げる距離を上・右・下・左それぞれの値で指定します。値は省略することができますが、その場合には以下のルールに基づいて解釈されます。
// ・4番目の値が省略された場合には、2番目の値と同じ。
// ・3番目の値が省略された場合には、1番目の値と同じ。
// ・2番目の値が省略された場合には、1番目の値と同じ。
// border-image-outsetプロパティには負の値を指定することはできません。
// ボーダーボックスの外側に描画された画像ボーダー部分は、スクロールの対象にはなりません。また、この部分はマウスイベントから隠されており、要素の代わりにイベントを捕らえることはありません。
// 尚、border-imageプロパティを使用すると、画像ボーダーについてまとめて指定することができます。
// -------------------------------------------------
// *************************************************
// ※リピート設定値一覧
// 数値						: border-widthの倍数を指定する
// *************************************************
// =================================================
@mixin border-image-outset($values: 0) {
	border-image-outset: #{$values};
}

// =================================================
// 画像のボーダー使用範囲を指定する
// @param $slice			: 画像のボーダー使用範囲（上側からの距離 右側からの距離 下側からの距離 左側からの距離）（初期値はnone）
// -------------------------------------------------
// border-image-sliceプロパティは、画像のボーダー使用範囲を指定する際に使用します。
// ボーダーに使用する画像は、９つの領域に分けられ、４つのコーナーと４つの中間部分が画像ボーダーとして利用されます。
// 真ん中部分は初期値では捨てられて空白となりますが、キーワードにfillを指定すると背景の上に表示されるようになります。
// border-image-sliceプロパティで指定する４つの値は、ボーダーに使用する画像のそれぞれ上・右・下・左の端から内側へのオフセット量を表します。
// 値は省略することもできますが、その場合には以下のルールに基づいて解釈されます。
// ・4番目の値が省略された場合には、2番目の値と同じ。
// ・3番目の値が省略された場合には、1番目の値と同じ。
// ・2番目の値が省略された場合には、1番目の値と同じ。
// border-image-sliceプロパティには、負の値を指定することはできません。
// また、画像サイズより大きな値を指定した場合には100%と解釈されます。
// 値の指定のしかたによっては、領域が重複するかもしれません。もし、 指定した値の左右や上下の幅の合計が画像の幅や高さ以上となった場合には、
// その領域は透明画像が適用されたのと同じ効果となります。
// -------------------------------------------------
// *************************************************
// ※画像のスライス距離の設定値一覧
// 数値 + 単位で指定		: 画像の場合にはピクセル値、ベクター図形の場合には座標値を指定する
// パーセンテージで指定		: 画像の幅と高さに対する、水平方向と垂直方向のオフセット量のパーセンテージを指定する
// fill						: fillを指定すると、真ん中部分も画像ボーダーで埋められる（初期値では、真ん中部分は捨てられて空白となる）
// *************************************************
// =================================================
@mixin border-image-slice($slice: none) {
	@include grantPrefix(border-image-source
						 , #{$slice}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボーダーに使用する画像ファイルを指定する
// @param $source			: ボーダーの画像パス（初期値はnone）
// -------------------------------------------------
// border-image-sourceプロパティは、ボーダーに使用する画像ファイルを指定する際に使用します。
// 画像は上下左右それぞれのボーダー用に４枚必要となるわけではなく、１枚の画像で上下左右の画像ボーダーを実現します。
// border-image-sourceを指定すると、 border-styleで指定されるボーダースタイルの代わりに、 画像ボーダーのレイヤーが背景に挿入されて描画されます。
// 値にnoneが指定された場合や画像を表示できない場合には、border-styleの値が適用されます。
// 尚、border-imageプロパティを使用すると、画像ボーダーについてまとめて指定することができます。
// -------------------------------------------------
// *************************************************
// ※ボーダーの画像パスの設定値一覧
// none						: ボーダーに画像を使用しない（初期値）
// 画像ファイルのURI		: ボーダーに使用する画像ファイルのURIを指定する（例:url(../images/sample.gif)）
//							  （画像は9つに分割されてボーダー画像に使用されます）
// *************************************************
// =================================================
@mixin border-image-source($source: none) {
	@include grantPrefix(border-image-source
						 , #{$source}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス内の子要素の縦方向の揃え位置を指定する
// @param $type				: タイプ（初期値はstretch）
// -------------------------------------------------
// box-alignプロパティは、ボックス内の子要素の縦方向の揃え位置を指定する際に使用します。
// コンテナボックスのサイズが子のサイズより大きい場合にはスペースが余りますが、 box-alignプロパティを使用することで、
// ボックス内の子要素を揃える位置、および、 スペースが余った場合にはそれらをどう表示するかを指定することができます。
// 尚、「“縦方向”の揃え位置」と解説しましたが、 正確には、ボックス内の子要素の配置方向が水平（初期値）の場合、垂直方向（縦方向）の揃え位置を指定します。
// もし、box-orient:vertical を指定して ボックス内の子要素の配置方向を垂直にしている場合には、水平方向（横方向）の揃え位置を指定します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// start					: 標準方向のボックスでは、それぞれの子の上端がボックスの上部に揃えられ、余ったスペースは要素の下に配置される。
//							  逆方向のボックスでは、それぞれの子の下端がボックスの下部に揃えられ、余ったスペースは要素の上に配置される。
// endt						: 標準方向のボックスでは、それぞれの子の下端がボックスの下部に揃えられ、余ったスペースは要素の上に配置される。
//							  逆方向のボックスでは、それぞれの子の上端がボックスの上部に揃えられ、余ったスペースは要素の下に配置される。
// center					: 余ったスペースは子の前後に均等に分割される。結果としてボックス内の子要素はセンタリングされる。
// baseline					: box-orientプロパティの値が inline-axis か horizontal の場合、 すべての子はそれらのベースラインが揃うように配置され、
//							  余ったスペースは必要に応じて前後に配置される。 子要素がブロックボックスの場合には要素内の最初の行、table要素の場合には最初のセルのベースラインが利用される。 尚、box-orientプロパティの値が block-axis か vertical の場合には、 box-alignプロパティの値に baseline を指定しても center として解釈される。
// stretch					: それぞれの子の高さがコンテナブロックの高さに合わせられる。（初期値）
// *************************************************
// =================================================
@mixin box-align($type: stretch) {
	@include grantPrefix(box-align
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックスが改行する際の表示形式を指定する
// @param $type				: タイプ（初期値はslice）
// -------------------------------------------------
// box-decoration-breakプロパティは、ボックスが改行する際の表示形式を指定する際に使用します。
// ボックスが改ページやカラムの改行で分割されたり、インライン要素が改行で分割される場合に、
// 分割されたボックスの断片をひとつの連続したボックスの一部とするか（slice）、
// 分割されたボックスの断片それぞれにボーダーやパディングや背景を適用するか（slice）を指定します。
// インライン要素の改行される位置は、そのインライン要素を含むブロックではなく、インライン要素の進行方向で決まります。
// 例えば、direction:ltr（左から右）が指定されたブロック内に、direction:rtl（右から左）が指定されたインライン要素がある場合、インライン要素はボックスの左側で改行されるでしょう。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// slice					: 改行部分にはボーダー・パディングは挿入されず、その角には角丸は適用されない。画像ボーダーはボックス全体に対して描画される。
//							  ボックス全体にスタイルが適用された後で分割されたような状態となる（初期値）
// clone					: ボーダー・パディング・角丸・画像ボーダー・背景は、分割されたボックスの断片それぞれに適用される。
//							  no-repeatを指定した背景画像は、分割されたボックスの断片それぞれに一回描画される
// *************************************************
// =================================================
@mixin box-decoration-break($type: slice) {
	@include grantPrefix(box-decoration-break
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス内の子要素の表示方向を指定する
// @param $type				: タイプ（初期値はnormal）
// -------------------------------------------------
// box-directionプロパティは、ボックス内の子要素の表示方向を指定する際に使用します。
// box-directionプロパティの値が normal の場合、子ボックスの左端は、前の子の右端の隣に配置されるか、最初の子ボックスの左端と揃えられます。
// box-directionプロパティの値が reverse の場合、 子ボックスの右端は、前の子の左端の隣に配置されるか、最初の子ボックスの右端と揃えられます。
// 尚、ボックスにoverflowプロパティの値をvisible・scroll・autoのいずれかに指定すると、内容がはみ出して表示されることがあります。
// この際、box-directionプロパティの値を normal にすると、内容が右側か下側にはみ出します。 box-directionプロパティの値を reverse にすると、内容が左側か上側にはみ出します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// normal					: box-orientプロパティで水平に設定されているボックスの場合は左から右へ表示される。
//							  box-orientプロパティで垂直に設定されているボックスの場合は上から下へ表示される。（初期値）
// reverse					: box-orientプロパティで水平に設定されているボックスの場合は右から左へ表示される。
//							  box-orientプロパティで垂直に設定されているボックスの場合は下から上へ表示される。
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin box-direction($type: normal) {
	@include grantPrefix(box-direction
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 伸縮ボックスの伸縮比率を指定する
// @param $flexValue		: 伸縮比率（初期値は0.0）
// -------------------------------------------------
// box-flexプロパティは、伸縮ボックスの伸縮比率を指定する際に使用します。
// ここで言う伸縮ボックスとは、box-flexプロパティが指定された要素を指しています。
// ボックス内に余ったスペースがある場合に box-flexプロパティをボックス要素内の子要素に指定すると、子ボックスが引き伸ばされてスペースが埋められます。
// box-flexプロパティの値は数値で指定しますが、ボックス内の子要素は指定数値に応じた比率で伸縮します。
// 例えば、box-flexプロパティの値に2を指定した子要素は、1を指定した子要素の2倍伸縮します。
// 初期値は0で子要素は伸縮しません。 また、box-flexプロパティに負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※伸縮比率の設定値一覧
// 数値で指定				: 要素が伸縮する比率を正の数値で指定する（初期値は0.0）
// *************************************************
// =================================================
@mixin box-flex($flexValue: 0.0) {
	@include grantPrefix(box-flex
						 , #{$flexValue}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 伸縮ボックスにグループを割り当てて伸縮の優先順位を指定する
// @param $priority			: 優先順位（初期値は1）
// -------------------------------------------------
// box-flex-groupプロパティは、伸縮ボックスにグループを割り当てて伸縮の優先順位を指定する際に使用します。
// box-flex-groupプロパティの値は自然数（1以上の整数）で指定しますが、この数値により伸縮の優先順位が決まります。
// 最優先する伸縮グループには1、その後に続く伸縮グループにはそれ以上の値を指定します。
// -------------------------------------------------
// *************************************************
// ※優先順位の設定値一覧
// 自然数で指定				: 自然数（1以上の整数）で伸縮の優先順位を指定（初期値は1）
// *************************************************
// =================================================
@mixin box-flex-group($priority: 1) {
	@include grantPrefix(box-flex-group
						 , #{$priority}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス内を複数行（複数列）にするかどうかを指定する
// @param $type				: タイプ（初期値はsingle）
// -------------------------------------------------
// box-linesプロパティは、ボックス内を複数行（複数列）にするかどうかを指定する際に使用します。
// 初期値はsingleです。 この場合、水平方向のボックスではその中のすべての子要素が一行に、垂直方向のボックスでは一列にレイアウトされます。
// ボックス内に収まらない要素は単純にはみ出します。
// 値にmultipleを指定すると、ボックスがその中の子要素をすべて収めるために、 複数行（垂直方向の場合は複数列）に展開するようになります。
// ボックス内の子要素が一行（一列）に収まりきらない場合には、順次新しい行（列）に改行（改列）されます。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// single					: ボックス内の子要素が一行で（垂直方向のボックスでは一列で）レイアウトされる（初期値）
// multiple					: ボックス内の子要素のすべてを収めるために、複数行（垂直方向の場合は複数列）に展開する
// *************************************************
// =================================================
@mixin box-lines($type: single) {
	@include grantPrefix(box-lines
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス内の子要素に並び順グループを割り当てる
// @param $order			: 表示順序（初期値は1）
// -------------------------------------------------
// box-ordinal-groupプロパティは、ボックス内の子要素に並び順グループを割り当てる際に使用します。
// 子要素の並び順は、自然数（0を含まない正の整数）で指定します。
// -------------------------------------------------
// *************************************************
// ※表示順序の設定値一覧
// 自然数で指定				: 自然数（0を含まない正の整数）で子要素の並び順を指定する（初期値は1）
// *************************************************
// =================================================
@mixin box-ordinal-group($order: 1) {
	@include grantPrefix(box-ordinal-group
						 , #{$order}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス内の子要素の配置方向を指定する
// @param $type				: タイプ（初期値はinline-axis）
// -------------------------------------------------
// box-orientプロパティは、フレキシブルボックス内の子要素の配置方向を指定する際に使用します。
// フレキシブルボックスとは、サイズや配置を相対的に指定できる柔軟なボックスのことです。
// ブロックレベルボックスをフレキシブルボックスにするには、displayプロパティの値に box を指定します。
// また、インラインボックスをフレキシブルボックスにするには、displayプロパティの値に inline-box を指定します。
// 例えば、<div>～</div>に display:box を指定すると、このdiv要素はフレキシブルボックスとなります。
// このフレキシブルボックスの中にある<div>～</div>などの子ボックス達が水平に並んで、 あたかも全体がひとつのボックスであるかのように表示されます。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// horizontal				: ボックス内の子要素は、左から右へ水平に表示される
// vertical					: ボックス内の子要素は、上から下へ垂直に積み重ねて表示される
// inline-axis				: ボックス内の子要素は、インライン軸に沿って表示される（初期値）
// block-axis				: ボックス内の子要素は、ブロック軸に沿って表示される
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin box-orient($type: inline-axis) {
	@include grantPrefix(box-orient
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス内の子要素の横方向の揃え位置を指定する
// @param $type				: タイプ（初期値はstart）
// -------------------------------------------------
// box-packプロパティは、ボックス内の子要素の横方向の配置を指定する際に使用します。
// ボックス内にスペースが余った場合に、そのスペースをどのように要素間に割り付けるかを指定することができます。
// box-packプロパティは、box-orientプロパティで指定された要素の配置方向にのみ適用されます。
// つまり、水平配置されたボックスの水平方向に適用されるか、垂直配置されたボックスの垂直方向に適用されます。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// start					: 標準方向のボックスでは、最初の子の左端がボックスの左側に揃えられる。余ったスペースはすべて最後の子の後に配置される。
//							  逆方向のボックスでは、最後の子の右端がボックスの右側に揃えられる。余ったスペースはすべて最初の子の前に配置される。（初期値）
// end						: 標準方向のボックスでは、最後の子の右端がボックスの右側に揃えられる。余ったスペースはすべて最初の子の前に配置される。
//							  逆方向のボックスでは、最初の子の左端がボックスの左側に揃えられる。余ったスペースはすべて最後の子の後に配置される。
// center					: 余ったスペースは子の前後に均等に分割される。結果としてボックス内の子要素はセンタリングされる。
// justify					: 余ったスペースは各子の間に均等に分割され、最初の子の前と最後の子の後にはスペースは配置されない。
//							  子が1つしか存在しない場合には、startと同じ表示となる。
// *************************************************
// =================================================
@mixin box-pack($type: start) {
	@include grantPrefix(box-pack
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックスに影をつける
// @param $values			: 設定値一覧（水平方向の位置 垂直方向の位置 ぼかしの距離 広がりの距離 影の色 内側に向けて影を付けるか）（初期値はnone）
// -------------------------------------------------
// box-shadowプロパティは、ボックスに1つまたは複数の影をつける際に使用します。 box-shadowプロパティでは、例えば以下のように影を指定します。
// 例: box-shadow: 10px 10px;
//	 box-shadow: 10px 10px 10px rgba(0,0,0,0.4);
//	 box-shadow: 10px 10px 10px 10px rgba(0,0,0,0.4);
//	 box-shadow: 10px 10px 10px 10px rgba(0,0,0,0.4) inset;
// 影は2～4つの長さの値で定義されますが、任意で色、insetキーワードを指定することもできます。
// insetキーワードを付けると、影がボックスの外側ではなく内側につくようになります。
// 長さの指定を省略すると0となり、色の指定を省略するとユーザーエージェントが選んだ色になります。
// 複数の影を指定する場合には、カンマ（ , ）区切りで影のリストを複数指定します。
// 影を定義する指定内容は、以下のように解釈されます。
// ・1番目の長さの値は、水平方向の影のオフセット距離です。正の値を指定すると右へ、負の値を指定すると左へ影が移動します。
// ・2番目の長さの値は、垂直方向の影のオフセット距離です。正の値を指定すると下へ、負の値を指定すると上へ影が移動します。
// ・3番目の長さの値は、ぼかし距離です。負の値を指定することはできません。 値が大きいほど影の端のぼかしが強くなり、値が0の場合には端がくっきりとした影となります。
// ・4番目の長さの値は、広がり距離です。正の値を指定すると影の形状を全方向に拡大、負の値を指定すると縮小します。
// ・色の値を指定すると、影がその色になります。
// ・insetキーワードを指定すると、ボックスの外側の影から内側の影に変更されます。
// 尚、box-shadowプロパティは、::first-letter擬似要素に適用されますが、::first-line擬似要素には適用されません。 また、border-collapse:collapse;が指定されたtable内要素には、外側の影はつきません。
// テキストに影をつける場合には、text-shadowプロパティを使用します。
// -------------------------------------------------
// *************************************************
// 設定値一覧
// none						: 要素に影をつけない（初期値）
// 値						: スペース区切りで、水平方向の距離 垂直方向の距離 ぼかし距離 広がり距離 影の色 insetキーワードを指定する。 ぼかし距離 広がり距離 影の色 insetキーワードは省略可
// *************************************************
// =================================================
@mixin box-shadow($values...) {
	$value: "";
	@if length($values) == 0 {
		$value: none;
	}
	@else{
		@each $param in $values {
			@if $value != "" {
				$value: $value, $param;
			}
			@else {
				$value: $param;
			}
		}
	}
	@include grantPrefix(box-shadow
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// box-sizingを設定する
// @param $type				: タイプ（初期値はcontent-box）
// -------------------------------------------------
// box-sizingプロパティは、ボックスサイズの算出方法を指定する際に使用します。
// 値にcontent-boxを指定すると、 widthとheightで指定する幅と高さが内容領域に対して適用されます。
// 幅と高さにはパディングとボーダーは含まれません。 これはCSS2.1の仕様通りの解釈で、DOCTYPEスイッチの標準モードのような表示になります。
// 値にborder-boxを指定すると、widthとheightで指定する幅と高さがボーダーボックスに対して適用されます。
// 内容領域にパディングとボーダーを含んだ範囲に対して幅と高さが適用されるため、 パディングとボーダーの分だけボックスサイズが小さくなります。
// DOCTYPEスイッチの互換モードのような表示になります。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// content-box				: パディングとボーダーを幅と高さに含めない（初期値）
// border-box				: パディングとボーダーを幅と高さに含める
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin box-sizing($type: content-box) {
	@include grantPrefix(box-sizing
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス前でのカラムの区切り方法を指定する
// @param $type				: タイプ（初期値はauto）
// -------------------------------------------------
// break-beforeプロパティは、ボックス前でのカラムの区切り方法を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// auto						: ボックス前(での改ページ/カラム区切りを強制も禁止もしない（初期値）
// always					: ボックス前(での改ページ/カラム区切りを常に強制する
// avoid					: ボックス前(での改ページ/カラム区切りを避ける
// left						: 次ページが左ページとして始まるように、ボックス前(で1または2ページの改ページを強制する
// right					: 次ページが右ページとして始まるように、ボックス前(で1または2ページの改ページを強制する
// page						: ボックス前(での改ページを常に強制する
// column					: ボックス前(でのカラム区切りを常に強制する
// avoid-page				: ボックス前(での改ページを避ける
// avoid-column				: ボックス前(でのカラム区切りを避ける
// *************************************************
// =================================================
@mixin break-before($type: auto) {
	@include grantPrefix(break-before
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス途中でのカラムの区切り方法を指定する
// @param $type				: タイプ（初期値はauto）
// -------------------------------------------------
// break-insideプロパティは、ボックス途中でのカラムの区切り方法を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// auto						: ボックス途中(での改ページ/カラム区切りを強制も禁止もしない（初期値）
// avoid					: ボックス途中(での改ページ/カラム区切りを避ける
// avoid-page				: ボックス途中(での改ページを避ける
// avoid-column				: ボックス途中(でのカラム区切りを避ける
// *************************************************
// =================================================
@mixin break-inside($type: auto) {
	@include grantPrefix(break-inside
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// ボックス後でのカラムの区切り方法を指定する
// @param $type				: タイプ（初期値はauto）
// -------------------------------------------------
// break-afterプロパティは、ボックス後でのカラムの区切り方法を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// auto						: ボックス後での改ページ/カラム区切りを強制も禁止もしない（初期値）
// always					: ボックス後での改ページ/カラム区切りを常に強制する
// avoid					: ボックス後での改ページ/カラム区切りを避ける
// left						: 次ページが左ページとして始まるように、ボックス後で1または2ページの改ページを強制する
// right					: 次ページが右ページとして始まるように、ボックス後で1または2ページの改ページを強制する
// page						: ボックス後での改ページを常に強制する
// column					: ボックス後でのカラム区切りを常に強制する
// avoid-page				: ボックス後での改ページを避ける
// avoid-column				: ボックス後でのカラム区切りを避ける
// *************************************************
// =================================================
@mixin break-after($type: auto) {
	@include grantPrefix(break-after
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 下からの配置位置（距離）を設定する
// @param $distance			: 距離（初期値はauto）
// -------------------------------------------------
// bottomプロパティは、ボックスを配置する場合の、下からの配置位置（距離）を指定する際に使用します。
// 下からの配置位置（距離）とは、基準位置の下l端から配置するボックスの下端までの距離を指します。
// bottomプロパティで指定するのは基準位置からの距離のみです。
// 実際の表示位置の指定には、positionプロパティを併用して、配置方法（基準位置）を設定する必要があります。
// 尚、bottomプロパティの値は、positionプロパティの値がstatic以外のときに有効となります。
// -------------------------------------------------
// *************************************************
// ※距離の設定値一覧
// auto						: 自動的に調整されます。（初期値）
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: 基準となる親ボックスの幅・高さに対する割合を％値で指定します。
// *************************************************
// =================================================
@mixin bottom($distance: auto) {
	bottom: #{$distance};
}

// ********************************************  C  **********************************************//

// =================================================
// テーブル（表）のキャプションの位置を設定する
// (tableの中の<caption>の位置を設定)
// @param $position			: 表示位置（初期値はtop）
// -------------------------------------------------
// caption-sideプロパティは、テーブル（表）のキャプションの位置を指定する際に使用します。
// 指定できるキャプションの位置は、テーブルの上下左右（top、bottom、left、right）です。
// -------------------------------------------------
// *************************************************
// ※表示位置の設定値一覧
// top						: キャプションをテーブル（表）の上に表示します。（初期値）
// bottom					: キャプションをテーブル（表）の下に表示します。
// left						: キャプションをテーブル（表）の左に表示します。
// right					: キャプションをテーブル（表）の右に表示します。
// *************************************************
// =================================================
@mixin caption-side($position: top) {
	caption-side: #{$position};
}

// =================================================
// floatプロパティの回り込みを解除する
// @param $target			: 解除対象（初期値はnone）
// -------------------------------------------------
// clearプロパティは、floatプロパティで左寄せ、 または右寄せを指定された要素に対する回り込みを解除する際に使用します。
// -------------------------------------------------
// *************************************************
// ※解除対象の設定値一覧
// left						: 左寄せされた要素に対する回り込みを解除します。
// right					: 右寄せされた要素に対する回り込みを解除します。
// both						: 左寄せ、または右寄せされた全ての要素に対する回り込みを解除します。
// none						: 回り込みを解除しません。（初期値）
// *************************************************
// =================================================
@mixin clear($target: none) {
	clear: #{$target};
}

// =================================================
// ボックスを切り抜き表示（クリッピング）する
// (CSS2の仕様で指定できる切り抜きの形状は矩形のみです)
// @param $values			: 設定値一覧（画像上側からの距離 画像右側からの距離 画像下側からの距離 画像左側からの距離（初期値はauto）
// -------------------------------------------------
// clipプロパティは、ボックスを切り抜き表示（クリッピング）する際に使用します。
// CSS2の仕様で指定できる切り抜きの形状は矩形のみです。
// 矩形の指定方法について、CSS2の仕様では「ボックスの四辺の端から内側への距離」を指定することになっていますが、
// CSS2.1では「ボックスの上辺と左辺を基準とした距離」と改定されています。 一般的なブラウザではCSS2.1の仕様に準拠しています。
// また、CSS2.1ではclipプロパティの適用要素が「絶対配置された要素」と改定されており、
// 一般的なブラウザでclipプロパティによる切り抜き表示を有効にするには、 clipプロパティと同時にpositionプロパティでabsoluteかfixedを指定する必要があります。
// Internet Explorer7以下では、カンマ（,）区切りではなく半角スペース区切りで値を指定しないと切り抜きされないようです。
// -------------------------------------------------
// *************************************************
// ※距離の設定値一覧
// auto						: 切り抜きは行われず、ボックス全体が表示されます。これが初期値です。
// rect(上,右,下,左)		: ボックスの左上端を基準として、上右下左のそれぞれの距離を指定します。
// *************************************************
// =================================================
@mixin clip($values: auto) {

	// IE7以下対応
	@if $legacy-support-for-ie7 or $legacy-support-for-ie6 {
		$value: $values;

		// 文字列の場合はパース
		@if str-index($values, " ") != null {
			$value: str-replace($values, ",", " ");
		}
	}
	clip: #{$values};
}

// =================================================
// 文字色（前景色）を設定する
// @param $color			: 文字色（初期値は設定ファイルの設定値）
// -------------------------------------------------
// colorプロパティは、文字色を指定する際に使用します。
// 文字色を指定する際には、同時に背景色も指定するようにしてください。
// ユーザーの環境で背景色が指定されている場合には、背景色と文字色の関係により、文字が読みにくくなってしまうことがあるからです。
// -------------------------------------------------
// *************************************************
// ※文字色の設定値一覧
// auto						: 切り抜きは行われず、ボックス全体が表示されます。これが初期値です。
// rect(上,右,下,左)		: ボックスの左上端を基準として、上右下左のそれぞれの距離を指定します。
// *************************************************
// =================================================
@mixin color($color: $text-color) {
	color: #{$color};
}

// =================================================
// 内容（コンテンツ）を挿入する
// (beforeやafterを使用して容易にコンテンツを追加する事が出来ます)
// @param $contents			: 内容（初期値はnull）
// -------------------------------------------------
// contentプロパティは、要素の直前または直後に、文字列や画像などのコンテンツを挿入する際に使用します。
// contentプロパティを適用することができるのは、:before擬似要素および::after擬似要素のみです。
// 擬似要素（pseudo-element）とは、直訳すれば｢偽りの要素｣となります。
// 要素の一部にスタイルを適用するために、擬似的に設定される｢要素のようなもの｣のことです。
//	:before擬似要素および::after擬似要素は、要素の直前および直後に、文字列や画像などのコンテンツ（内容）を挿入するために擬似的に設定されます。
// -------------------------------------------------
// *************************************************
// ※内容の設定値一覧
// 文字列						: 挿入する文字列を「"」または「'」で括って指定します。
// URI（URL）でファイルを指定	: URI（URL）で画像や音声等のファイルを指定します。
// カウンタ						: ここでいうカウンタとは要素内容に自動連番をつけるということです。counter()、またはcounters()により、カウンタ（連番）を呼び出した値が、contentプロパティの値として指定されます。
// attr()						: ()内には属性の名前を指定します。contentプロパティを適用する要素の、該当属性で指定されている値が、contentプロパティの値として指定されます。例えば、attr(alt)とすると、alt属性で指定されている文字列が要素の直前または直後に挿入されます。尚、attrとはAttributeの略で属性という意味です。
// open-quote,close-quote		: quotesプロパティで指定されている引用符が挿入されます。open-quoteを指定すると開始引用符、close-quoteを指定すると終了引用符が挿入されます。
// no-open-quote,no-close-quote	: 引用符は表示されませんが、quotesプロパティで指定されている引用符の入れ子の深さが一階層前後します。no-open-quoteを指定すると一階層深くなり、no-close-quoteを指定すると一階層浅くなります。
// *************************************************
// =================================================
@mixin content($contents: null) {
	content: $contents;
}

// =================================================
// 要素の連番（カウンタ）の値を増加させる対象を設定する
// @param $target			: 対象（初期値はnone）
// -------------------------------------------------
// counter-incrementプロパティは、要素の連番（カウンタ）の値を進める際に使用します。
// counter-incrementプロパティを要素に適用してカウンタ名を定義すると、ウェブページ内にその要素が現われるたびに、
// 定義したカウンタの値が進められます。負の値を指定してカウンタを戻すことも可能です。
// counter-incrementプロパティを適用する要素に:before擬似要素、::after擬似要素を付けて、
// contentプロパティでカウンタ名を指定してやることで、要素の直前または直後にカウンタの値を挿入することができます。
// 尚、Internet Explorer7以下は、
// counter-incrementプロパティ、counter-resetプロパティ、contentプロパティ、:before擬似要素、::after擬似要素に対応していません 。
// -------------------------------------------------
// *************************************************
// ※対象の設定値一覧
// none						: カウンタの値を進めない（初期値）
// カウンタ名				: 指定した名前のカウンタの値を1つ進める
// カウンタ名 整数値		: 半角スペースで区切って整数値を指定すると、カウンタの値がその数だけ前後する
// *************************************************
// =================================================
@mixin counter-increment($target: none) {
	counter-increment: #{$target};
}

// =================================================
// 要素の連番（カウンタ）の値をリセットする
// @param $target			: 対象（初期値はnone）
// -------------------------------------------------
// counter-resetプロパティは、要素の連番（カウンタ）の値をリセットする際に使用します。
// counter-resetプロパティを適用した要素が現われるたびに、指定した名前のカウンタの値が0にリセットされます。
// また、カウンタ名の後にスペース区切りで整数値を指定すると、カウンタの値がその数にリセットされます。
// -------------------------------------------------
// *************************************************
// ※対象の設定値一覧
// none						: カウンタの値をリセットしない（初期値）
// カウンタ名				: 指定した名前のカウンタの値が0にリセットされる
// カウンタ名 整数値		: 半角スペースで区切って整数値を指定すると、カウンタの値がその数にリセットされる
// *************************************************
// =================================================
@mixin counter-reset($target: none) {
	counter-reset: #{$target};
}

// =================================================
// カーソルの形状を指定する指定する
// @param $type				: タイプ（初期値はauto）
// -------------------------------------------------
// cursorプロパティは、マウスカーソルの形状を指定する際に使用します。
// 下の使用例にある値の中には、ブラウザにより対応していないものもあるので注意してください。
// 尚、オリジナルカーソルに使用できるファイル形式には、.CUR（カーソルファイル）と.ANI（アニメーションカーソルファイル）があります。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// auto						: ブラウザが自動的に選択したカーソル（初期値）
// default					: 矢印型など利用環境の標準カーソル
// pointer					: リンクカーソル
// crosshair				: 十字カーソル
// move						: 移動カーソル
// text						: テキスト編集カーソル
// wait						: 待機・処理中カーソル
// help						: ヘルプカーソル
// n-resize					: 北方向のリサイズカーソル
// s-resize					: 南方向のリサイズカーソル
// w-resize					: 西方向のリサイズカーソル
// e-resize					: 東方向のリサイズカーソル
// ne-resize				: 北東方向のリサイズカーソル
// nw-resize				: 北西方向のリサイズカーソル
// se-resize				: 南東方向のリサイズカーソル
// sw-resize				: 南西方向のリサイズカーソル
// progress					: 進行中カーソル（CSS 2.1より仕様に追加）
// url('ファイルのパス')	: オリジナルのカーソル
// hand						: 指型カーソル（IE4以上の独自拡張）
// no-drop					: ドロップ禁止カーソル（IE6以上の独自拡張）
// all-scroll				: 全スクロールカーソル（IE6以上の独自拡張）
// col-resize				: 横方向のリサイズカーソル（IE6以上の独自拡張）
// row-resize				: 縦方向のリサイズカーソル（IE6以上の独自拡張）
// not-allowed				: 禁止カーソル（IE6以上の独自拡張）
// vertical-text			: 縦書きカーソル（IE6以上の独自拡張）
// *************************************************
// =================================================
@mixin cursor($type: auto) {
	cursor: #{$type};
}

// =================================================
// カラム数を指定する
// @param $column			: カラム数（初期値はauto）
// -------------------------------------------------
// column-countプロパティは、カラム数を指定する際に使用します。
// カラム数は数値で指定しますが、値は0より大きくなくてはなりません。
// column-widthプロパティとcolumn-countプロパティの両方がautoではない場合には、 column-countプロパティで指定する数値はカラム数の最大値を表します。
// -------------------------------------------------
// *************************************************
// ※カラム数の設定値一覧
// auto						: カラム数は他のプロパティの指定で決定される （例えば、widthプロパティやcolumn-widthプロパティなどで、全体の幅やカラム幅などが指定されれば、自ずとカラム数も算出される）（初期値）
// 数値で指定				: 数値で最適な（最善の）カラム数を指定
// *************************************************
// =================================================
@mixin column-count($column: auto) {
	@include grantPrefix(column-count
						 , #{$column}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラム同士の高さ（長さ）を揃えるかどうかを指定する
// @param $type				: タイプ（初期値はbalance）
// -------------------------------------------------
// column-fillプロパティは、カラム同士の高さ（長さ）を揃えるかどうかを指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// balance					: 可能な場合には、カラム同士の内容を均一に揃える（初期値）
// auto						: 先にあるカラムから順に埋めていく
// *************************************************
// =================================================
@mixin column-fill($type: balance) {
	@include grantPrefix(column-fill
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラムの間隔を指定する
// @param $margin			: 間隔（初期値はnormal）
// -------------------------------------------------
// column-gapプロパティは、カラムの間隔を指定する際に使用します。
// カラムの区切り線が存在する場合には、区切り線はカラムの間隔の中央に表示されます。
// column-gapプロパティに負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// normal					: ユーザーエージェントに依存するが、1emが提案されている（初期値）
// 長さ						: 長さでカラムの間隔を指定
// *************************************************
// =================================================
@mixin column-gap($margin: normal) {
	@include grantPrefix(column-gap
						 , #{$margin}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラムの区切り線のスタイル・幅・色を指定する
// @param $values			: 設定値一覧（カラム区切り線の幅 カラム区切り線のスタイル カラム区切り線の色）（初期値はmedium none #000）
// -------------------------------------------------
// column-ruleプロパティは、カラムの区切り線のスタイル・幅・色を指定する際に使用します。
// column-rule-widthプロパティ、 column-rule-styleプロパティ、
// column-rule-colorプロパティ の値をまとめて指定することができます。省略された値は、それぞれの初期値に設定されます。
// -------------------------------------------------
// *************************************************
// ※カラム区切り線の幅の設定値一覧
// thin						: 細い区切り線
// medium					: 中くらいの区切り線（初期値）
// thick					: 太い区切り線
// 数値＋単位				: 数値にpxやemやexなどの単位をつけて指定
// *************************************************
// ※カラム区切り線のスタイルの設定値一覧
// none						: ボーダーは表示されず、太さは0となる。表のセルなどのボーダーが重なり合う場合は他の値が優先される（初期値）
// hidden					: ボーダーは表示されず、太さも0になる。表のセルなどのボーダーが重なり合う場合はhiddenの値が優先される
// solid					: 1本線で表示される
// double					: 2本線で表示される
// groove					: 立体的に窪んだ線で表示される
// ridge					: 立体的に隆起した線で表示される
// inset					: ridgeと同じ
// outset					: grooveと同じ
// dashed					: 破線で表示される
// dotted					: 点線で表示される
// *************************************************
// ※カラム区切り線の色の設定値一覧
// 色で指定					: #RRGGBBの書式やカラーネームで色を指定
// *************************************************
// =================================================
@mixin column-rule($values: medium none #000) {
	@include grantPrefix(column-rule
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラムの区切り線の色を指定する
// @param $color			: カラムの区切り線の色（初期値は#000）
// -------------------------------------------------
// column-rule-colorプロパティは、カラムの区切り線の色を指定する際に使用します。
// 尚、区切り線は太さや色だけを指定しても表示されないので注意してください。
// これは、column-rule-styleプロパティの初期値がnoneとなっているためです。
// 区切り線を表示させるには、太さや色だけでなく種類も同時に指定してやる必要があります。
// -------------------------------------------------
// *************************************************
// カラムの区切り線の色の設定値一覧
// 色で指定					: #RRGGBBの書式やカラーネームで色を指定
// *************************************************
// =================================================
@mixin column-rule-color($color: #000) {
	@include grantPrefix(column-rule-color
						 , #{$color}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラムの区切り線のスタイルを指定する
// @param $style			: カラム区切り線のスタイル（初期値はnone）
// -------------------------------------------------
// column-rule-styleプロパティは、カラムの区切り線のスタイルを指定する際に使用します。
// 尚、区切り線のスタイルは、基本的にはborder-styleプロパティのスタイルと同じですが、
// insetはridgeのように、outsetはgrooveのように表示されます。
// noneを指定するとcolumn-rule-widthプロパティの値が強制的に0になります。
// -------------------------------------------------
// *************************************************
// ※スタイル一覧
// none						: ボーダーは表示されず、太さは0となる。表のセルなどのボーダーが重なり合う場合は他の値が優先される（初期値）
// hidden					: ボーダーは表示されず、太さも0になる。表のセルなどのボーダーが重なり合う場合はhiddenの値が優先される
// solid					: 1本線で表示される
// double					: 2本線で表示される
// groove					: 立体的に窪んだ線で表示される
// ridge					: 立体的に隆起した線で表示される
// inset					: ridgeと同じ
// outset					: grooveと同じ
// dashed					: 破線で表示される
// dotted					: 点線で表示される
// *************************************************
// =================================================
@mixin column-rule-style($style: none) {
	@include grantPrefix(column-rule-style
						 , #{$style}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラムの区切り線の幅を指定する
// @param $width			: カラム区切り線の幅（初期値はmedium）
// -------------------------------------------------
// column-rule-widthプロパティは、カラムの区切り線の幅を指定する際に使用します。
// カラムの区切り線の幅負の値を指定することはできません。
// 尚、区切り線は太さや色だけを指定しても表示されないので注意してください。
// これは、column-rule-styleプロパティの初期値がnoneとなっているためです。
// 区切り線を表示させるには、太さや色だけでなく種類も同時に指定してやる必要があります。
// -------------------------------------------------
// *************************************************
// ※線の幅タイプ一覧
// thin						: 細い区切り線
// medium					: 中くらいの区切り線（初期値）
// thick					: 太い区切り線
// 数値＋単位				: 数値にpxやemやexなどの単位をつけて指定
// *************************************************
// =================================================
@mixin column-rule-width($width: medium) {
	@include grantPrefix(column-rule-width
						 , #{$width}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// カラム幅とカラム数を指定する
// @param $values			: 設定値一覧（カラム幅 カラム数）（初期値はauto auto）
// -------------------------------------------------
// columnsプロパティは、カラム幅とカラム数を指定する際に使用します。
// 個別のプロパティを使用する場合には、カラム幅はcolumn-width、カラム数はcolumn-countで指定しますが、
// columnsプロパティではこれらをまとめて指定することができます。省略された値は、それらの初期値に設定されます。
// -------------------------------------------------
// *************************************************
// ※カラム幅の設定値一覧
// 値で指定					: 数値で最適な（最善の）カラム幅を指定（初期値はauto）
// *************************************************
// ※カラム数の設定値一覧
// 値で指定					: 長さで最適な（最善の）カラム数を指定（初期値はauto）
// *************************************************
// =================================================
@mixin columns($values: auto auto) {
	@include grantPrefix(columns
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 要素がまたがる（横切る）カラム数を指定する
// @param $isCross			: 要素がまたがる（横切る）カラム数（初期値は1）
// -------------------------------------------------
// column-spanプロパティは、要素がまたがる（横切る）カラム数を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※線の幅タイプ一覧
// 1						: 要素は複数カラムにまたがらない（初期値）
// all						: 要素はすべてのカラムにまたがる
// *************************************************
// =================================================
@mixin column-span($isCross: 1) {
	@include grantPrefix(column-span
						 , #{$isCross}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ====================================================================
// カラム幅を指定する
// @param $width			: カラムの横幅（初期値はauto）
// -------------------------------------------------
// column-widthプロパティは、カラム幅を指定する際に使用します。
// カラム幅は長さ値で指定しますが、値は0より大きくなくてはなりません。
// column-widthプロパティで指定するのは最適な（最善の）カラム幅です。
// 実際のカラム幅は、スペースを埋めるために指定値より広くなったり、 スペースが足りない場合には狭くなるかもしれません。
// column-widthプロパティの解釈が多少柔軟になっているのは、 多くのスクリーンサイズに合わせられる拡張性のあるデザインを実現するためです。
// カラム幅を厳密に設定するには（水平テキストでは）、widthプロパティ、column-widthプロパティ、column-gapプロパティ、column-rule-widthプロパティ のすべての長さ値を指定する必要があります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// auto						: カラム幅は他のプロパティの指定で決定される （初期値）
//							  （例えば、widthプロパティやcolumn-countプロパティなどで、全体の幅やカラム数などが指定されれば、自ずとカラム幅も算出される）
// 長さ						: 長さで最適な（最善の）カラム幅を指定
// *************************************************
// =================================================
@mixin column-width($width: auto) {
	@include grantPrefix(column-width
						 , #{$width}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  D  **********************************************//

// =================================================
// 文字表記の方向（左右）を指定する
// @param $direction		: 文字表記の方向（左右）を指定（初期値はltr）
// -------------------------------------------------
// directionプロパティは、文字表記の方向（左右）を指定する際に使用します。
// 値がltr（Left To Right）のときは左から右、値がrtl（Right To Left）のときは右から左に表記されます。
// directionプロパティをインライン要素に適用させる際には、 同時にunicode-bidiプロパティで値をembed、またはbidi-overrideに指定する必要があります。
// 尚、Internet Explorerでは、日本語にdirection: rtl; のみを設定しても、右から左の表記にはならず、 日本語の標準的な表記方向が優先されるようです。
// 日本語を右から左に表記させたい場合には、同時にunicode-bidi: bidi-override; を指定してください。
//（右から左に表記される言語にはアラビア語やヘブライ語などがあります。）
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// ltr						: ltrとはLeft To Rightの略です。左から右に文字表記します。（初期値）
// rtl						: rtlとはRight To Leftの略です。右から左に文字表記します。
// *************************************************
// =================================================
@mixin direction($direction: ltr) {
	direction: #{$direction};
}

// =================================================
// 要素の表示形式（ブロック・インライン）を指定する
// @param $type				: タイプ（初期値はinline）
// -------------------------------------------------
// displayプロパティは、ブロックレベル・インライン等の、要素の表示形式を指定する際に使用します。
// ブロック要素とは、見出し、段落、リスト、フォームなどのひとつのまとまった単位として表される要素で一般的なブラウザでは前後に改行が入って表示されます。
// インライン要素とは、主に文章の一部として利用される要素でその前後は改行されません。
// 例えば、インライン要素の<IMG>に display:block を指定すると、ブロックレベル表示となって前後が改行されて表示されるようになります。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// inline					: インラインボックスを生成する（初期値）
// block					: ブロックボックスを生成する
// list-item				: li要素のようにリスト内容が収められるブロックボックスと、リストマーカーのためのマーカーボックスを生成する
// run-in					: 文脈に応じてブロックまたはインラインボックスのいずれかを作成する
// inline-block				: インラインレベルのブロックコンテナを生成する。要素全体としてはインライン要素のような表示形式だが、内部はブロックボックスで高さ・横幅などを指定できる。
// table					: table要素のような表示となる
// inline-table				: インラインレベルのテーブルとなる
// table-row-group			: tbody要素のような表示となる
// table-header-group		: thead要素のような表示となる
// table-footer-group		: tfoot要素のような表示となる
// table-row				: tr要素のような表示となる
// table-column-group		: colgroup要素のような表示となる
// table-column				: col要素のような表示となる
// table-cell				: td要素のような表示となる
// table-caption			: caption要素のような表示となる
// none						: 要素が表示されず、レイアウトに影響を与えない
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin display($type: inline, $isPrefixOnly: false) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
			@if $type == "flex" {
				@include grantPrefixValue(display
										  , box
										  , -moz, -webkit, -o, -khtml, -ms, official
										 );

				@include grantPrefixValue(display
										  , #{$type}
										  , -moz, -webkit, -o, -khtml, -ms, official
										 );
			}
			@else{
				*display: #{$type};
			}
		}
	}
	@else{
		@if $type == "flex" {
			@include grantPrefixValue(display
									  , box
									  , -moz, -webkit, -o, -khtml, -ms, official
									 );

			@include grantPrefixValue(display
								 , #{$type}
								 , -moz, -webkit, -o, -khtml, -ms, official
								);
		}
		@else{
			display: #{$type};
		}
		// IEサポートをする場合
		@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
			*display: #{$type};
		}
	}
}

// ********************************************  E  **********************************************//

// =================================================
// 空白セルのボーダーの表示・非表示を指定する
// @param $type				: 表示タイプ
// -------------------------------------------------
// empty-cellsプロパティは、空白セルのボーダーを表示するか（show）、しないか（hide）を指定します。
//「空白セル」とは、テーブル（表）のセルでテキストや画像が入っていないセルのことを指しますが、
// empty-cellsプロパティでは、visibilityプロパティがhiddenに指定されたセルのボーダーについても同様の扱いとなります。
// border-spacingプロパティは、border-collapseプロパティの値がseparateのときに有効となります。
// -------------------------------------------------
// *************************************************
// ※タイプの設定値一覧
// show						: 空白セルの場合にもボーダーを表示します。（初期値）
// none						: 空白セルの場合にはボーダーを表示しません。
// *************************************************
// =================================================
@mixin empty-cells($type: show) {
	empty-cells: #{$type};
}

// ********************************************  F  **********************************************//

// =================================================
// (フィルター)画像・テキストにフィルタ効果を与える（IE独自の仕様）
// @param $filter-param		: 設定値一覧（フィルター名(必要な値)）（初期値はnull）
// -------------------------------------------------
// filterプロパティは、Windows版Internet Explorerが独自に追加したプロパティで、様々な視覚効果を与える際に使用します。
// IE5.5以上で使用できる視覚効果とIE4以上で使用できる視覚効果がありますが、それぞれ書式が異なります。
// -------------------------------------------------
// *************************************************
// ※透過・回転・反転・グレースケールなどを指定する（IE5.5以上）の設定値一覧
// progid:DXImageTransform.Microsoft.BasicImage()
//	Opacity=透明度											: 0（透明）～1（不透明）の範囲で指定（初期値は1）
//	Invert=色反転											: 1（true）または0（false）で指定（初期値は0）
//	GrayScale=グレースケール								: 1（true）または0（false）で指定（初期値は0）
//	Xray=X線効果											: 1（true）または0（false）で指定（初期値は0）
//	Mask=マスク効果											: 1（true）または0（false）で指定（初期値は0）
//	MaskColor=色											: マスク色を色番号(1～16777216)で指定 ※Mask=1の時に有効
//	Mirror=ミラー表示										: 1（true）または0（false）で指定（初期値は0）
//	Rotation=回転											: 0（回転無し）・1（右へ90度）・2（180度）・3（270度）で指定（初期値は0）
// *************************************************
// ※左右反転する（IE4以上）の設定値一覧
// fliph()													: 引数なし ※DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)を指定したのと同じ結果となります。
// *************************************************
// ※上下反転する（IE4以上）の設定値一覧
// filpv()													: 引数なし ※DXImageTransform.Microsoft.BasicImage(mirror=1)を指定したのと同じ結果となります。
// *************************************************
// ※色（色相・明度・彩度）を反転する（IE4以上）の設定値一覧
// invert()													: 引数なし ※DXImageTransform.Microsoft.BasicImage(invert=1)を指定したのと同じ結果となります。
// *************************************************
// ※X線効果（グレースケールにして反転）を適用する（IE4以上）の設定値一覧
// xray()													: 引数なし ※DXImageTransform.Microsoft.BasicImage(xray=1)を指定したのと同じ結果となります。
// *************************************************
// ※透過表示にする（IE4以上）の設定値一覧
// alpha()
//	Style=透過スタイル										: 0（透過無し）・1（線形）・2（円形）・3（長方形）で指定
//	Opacity=開始透明度										: 0（透明）～100（不透明）の範囲で指定（初期値は0）
//	FinishOpacity=終了透明度								: 0（透明）～100（不透明）の範囲で指定（初期値は0）
//	StartX=X座標											: 透過開始のX座標
//	StartY=Y座標											: 透過開始のY座標
//	FinishX=X座標											: 透過終了のX座標
//	FinishY=X座標											: 透過終了のX座標
// *************************************************
// ※特定の色を透明にする（IE4以上）の設定値一覧
// chroma()
//	Color=透明にする色										: #rrggbbなどの書式やカラーネームで指定
// *************************************************
// ※指定した色でマスクをかける（IE4以上）の設定値一覧
// mask()
//	Color=マスク色											: #rrggbbなどの書式やカラーネームで指定
// *************************************************
// ※背後から光を当てたような効果を与える（IE4以上）の設定値一覧
// glow()
//	Color=光の色											: #rrggbbなどの書式やカラーネームで指定
//	Strength=光の強さ										: 1～255の範囲で指定（初期値は5）
// *************************************************
// ※ぼかしのない影をつける（IE4以上）の設定値一覧
// dropshadow()
//	Color=影の色											: #rrggbbなどの書式やカラーネームで指定
//	Positive=影と背景の逆転									: 1（true）または0（false）で指定（初期値は1で逆転となる）
//	OffX=要素と影の横の距離									: 数値＋pxで指定（初期値は5px）
//	OffY=要素と影の縦の距離									: 数値＋pxで指定（初期値は5px）
// *************************************************
// ※ぼかしのある影をつける（IE4以上）の設定値一覧
// Shadow()
//	Color=影の色											: #rrggbbなどの書式やカラーネームで指定
//	Strength=影の強さ										: 影の伸びる距離を数値で指定（初期値は5）
//	Direction=影の方向										: 影の伸びる方向を0～360または以下のキーワードで指定（初期値は270） Top（0）・Top Right（45）・Right（90）・Bottom Right（135）・Bottom（180）・ Bottom Left（225）・Left（270）・Top Left（315）・Top（360）
// *************************************************
// ※ぼかす（IE5.5以上） の設定値一覧
// progid:DXImageTransform.Microsoft.MotionBlur()
//	PixelRadius=ぼかしの距離								: 1～100の範囲で指定（初期値は2）
//	MakeShadow=影表示にするかどうか							: 1（true）または0（false）で指定（初期値は0）
//	ShadowOpacity=影の透明度								: 0（透明）～1（不透明）の範囲で指定（初期値は0.75） ※MakeShadow=1の時に有効
// *************************************************
// ※方向を指定してぶれさせる（IE4以上）の設定値一覧
// progid:DXImageTransform.Microsoft.MotionBlur()
//	Strength=ブレの強さ										: ブレの距離を数値で指定（初期値は5）
//	Direction=ブレの方向									: Top（0）・Top Right（45）・Right（90）・Bottom Right（135）・Bottom（180）・ Bottom Left（225）・Left（270）・Top Left（315）・Top（360）ブレの方向を0～360またはキーワードで指定（初期値はLeft）
//	Add=ブレ効果を与えた要素の上に元の要素を重ねるかどうか	: 1（true）または0（false）で指定（初期値は0）
// *************************************************
// ※波状に歪めて表示する（IE4以上）の設定値一覧
// wave()
//	Freq=波の数												: 数値で指定（初期値は3）
//	LightStrength=光の強さ									: 0（弱い）～100（強い）の範囲で指定（初期値は100）
//	Phase=波の開始位置										: 0～100の範囲で指定（初期値は0）
//	Strength=波の強さ										: 数値で指定（初期値は5）
//	Add=元の要素を重ねる									: 1（true）または0（false）で指定（初期値は0）
// *************************************************
// ※モザイク表示にする（IE5.5以上）の設定値一覧
// progid:DXImageTransform.Microsoft.Pixelate()
//	MaxSquare=四角の大きさ									: 2～50の範囲で指定（初期値は50）
// *************************************************
// ※エンボス（浮き彫り）表示にする（IE5.5以上）の設定値一覧
// progid:DXImageTransform.Microsoft.Emboss()
//	Bias=彫りの深さ											: -1.0～1.0の範囲で指定（初期値は0.7）
// *************************************************
// ※エングレーブ（掘り込み）表示にする（IE5.5以上）の設定値一覧
// progid:DXImageTransform.Microsoft.Engrave()
//	Bias=彫りの深さ											: -1.0～1.0の範囲で指定（初期値は0.7）
// *************************************************
// ※二次元面を傾けたような表示にする（IE5.5以上）の設定値一覧
// progid:DXImageTransform.Microsoft.Matrix()
//	M11=横の長さ											: 長さの倍率を数値で指定（初期値は1.0）
//	M22=縦の長さ											: 長さの倍率を数値で指定（初期値は1.0）
//	M12=横の変形											: 横の変形を数値で指定、数値の倍率分だけ下辺が右へ移動して変形する（初期値は0.0）
//	M21=縦の変形											: 縦の変形を数値で指定、数値の倍率分だけ右辺が下へ移動して変形する（初期値は0.0）
//	SizingMethod=表示方法									: 変形ではみ出した部分についてclip to original(元のサイズで切り抜き表示)、 または、auto expand(範囲を広げて表示)で指定（初期値はclip to original）
// *************************************************
// ※背景と内容の間にグラデーションの面を表示する（IE5.5以上）の設定値一覧
// progid:DXImageTransform.Microsoft.Gradient()
//	GradientType=タイプ										: 0は縦に変化するグラデーション、1は横に変化するグラデーション
//	StartColorStr=#AARRGGBB									: グラデーション開始の透明度（AA）と色（RRGGBB）を指定（初期値は#ff000000）※#AARRGGBBの最初のAAは00（透明）～ff（不透明）の範囲で透明度を指定、また、残りのRRGGBBは色を指定
//	EndColorStr=#AARRGGBB									: グラデーション終了の透明度（AA）と色（RRGGBB）を指定（初期値は#ff000000）※#AARRGGBBの最初のAAは00（透明）～ff（不透明）の範囲で透明度を指定、また、残りのRRGGBBは色を指定
// *************************************************
// =================================================
@mixin filter($filter-param: null) {
	@include grantPrefix(filter
						 , #{$filter-param}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 左または右に寄せて配置する
// @param $direction		: 方向（初期値はnone）
// -------------------------------------------------
// floatプロパティは、指定された要素を左または右に寄せて配置する際に使用します。 後に続く内容は、その反対側に回り込みます。
// 尚、floatプロパティは、positionプロパティで static以外の値が指定されている要素には適用されないので注意してください。
// -------------------------------------------------
// *************************************************
// ※方向一覧
// left						: 指定した要素を左に寄せます。後に続く内容はその右側に回り込みます。
// right					: 指定した要素を右に寄せます。後に続く内容はその左側に回り込みます。
// none						: 特に配置を指定しません。（初期値）
// *************************************************
// =================================================
@mixin float($type: none) {
	float: #{$type};
}

// =================================================
// フォントに関する指定をまとめて行う
// @param $values			: 設定値一覧（スタイル フォントサイズ 行の高さ フォントの種類）（初期値はnormal ベースフォントサイズ ベースフォントファミリー）
// -------------------------------------------------
// ontプロパティは、フォントに関する指定をまとめて行う際に使用します。
// 指定できるのは、 font-style、 font-variant、 font-weight、 font-size、 line-height、 font-familyの6つのプロパティの値です。
// 各プロパティの値を指定する際の順序は以下のように決まっています。 このうち font-sizeと font-familyは 省略することができません。
// 1.font-style、font-variant、font-weight（順不同）
// 2.font-size
// 3.line-height
// 4.font-family
// line-heightを指定する場合には、以下の例のようにline-heightの値を記述する前にスラッシュ（ / ）で区切ります。
// 例: font: bold large/150% "ＭＳ 明朝";
// 尚、fontプロパティを使用すると、フォント関連のスタイルが一旦リセットされてから、 fontプロパティで指定した値が適用される点に注意してください。 省略した値は、親要素に指定されている値を継承するのではなく初期値に戻されます。
// -------------------------------------------------
// *************************************************
// ※フォントスタイル設定値一覧
// normal					: 標準フォントで表示します。（初期値）
// italic					: イタリック体フォントで表示します。
// oblique					: 斜体フォントで表示します。
// ※フォントバリアント設定値一覧
// normal					: 標準のフォントで表示します。（初期値）
// small-caps				: スモールキャップのフォントで表示します。スモールキャップのフォントがない場合には、大文字を縮小したものを小文字として表示します。
// ※フォントウェイト設定値一覧
// 数値						: 100、200、300、400、500、600、700、800、900でフォントの太さを指定
// normal					: 標準の太さです。（数値で400を指定した場合と同じ）（初期値）
// bold						: 一般的な太字の太さです。（数値で700を指定した場合と同じ）
// lighter					: 相対的に一段階細くします。
// bolder					: 相対的に一段階太くします。
// ※フォントサイズ設定値一覧
// 数値で指定				: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。数値には負の値は指定できません。
// パーセントで指定			: ％値で指定します。
// キーワードで指定			: xx-small、x-small、small、medium、large、x-large、xx-largeの7段階があり、mediumが標準サイズです。1段階上がると1.2倍のサイズになります。また、smaller、largerを指定すると大きさが1段階上下します。
// *************************************************
// =================================================
@mixin font($values: normal $base-font-size $base-font-family, $isPrefixOnly: false) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
			*font: unquote($values);
		}
	}
	@else {
		font: unquote($values);
		// IEサポートをする場合
		@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
			*font: unquote($values);
		}
	}
}

// =================================================
// フォントの種類を指定する
// @param $fontType			: フォントの種類
// -------------------------------------------------
// font-familyプロパティは、フォントの種類を指定する際に使用します。
// フォントの種類はカンマ（ , ）で区切って複数の候補を並べることができます。
// 複数の候補を記述しておくことで、先に記述した順にユーザー環境で利用可能なものが選択され、
// より多くのユーザーに対して自分のイメージに近いフォントで表示させることができます。
// 指定したフォントがユーザーの環境にインストールされていない場合には、ブラウザで設定されたデフォルトのフォントで表示されます。
// -------------------------------------------------
// *************************************************
// ※フォントの種類設定値一覧
// フォント名で指定			: ｢ＭＳ ゴシック｣や｢ＭＳ 明朝｣のようにフォント名で指定します。フォント名にスペースが含まれている場合には、ダブルクォーテーション（ " ）またはシングルクォーテーション（ ' ）で囲むようにしてください。
// sans-serif				: ゴシック系のフォント
// serif					: 明朝系のフォント
// cursive					: 筆記体・草書体のフォント
// fantasy					: 装飾的なフォント
// monospace				: 等幅フォント
// *************************************************
// =================================================
@mixin font-family($fontType: $base-font-family) {
	font-family: unquote($fontType);
}

// =================================================
// フォントのサイズを指定する
// @param $size				: フォントサイズ（初期値は設定ファイルの設定値）
// -------------------------------------------------
// font-sizeプロパティは、フォントのサイズを指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※フォントサイズ設定値一覧
// 数値で指定				: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。数値には負の値は指定できません。
// パーセントで指定			: ％値で指定します。
// キーワードで指定			: xx-small、x-small、small、medium、large、x-large、xx-largeの7段階があり、mediumが標準サイズです。1段階上がると1.2倍のサイズになります。また、smaller、largerを指定すると大きさが1段階上下します。
// *************************************************
// =================================================
@mixin font-size($size: $base-font-size, $isPrefixOnly: false, $mobileMode: true) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if type-of($size) == number {
			@if $legacy-support-for-ie6
					or $legacy-support-for-ie7
					or $legacy-support-for-ie8
					or $legacy-support-for-ie9 {
				@if unitless($size) != "" {
					@if unit($size) == "rem" {
						font-size: #{font-size($size, "px") + \9};
						font-size: #{font-size($size) + \9};
					}
					@else {
						font-size: #{font-size($size) + \9};
					}
				}
			}
		}
		@if type-of($size) == number and type-of($font-size-mobile) == number {
			@if $mobileMode and $size != ($font-size-mobile * $size) {
				@media #{$small-down} {
					@if $legacy-support-for-ie6
						or $legacy-support-for-ie7
						or $legacy-support-for-ie8
						or $legacy-support-for-ie9 {
						@if unitless($size) != "" {
							@if unit($size) == "rem" {
								font-size: #{font-size(division($size, $font-size-mobile), "px") + \9};
								font-size: #{font-size(division($size, $font-size-mobile)) + \9};
							}
							@else {
								font-size: #{font-size(division($size, $font-size-mobile)) + \9};
							}
						}
					}
				}
			}
		}
	}
	@else {
		@if type-of($size) == number {
			@if unitless($size) != "" {
				@if unit($size) == "rem" {
					font-size: #{font-size($size, "px")};
					font-size: #{font-size($size)};
				}
				@else {
					font-size: #{$size};
				}
			}
		}
		// IEサポートをする場合
		@if type-of($size) == number {
			@if $legacy-support-for-ie6
					or $legacy-support-for-ie7
					or $legacy-support-for-ie8
					or $legacy-support-for-ie9 {
				@if unitless($size) != "" {
					@if unit($size) == "rem" {
						font-size: #{font-size($size, "px") + \9};
						font-size: #{font-size($size) + \9};
					}
					@else {
						font-size: #{font-size($size) + \9};
					}
				}
			}
		}

		@if type-of($size) == number and type-of($font-size-mobile) == number {
			@if $mobileMode and $size != ($font-size-mobile * $size) {
				@media #{$small-down} {
					@if unitless($size) != "" {
						@if unit($size) == "rem" {
							font-size : #{font-size(division($size, $font-size-mobile), "px")};
							font-size : #{font-size(division($size, $font-size-mobile))};
						}
						@else {
							font-size : #{font-size(division($size, $font-size-mobile))};
						}

						@if $legacy-support-for-ie6
							or $legacy-support-for-ie7
							or $legacy-support-for-ie8
							or $legacy-support-for-ie9 {
							@if unit($size) == "rem" {
								font-size : #{font-size(division($size, $font-size-mobile), "px") + \9};
								font-size : #{font-size(division($size, $font-size-mobile)) + \9};
							}
							@else {
								font-size : #{font-size(division($size, $font-size-mobile)) + \9};
							}
						}
					}
				}
			}
		}
	}
}

// =================================================
// フォントのサイズを調整する
// @param $values			: 設定値一覧（目的のフォントサイズ 継承したフォントサイズ（初期値は設定ファイルのフォントサイズ）
// -------------------------------------------------
// font-size-adjustプロパティは、フォントの種類の違いによるサイズのバラつきを調整して、テキストを読みやすくする際に使用します。
// 例えば、制作者が指定した第一候補フォントが存在せず、第二候補以降のフォントで表示された場合、
// フォントの種類とサイズの関係でテキストが読みづらくなることが起こりえます。
// このような環境のユーザーを想定して、あらかじめfont-size-adjustプロパティで第一候補フォントの「フォントサイズに対する小文字xの高さ比率」を指定します。
// こうすることで、第二候補以降のフォントで表示された場合にも、第一候補フォントの場合と同様のサイズで表示されて、読みづらくなることを防ぐことができます。
// -------------------------------------------------
// =================================================
@mixin font-size-adjust($values: $base-font-size) {
	// 文字列の場合はパース
	@if type-of($values) == string {
		$values: str-split($values, " ");
	}

	// 設定数が1つ以上存在する場合はフォントサイズ / 継承したフォントサイズで計算した結果を設定
	@if length($values) > 1 {
		font-size-adjust: #{nth($values, 1) / nth($values, 2)};
	}
	// 設定数が1つのみの場合はフォントサイズのみを設定
	@else {
		font-size-adjust: #{$values};
	}
}

// =================================================
// フォントの形状を幅広・幅狭にする
// @param $type				: フォントの形状タイプ（初期値はnormal）
// -------------------------------------------------
// font-stretchプロパティは、フォントを幅狭・幅広に表示する際に使用します。
// 横方向にフォントをつぶしたような幅狭の形状にするには「condensed」が含まれるキーワード、
// 横方向にフォントを伸ばしたような幅広の形状にするには「expanded」が含まれるキーワードを指定します。
//「narrower」、「wider」を指定すると1段階幅狭・幅広となります。
// -------------------------------------------------
// *************************************************
// ※フォントの形状タイプ一覧
// ultra-condensed			: normalより4段階幅狭、この指定が最も幅狭となる
// extra-condensed			: normalより3段階幅狭
// condensed				: normalより2段階幅狭
// semi-condensed			: normalより1段階幅狭
// normal					: 標準の形状（初期値）
// semi-expanded			: normalより1段階幅広
// expanded					: normalより2段階幅広
// extra-expanded			: normalより3段階幅広
// ultra-expanded			: normalより4段階幅広、この指定が最も幅広となる
// narrower					: 1段階幅狭にする
// wider					: 1段階幅広にする
// *************************************************
// =================================================
@mixin font-stretch($type: normal) {
	font-stretch: #{$type};
}

// =================================================
// フォントをイタリック体・斜体にする
// @param $style			: フォントのスタイル（初期値はnormal）
// -------------------------------------------------
// font-styleプロパティは、フォントのスタイルを指定する際に使用します。 指定できる値は、標準（normal）、イタリック体（italic）、斜体（oblique）です。
// イタリック体(italic)と斜体（oblique）の違いについてですが、 イタリック体（italic）は斜めに傾けて筆記体調などにデザインされたものが多く、
// 斜体（oblique）はシンプルに斜めに傾けてデザインされたものが多いようです。 指定したフォントにイタリック体（italic）や斜体（oblique）がない場合には、 ブラウザが判断して、そのフォントの標準のものを斜めに傾けて表示します。
// 日本語フォントの場合、イタリック体（italic）や斜体（oblique）が用意されていることはほとんどなく、
// 標準のものを斜めに傾けて表示しているため、多くの場合イタリック体（italic）と斜体（oblique）のブラウザ上の表示は同じになります。
// -------------------------------------------------
// *************************************************
// ※フォントスタイル設定値一覧
// normal					: 標準フォントで表示します。（初期値）
// italic					: イタリック体フォントで表示します。
// oblique					: 斜体フォントで表示します。
// *************************************************
// =================================================
@mixin font-style($style: normal) {
	font-style: #{$style};
}

// =================================================
// フォントをスモールキャップにする
// @param $type				: 小文字の表示形式タイプ（初期値はnormal）
// -------------------------------------------------
//  font-variantプロパティは、フォントをスモールキャップにする際に使用します。
// 指定できる値は、標準（normal）、スモールキャップ（small-caps）です。
// スモールキャップとは、小文字の表示形式が小文字サイズの大文字になっているものを指します。
// 指定したフォントにスモールキャップがない場合には、大文字を縮小したものを小文字として表示します。
// -------------------------------------------------
// *************************************************
// ※フォントバリアント設定値一覧
// normal					: 標準のフォントで表示します。（初期値）
// small-caps				: スモールキャップのフォントで表示します。スモールキャップのフォントがない場合には、大文字を縮小したものを小文字として表示します。
// *************************************************
// =================================================
@mixin font-variant($type: normal) {
	font-variant: #{$type};
}

// =================================================
// フォントの太さを指定する
// @param $weight			: フォントの太さ（初期値はnormal）
// -------------------------------------------------
// font-weightプロパティは、フォントの太さを指定する際に使用します。
// 9段階の太さを指定することができますが、一般的なフォントでは9種類の太さが用意されていることはあまりなく、
// フォントの太さとして実際に指定する値は｢bold｣のみで事足りることが多いようです。
// -------------------------------------------------
// *************************************************
// ※フォントウェイト設定値一覧
// 数値						: 100、200、300、400、500、600、700、800、900でフォントの太さを指定
// normal					: 標準の太さです。（数値で400を指定した場合と同じ）（初期値）
// bold						: 一般的な太字の太さです。（数値で700を指定した場合と同じ）
// lighter					: 相対的に一段階細くします。
// bolder					: 相対的に一段階太くします。
// *************************************************
// =================================================
@mixin font-weight($weight: normal) {
	font-weight: #{$weight};
}

// =================================================
// フォントのアンチエイリアスを調節する
// @param $smoothing 		: フォントのアンチエイリアス（初期値は-webkitはsubpixel-antialiased）
// -------------------------------------------------
// font-smoothingプロパティを使用することで、フォントのアンチエイリアスが調節できる。
// Windowsはブラウザに関わらず対応していない。
// Mac版のSafariやOpera、ChromeなどのWebkit系とFirefoxのみ、プレフィックス付きで独自実装しているみたい。
// WebkitとFirefoxで別のプレフィックスをつける必要があり、値も違ってくるので注意が必要。
// -------------------------------------------------
// *************************************************
// ※フォントの滑らかさの設定値一覧
// ---webkit---
// none						: アンチエイリアスを調整しない
// antialiased				: アンチエイリアスを調節し、グレイスケールで表示する
// subpixel-antialiased		: アンチエイリアスを調節し、グレイスケールで表示しない（初期値）
// ---moz-osx---
// unset					: デフォルトに戻す
// inherit					: 親要素から継承
// auto						: システムのデフォルトに応じる
// grayscale				: アンチエイリアスを調節し、グレイスケールで表示する
// *************************************************
// =================================================
@mixin font-smoothing($smoothing: subpixel-antialiased) {
	-webkit-font-smoothing: #{$smoothing};

	@if $smoothing == "antialiased" or $smoothing == "subpixel-antialiased" {
		$smoothing: grayscale;
	}
	@else {
		$smoothing: auto;
	}
	-moz-osx-font-smoothing: #{$smoothing};
}

// =================================================
// flexアイテムが余白を埋めるように寸法を変更する度合いを指定する
// @param $values			: 設定値一覧（伸長係数 圧縮係数 横幅(高さ)）（初期値は0 1 auto）
// -------------------------------------------------
// フレックスプロパティは、同じコンテナ内の柔軟なアイテムの残りの部分への相対的な項目の長さを指定します。
// フレックスプロパティは、成長フレックスフレックス収縮、およびフレックス基礎特性の省略形です。
// 注意：要素が柔軟な項目でない場合は、フレックスプロパティは効果がありません。
// -------------------------------------------------
// *************************************************
// ※伸長係数の設定値一覧
// 数値のみ 				: カラム数を設定（初期値は0）
// *************************************************
// ※圧縮係数の設定値一覧
// 数値のみ 				: 圧縮率を設定（初期値は1）
// *************************************************
// ※横幅(高さ)の設定値一覧
// auto 					: 横幅(高さ)を自動的に計算します。
// content 					: 横幅(高さ)をコンテンツの横幅(高さ)から決定します。
// 数値 + 単位				: 使用可能な長さを指定します。
// *************************************************
// =================================================
@mixin flex($values: 0 1 auto) {
	@include grantPrefix(flex
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// フレックスアイテムの圧縮係数を指定します。
// @param $value			: 伸長係数（初期値は0）
// -------------------------------------------------
// フレックスアイテムの圧縮係数を指定します。
// フレックスアイテムの横幅の合計が、フレックスコンテナのコンテンツ領域の幅を超える場合に、
// 圧縮係数に従い、フレックスアイテムの横幅が圧縮されます。数値が大きいほど大きく圧縮されます。
// flex-direction が column や column-reverse の場合は、高さに対して適用されます。
// 負数を指定することはできません。フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※伸長係数の設定値一覧
// 数値のみ 				: カラム数を設定（初期値は0）
// *************************************************
// =================================================
@mixin flex-grow($value: 0) {
	@include grantPrefix(flex-grow
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// フレックスアイテムの伸長係数を指定します。
// @param $value			: 圧縮係数（初期値は1）
// -------------------------------------------------
// フレックスアイテムの伸長係数を指定します。
// フレックスアイテムの横幅の合計が、フレックスコンテナのコンテンツ領域の幅に達しない場合に、
// 伸長係数に従い、フレックスアイテムの横幅が伸長されます。
// flex-direction が column や column-reverse の場合は、高さに対して適用されます。
// 負数を指定することはできません。フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※圧縮係数の設定値一覧
// 数値のみ 				: 圧縮率を設定（初期値は1）
// *************************************************
// =================================================
@mixin flex-shrink($value: 1) {
	@include grantPrefix(flex-shrink
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// フレックスアイテムの横幅(高さ)を指定します。
// @param $value			: 横幅(高さ)（初期値はauto）
// -------------------------------------------------
// フレックスアイテムの横幅(高さ)を指定します。
// flex-direction が row や row-reverse の場合は横幅、column や column-reverse の場合は高さを示す属性となります。
// フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※横幅(高さ)の設定値一覧
// auto 					: 横幅(高さ)を自動的に計算します。
// content 					: 横幅(高さ)をコンテンツの横幅(高さ)から決定します。
// 数値 + 単位				: 使用可能な長さを指定します。
// *************************************************
// =================================================
@mixin flex-basis($value: auto) {
	@include grantPrefix(flex-basis
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// flex-direction と flex-wrap をまとめて指定します。
// @param $values			: 設定値一覧（並べる方向 はみ出た場合の表示方法）（初期値はrow nowrap）
// -------------------------------------------------
// flex-direction と flex-wrap をまとめて指定します。
// フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※並べる方向の設定値一覧
// row 						: 横方向に並べます。
// row-reverse 				: 横方向に逆方向に並べます。
// column 					: 縦方向に並べます。
// column-reverse 			: 縦方向に逆方向に並べます。
// *************************************************
// ※はみ出た場合の表示方法の設定値一覧
// nowrap 					: はみ出しても一列に並べて表示します。IE10 では none として実装されていました。
// wrap 					: 複数行(列)に改行して表示します。
// wrap-reverse 			: 逆方向に改行します。
// *************************************************
// =================================================
@mixin flex-flow($values: row nowrap) {
	@include grantPrefix(flex-flow
						 , #{$values}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// フレックスアイテムを並べる方向を指定します。
// @param $values			: 並べる方向（初期値はrow）
// -------------------------------------------------
// フレックスアイテムを並べる方向を指定します。
// フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※並べる方向の設定値一覧
// row 						: 横方向に並べます。（初期値）
// row-reverse 				: 横方向に逆方向に並べます。
// column 					: 縦方向に並べます。
// column-reverse 			: 縦方向に逆方向に並べます。
// *************************************************
// =================================================
@mixin flex-direction($value: row) {
	@include grantPrefix(flex-direction
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// フレックスアイテムがはみ出た際の表示方法を指定します。
// @param $values			: 並べる方向（初期値はrow）
// -------------------------------------------------
// フレックスアイテムがフレックスコンテナに収まらない場合、
// はみ出してでも一列に並べて表示するか、複数行(列)に改行して表示するかを制御します。
// フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※はみ出た場合の表示方法の設定値一覧
// nowrap 					: はみ出しても一列に並べて表示します。IE10 では none として実装されていました。（初期値）
// wrap 					: 複数行(列)に改行して表示します。
// wrap-reverse 			: 逆方向に改行します。
// *************************************************
// =================================================
@mixin flex-wrap($value: nowrap) {
	// 旧ブラウザ、Android対応
	$old: single;
	@if $value == "wrap" {
		$old: multiple;
	}

	@include grantPrefix(box-lines
						  , #{$old}
						  , -moz, -webkit, -o, -khtml, -ms, official
						 );

	@include grantPrefix(flex-wrap
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  H  **********************************************//

// =================================================
// 高さを指定する
// @param $height			: 高さ（初期値はauto）
// -------------------------------------------------
// heightプロパティは、 <TABLE>・ <TD>・ <IMG>・ <INPUT>・ <TEXTAREA>・ <SELECT> などの領域の高さを指定する際に使用します。
// 指定方法には、実数値にpxなどの単位をつけて指定する方法と、親ボックスに対する割合を％で指定する方法と、
// 状況に応じて大きさが設定されるautoを指定する方法があります。heightプロパティに負の値は指定できません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// auto						: 状況に応じて自動設定します。（初期値）
// 数値で指定				: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: ％値で指定します。
// *************************************************
// =================================================
@mixin height($height: auto, $isPrefixOnly: false) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if $legacy-support-for-ie6 {
			_height: #{$height};
		}
	}
	@else {
		height: #{$height};
		// IE6をサポートする場合
		@if $legacy-support-for-ie6 {
			_height: #{$height};
		}
	}
}

// ********************************************  I  **********************************************//

// =================================================
// テキスト入力時のIMEの状態を指定する（IE独自仕様）
// @param $state			: IMEの状態
// -------------------------------------------------
// ime-modeプロパティは、Internet Explorerが独自に追加した仕様で、テキスト入力時のIMEの状態を指定する際に使用します。
// IMEとはInput Method Editorの略で、日本語を入力するためのソフトのことです。
// 日本語入力ソフトには、Windowsの「MS-IME」やマッキントッシュの「ことえり」、ジャストシステム社の「ATOK（エイトック）」などがあります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// auto						: 特に指定しません。（初期値）
// active					: 初期値が日本語入力モードになります。
// inactive					: 初期値が英数字入力モードになります。
// disabled					: 英数字入力モードになります。ユーザーの操作によるモードの変更はできません。
// *************************************************
// =================================================
@mixin ime-mode($state: auto) {
	ime-mode: #{$state};
}

// =================================================
// 要素のアイコンを指定する
// @param $type				: アイコンのタイプ
// -------------------------------------------------
// iconプロパティは、要素のアイコンを指定する際に使用します。 文書内のテキストなどが多すぎて閲覧の邪魔になる場合、
// iconプロパティで任意の要素にアイコンを割り当てることで閲覧しやすくなるかもしれません。
// iconプロパティの値には、URIでアイコンファイルを指定します。 アイコンファイルはカンマ区切りで複数指定することができますが、
// 異なるフォーマットのアイコンを指定しておくことで、様々なプラットフォームやメディアに合わせて、
// アイコンを使い分けることができます。 ユーザーエージェントは、カンマ区切りで指定されたURIを1つずつ参照して、
// 描画可能なアイコンを表示します。 描画可能なアイコンが無い場合には、autoと同じ表示となります。
// iconプロパティで指定する要素のアイコンは、contentプロパティの値がiconに設定されているときに有効となります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// auto						: ユーザーエージェントの提供する一般的なアイコンが使用される（初期値）
// URI						: URIで1つ以上のアイコンファイルをカンマ区切りで指定する
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin icon($type: auto) {
	@include grantPrefix(icon
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  J  **********************************************//

// =================================================
// flexアイテムの横方向の位置揃えを指定する
// @param $type				: 配置タイプ（初期値はcenter）
// -------------------------------------------------
// lexアイテムの横方向の整列を指定します。
//（flex-directionプロパティの値がrow、row-reverseのときは縦方向）
// 必ずflexコンテナに指定してください。
// -------------------------------------------------
// *************************************************
// ※配置タイプの設定値一覧
// flex-start				: 横並びの場合（flex-direction:row;、flex-direction:row-reverse;）は左揃えになり、縦並びの場合（flex-direction:column;、flex-direction:column-reverse;）は上揃えになります。
// flex-end					: flex-startの逆です。横並びの場合は右揃え、縦並びの場合は下揃えになります。
// center					: 各flexアイテムが中央揃えになります。
// space-between			: flexコンテナ内で各flexアイテムが均等の間隔を持って整列します。
// space-around				: space-betweenと同じく均等の間隔を持って整列しますが、両端のflexアイテムの外側にflexアイテム間隔の半分の余白ができます。
// *************************************************
// =================================================
@mixin justify-content($type: center) {
	// 旧ブラウザ設定値を判定
	$oldParam: "";
	@if $type == "flex-start" {
		$oldParam: start;
	}
	@else if $type == "flex-end" {
		$oldParam: end;
	}
	@else if $type == "center" {
		$oldParam: center;
	}
	@else if $type == "space-between" {
		$oldParam: justify;
	}
	@else if $type == "space-around" {
		$oldParam: distribute;
	}
	@if $support-for-old-android {
		-webkit-box-pack: #{$oldParam};
	}
	@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
		-ms-flex-pack: #{$oldParam};
	}
	@include grantPrefix(justify-content
						 , #{$type}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  L  **********************************************//

// =================================================
// グリッドに関する指定をまとめて行う（IE独自の仕様）
// @param $values			: 設定値一覧（グリッドモード グリッドタイプ グリッドの高さ グリッドの幅）（初期値はboth loose none none）
// -------------------------------------------------
// layout-gridプロパティは、W3Cで審議中のものをInternet Explorerが独自に採用したもので、グリッドに関する指定をまとめて行う際に使用します。
// グリッドとはます目のことですが、layout-gridプロパティを使用することで、日本語や中国語などの文字を一文字ずつグリッド（ます目）に入れてレイアウトすることができます。
// layout-gridプロパティでは、 layout-grid-mode（グリッドに文字を乗せるかどうか）、layout-grid-type（グリッドへの文字の乗せ方）、 layout-grid-line（グリッドの高さ）、
// layout-grid-char （グリッドの幅）の値を半角スペースで区切って記述します。指定可能な値については、各プロパティのページを参照してください。
// 尚、IE8では、IE8 Standardsモードで表示すると、layout-grid-typeとlayout-grid-lineの指定が無効になるようです。
// IE8でもIE7以下と同様の表示にするには、<meta>要素で以下の指定を追加します。
// 例: <meta http-equiv="X-UA-Compatible" content="IE=7">
// 上記の指定により、ブラウザの表示モードがIE7 Standardsモードとなり、IE8でもグリッド表示が有効になります。
// -------------------------------------------------
// *************************************************
// ※グリッドモード設定値一覧
// both						: 横方向・縦方向ともグリッドに乗せる（初期値）
// none						: 横方向・縦方向ともグリッドに乗せない
// line						: 行グリッド（横書きの場合の高さ）のみを有効にする
// char						: 文字グリッド（横書きの場合の幅）のみを有効にする
// *************************************************
// ※グリッドタイプ設定値一覧
// loose					: 全角文字や半角カナはグリッド幅を空けて、半角英数はその半分の幅を空けて表示（初期値）
// strict					: 全角文字や半角カナはグリッドの中心に収め、半角英数はそのまま表示
// fixed					: すべての文字をグリッドの中心に収める
// *************************************************
// ※グリッドの高さ設定値一覧
// none						: 行グリッドの高さを指定しない（初期値）
// auto						: 最も大きな文字に合わせて行グリッドの高さが設定される
// パーセントで指定			: 親ボックスのサイズに対する割合を%値で指定
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定
// *************************************************
// ※グリッドの幅設定値一覧
// none						: 文字グリッドの幅を指定しない（初期値）
// auto						: 最も大きな文字に合わせて文字グリッドの幅が設定される
// パーセントで指定			: 親ボックスのサイズに対する割合を%値で指定
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定
// *************************************************
// =================================================
@mixin layout-grid($values: both loose none none) {
	layout-grid: #{$values};
}

// =================================================
// 文字グリッドの幅を指定する（IEがCSS3の草案を先行採用）
// @param $char				: グリッドの幅（初期値はnone）
// -------------------------------------------------
// layout-grid-charプロパティは、W3Cで審議中のものをInternet Explorerが独自に採用したもので、
// 文字グリッドの幅（縦書きの場合は高さ）を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※グリッドの幅設定値一覧
// none						: 文字グリッドの幅を指定しない（初期値）
// auto						: 最も大きな文字に合わせて文字グリッドの幅が設定される
// パーセントで指定			: 親ボックスのサイズに対する割合を%値で指定
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定
// *************************************************
// =================================================
@mixin layout-grid-char($char: none) {
	layout-grid-char: #{$char};
}

// =================================================
// 行グリッドの高さを指定する（IEがCSS3の草案を先行採用）
// @param $line				: グリッドの高さ（初期値はnone）
// -------------------------------------------------
// layout-grid-lineプロパティは、W3Cで審議中のものをInternet Explorerが独自に採用したもので、行グリッドの高さ（縦書きの場合は幅）を指定する際に使用します。
// layout-grid-lineプロパティは、line-heightプロパティで代替しても良いでしょう。
// 尚、IE8では、IE8 Standardsモードで表示すると、layout-grid-typeとlayout-grid-lineの指定が無効になるようです。
// IE8でもIE7以下と同様の表示にするには、<meta>要素で以下の指定を追加します。
// 例: <meta http-equiv="X-UA-Compatible" content="IE=7">
// 上記の指定により、ブラウザの表示モードがIE7 Standardsモードとなり、IE8でもグリッド表示が有効になります。
// -------------------------------------------------
// *************************************************
// ※グリッドの高さ設定値一覧
// none						: 行グリッドの高さを指定しない（初期値）
// auto						: 最も大きな文字に合わせて行グリッドの高さが設定される
// パーセントで指定			: 親ボックスのサイズに対する割合を%値で指定
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定
// *************************************************
// =================================================
@mixin layout-grid-line($line: none) {
	layout-grid-line: #{$line};
}

// =================================================
// グリッドに文字を乗せるかどうかを指定する（IEがCSS3の草案を先行採用）
// @param $mode				: グリッドモード（初期値はboth）
// -------------------------------------------------
// layout-grid-modeプロパティは、W3Cで審議中のものをInternet Explorerが独自に採用したもので、
// 日本語などの文字列をグリッドに乗せるかどうかを指定する際に使用します。
// layout-grid-modeプロパティでは、行グリッドと文字グリッドがそれぞれ有効・無効を指定します。
// 初期値はbothで、どちらも有効となっています。
// -------------------------------------------------
// *************************************************
// ※グリッドモード設定値一覧
// both						: 横方向・縦方向ともグリッドに乗せる（初期値）
// none						: 横方向・縦方向ともグリッドに乗せない
// line						: 行グリッド（横書きの場合の高さ）のみを有効にする
// char						: 文字グリッド（横書きの場合の幅）のみを有効にする
// *************************************************
// =================================================
@mixin layout-grid-mode($mode: both) {
	layout-grid-mode: #{$mode};
}

// =================================================
// グリッドへの文字の乗せ方を指定する（IEがCSS3の草案を先行採用）
// @param $type				: グリッドタイプ（初期値はloose）
// -------------------------------------------------
// layout-grid-typeプロパティは、W3Cで審議中のものをInternet Explorerが独自に採用したもので、
// グリッドのタイプ（グリッドへの文字の乗せ方）を指定する際に使用します。
// グリッドタイプの選択によって、全角文字・半角カナ・半角英数などの文字について、グリッド幅の文字間を空けて表示させたり、
// 文字をグリッドの中心に収めて表示するなど、グリッドへの文字の乗せ方を指定することができます。
// 尚、IE8では、IE8 Standardsモードで表示すると、layout-grid-typeとlayout-grid-lineの指定が無効になるようです。
// IE8でもIE7以下と同様の表示にするには、<meta>要素で以下の指定を追加します。
// 例: <meta http-equiv="X-UA-Compatible" content="IE=7">
// 上記の指定により、ブラウザの表示モードがIE7 Standardsモードとなり、IE8でもグリッド表示が有効になります。
// -------------------------------------------------
// *************************************************
// ※グリッドタイプ設定値一覧
// loose					: 全角文字や半角カナはグリッド幅を空けて、半角英数はその半分の幅を空けて表示（初期値）
// strict					: 全角文字や半角カナはグリッドの中心に収め、半角英数はそのまま表示
// fixed					: すべての文字をグリッドの中心に収める
// *************************************************
// =================================================
@mixin layout-grid-type($type: loose) {
	layout-grid-type: #{$type};
}

// =================================================
// 左からの配置位置（距離）を指定する
// @param $position			: ポジション（初期値はauto）
// -------------------------------------------------
// leftプロパティは、ボックスを配置する場合の、左からの配置位置（距離）を指定する際に使用します。
// 左からの配置位置（距離）とは、基準位置の左l端から配置するボックスの左端までの距離を指します。
// leftプロパティで指定するのは基準位置からの距離のみです。
// 実際の表示位置の指定には、positionプロパティを併用して、配置方法（基準位置）を設定する必要があります。
// 尚、leftプロパティの値は、positionプロパティの値がstatic以外のときに有効となります。
// -------------------------------------------------
// *************************************************
// ※ポジション設定値一覧
// auto						: 自動的に調整されます。（初期値）
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: 基準となる親ボックスの幅・高さに対する割合を％値で指定します。
// *************************************************
// =================================================
@mixin left($position: auto) {
	left: #{$position};
}

// =================================================
// 文字の間隔を指定する
// @param $interval			: 文字の間隔（初期値はnormal）
// -------------------------------------------------
// letter-spacingプロパティは、文字の間隔を指定する際に使用します。
// 文字の間隔にはマイナスの値を指定することもできます。
// -------------------------------------------------
// *************************************************
// ※文字の間隔設定値一覧
// normal					: 標準の間隔にします。（初期値）
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin letter-spacing($interval: normal) {
	letter-spacing: #{$interval};
}

// =================================================
// 禁則処理のしかたを指定する（IEがCSS3の草案を先行採用）
// @param $type				: 禁則処理（初期値はnormal）
// -------------------------------------------------
// line-breakプロパティは、W3Cで審議中の仕様をInternet Explorerが独自に採用したもので、
// 禁則処理を厳密にするかどうかを指定する際に使用します。
// 禁則処理とは、文章の読みやすさや美的な観点から、句読点や括弧等の文字が行頭（または行末）に来ないようにする処理です。
// -------------------------------------------------
// *************************************************
// ※禁則処理の設定値一覧
// normal					: 標準の禁則処理をします。（初期値）
// strict					: 厳密な禁則処理をします。
// *************************************************
// =================================================
@mixin line-break($type: normal) {
	line-break: #{$type};
}

// =================================================
// 行の高さを指定するプロパティです。
// @param $height			: 行の高さ（初期値はnormal）
// -------------------------------------------------
// 行の高さを設定します。
// -------------------------------------------------
// *************************************************
// ※行の高さの設定値一覧
// normal					: フォントサイズをベースにした高さ（初期値）
// 数値で指定				: フォントサイズをベースとした倍数
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// パーセントで指定			: %で指定します。
// *************************************************
// =================================================
@mixin line-height($height: normal) {
	line-height: #{$height};
}

// =================================================
// マーカーに関する指定をまとめて行う
// @param $values			: 設定値一覧（マーカーのタイプ マーカーの画像パス マーカーの表示位置）（初期値はnormal none outside）
// -------------------------------------------------
// list-styleプロパティは、リストの先頭に表示するマーカーに関する指定をまとめて行う際に使用します。
// list-style-type・ list-style-image・ list-style-positionのうち、 指定する値を任意の順序でスペースで区切って記述します。
// 尚、list-style-typeと、 list-style-imageの値を同時に指定した場合には、 list-style-imageの値が優先されます。
// -------------------------------------------------
// *************************************************
// ※マーカータイプ設定値一覧
// none						: マーカーなし （初期値）
// disc						: 黒丸
// circle					: 白丸
// square					: 黒四角
// lower-roman				: 小文字のローマ数字
// upper-roman				: 大文字のローマ数字
// lower-greek				: 小文字のギリシャ文字
// decimal					: 算用数字
// decimal-leading-zero		: 先頭に0をつけた算用数字
// lower-latin				: 小文字のアルファベット
// lower-alpha				: 小文字のアルファベット
// upper-latin				: 大文字のアルファベット
// upper-alpha				: 大文字のアルファベット
// cjk-ideographic			: 漢数字
// hiragana					: ひらがなのあいうえお順
// katakana					: カタカナのアイウエオ順
// hiragana-iroha			: ひらがなのいろはにほへと順
// katakana-iroha			: カタカナのイロハニホヘト順
// hebrew					: ヘブライ数字
// armenian					: アルメニア数字
// georgian					: グルジア数字
// *************************************************
// ※マーカー画像パス設定値一覧
// URI						: URI（URL）で画像ファイルを指定します。
// none						: リストの先頭に表示するマーカーに画像ファイルを使用しないことを明示します。（初期値）
// *************************************************
// ※マーカーの表示位置設定値一覧
// outside					: マーカーがリスト内容の領域の外側に表示され、マーカー以外の部分がインデント（字下げ）された形になります。（初期値）
// inside					: マーカーがリスト内容の領域の内側に表示され、マーカーとマーカー以外の部分の高さが揃います。
// *************************************************
// =================================================
@mixin list-style($values: normal none outside) {
	list-style: #{$values};
}

// =================================================
// マーカー画像を指定する
// @param $image			: マーカーの画像パス（初期値はnone）
// -------------------------------------------------
// list-style-imageプロパティは、リストの先頭に表示するマーカーに画像ファイルを指定する際に使用します。
// 尚、list-style-typeと、list-style-imageの値を同時に指定した場合には、 list-style-imageの値が優先されます。
// -------------------------------------------------
// *************************************************
// ※マーカー画像パス設定値一覧
// URI						: URI（URL）で画像ファイルを指定します。
// none						: リストの先頭に表示するマーカーに画像ファイルを使用しないことを明示します。（初期値）
// *************************************************
// =================================================
@mixin list-style-image($image: none) {
	list-style-image: #{$image};
}

// =================================================
// マーカーの表示位置を指定する
// @param $position			: マーカーの表示位置（初期値はoutside）
// -------------------------------------------------
// list-style-positionプロパティは、リストの先頭に表示するマーカーの表示位置を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※マーカーの表示位置設定値一覧
// outside					: マーカーがリスト内容の領域の外側に表示され、マーカー以外の部分がインデント（字下げ）された形になります。（初期値）
// inside					: マーカーがリスト内容の領域の内側に表示され、マーカーとマーカー以外の部分の高さが揃います。
// *************************************************
// =================================================
@mixin list-style-position($position: outside) {
	list-style-image: #{$position};
}

// =================================================
// マーカー文字の種類を指定する
// @param $type				: マーカーのタイプ（初期値はnormal）
// -------------------------------------------------
// list-style-typeプロパティは、リストの先頭に表示するマーカー文字の種類を指定する際に使用します。
// 閲覧環境により、本来の仕様の通りに表示されない値もあるので注意してください。
// 尚、list-style-typeと、list-style-imageの値を同時に指定した場合には、 list-style-imageの値が優先されます。
// -------------------------------------------------
// *************************************************
// ※マーカータイプ設定値一覧
// none						: マーカーなし （初期値）
// disc						: 黒丸
// circle					: 白丸
// square					: 黒四角
// lower-roman				: 小文字のローマ数字
// upper-roman				: 大文字のローマ数字
// lower-greek				: 小文字のギリシャ文字
// decimal					: 算用数字
// decimal-leading-zero		: 先頭に0をつけた算用数字
// lower-latin				: 小文字のアルファベット
// lower-alpha				: 小文字のアルファベット
// upper-latin				: 大文字のアルファベット
// upper-alpha				: 大文字のアルファベット
// cjk-ideographic			: 漢数字
// hiragana					: ひらがなのあいうえお順
// katakana					: カタカナのアイウエオ順
// hiragana-iroha			: ひらがなのいろはにほへと順
// katakana-iroha			: カタカナのイロハニホヘト順
// hebrew					: ヘブライ数字
// armenian					: アルメニア数字
// georgian					: グルジア数字
// *************************************************
// =================================================
@mixin list-style-type($type: normal) {
	list-style-type: #{$type};
}

// ********************************************  M  **********************************************//

// =================================================
// マージンに関する指定をまとめて行う
// @param $values			: 設定値一覧（上マージン 右マージン 下マージン 左マージン）（初期値は設定ファイルの設定値）
// -------------------------------------------------
// marginプロパティは、上下左右のマージンをまとめて指定する際に使用します。
// 上下左右を異なるマージン幅にしたい場合には、スペースで区切って複数の値を指定します。
// ・値を1つ指定した場合：	指定した値が[上下左右]のマージンになります。
// ・値を2つ指定した場合：	記述した順に[上下][左右]のマージンになります。
// ・値を3つ指定した場合：	記述した順に[上][左右][下]のマージンになります。
// ・値を4つ指定した場合：	記述した順に[上][右][下][左]のマージンになります。
// マージンはパディングとセットで覚えるのが良いと思います。
// マージンは領域間のスペース、パディングは領域内のスペースです。
// 尚、マージンには負の値を指定することもできます。 マージンに負の値を指定することで、
// 複数の領域を重ねて表示させることが可能ですが、重なり順や重ね位置がブラウザによって異なるため、注意が必要です。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin margin($values: $base-margin) {
	margin: #{$values};
}

// =================================================
// 上マージンを指定する
// @param $margin			: 上マージン（初期値は設定ファイルの設定値）
// -------------------------------------------------
// margin-topプロパティは、上マージンを指定する際に使用します。
// 尚、マージンには負の値を指定することもできます。
// マージンに負の値を指定することで、複数の領域を重ねて表示させることが可能ですが、重なり順や重ね位置がブラウザによって異なるため、注意が必要です。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin margin-top($margin: $base-margin-top) {
	margin-top: #{$margin};
}

// =================================================
// 右マージンを指定する
// @param $margin			: 右マージン（初期値は設定ファイルの設定値）
// -------------------------------------------------
// margin-rightプロパティは、右マージンを指定する際に使用します。
// 尚、マージンには負の値を指定することもできます。
// マージンに負の値を指定することで、複数の領域を重ねて表示させることが可能ですが、重なり順や重ね位置がブラウザによって異なるため、注意が必要です。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin margin-right($margin: $base-margin-right) {
	margin-right: #{$margin};
}

// =================================================
// 下マージンを指定する
// @param $margin			: 下マージン（初期値は0）
// -------------------------------------------------
// margin-bottomプロパティは、下マージンを指定する際に使用します。
// 尚、マージンには負の値を指定することもできます。
// マージンに負の値を指定することで、複数の領域を重ねて表示させることが可能ですが、重なり順や重ね位置がブラウザによって異なるため、注意が必要です。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin margin-bottom($margin: $base-margin-bottom) {
	margin-bottom: #{$margin};
}

// =================================================
// 左マージンを指定する
// @param $margin			: 左マージン（初期値は0）
// -------------------------------------------------
// margin-leftプロパティは、左マージンを指定する際に使用します。
// 尚、マージンには負の値を指定することもできます。
// マージンに負の値を指定することで、複数の領域を重ねて表示させることが可能ですが、重なり順や重ね位置がブラウザによって異なるため、注意が必要です。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin margin-left($margin: $base-margin-left) {
	margin-left: #{$margin};
}

// =================================================
// 高さの最大値を指定する
// @param $height			: 領域の高さの最大値（初期値はnone）
// -------------------------------------------------
// max-heightプロパティは、 <IMG>・ <INPUT>・ <TEXTAREA>・ <SELECT> などの領域の高さの最大値を指定する際に使用します。
// 最大値を指定することで、これらの要素の高さを一定範囲内に収めることができます。
// 指定方法には、実数値にpxなどの単位をつけて指定する方法と、親ボックスに対する割合を％で指定する方法があります。
// また、高さを制限させないようにするにはnoneを指定します。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// none						: 最大値の制限をしません。（初期値）
// 数値＋単位で指定			: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: ％値で指定します。
// *************************************************
// =================================================
@mixin max-height($height: none) {
	max-height: #{$height};
}

// =================================================
// 幅の最大値を指定する
// @param $width			: 領域の幅の最大値（初期値はnone）
// -------------------------------------------------
// max-widthプロパティは、 <IMG>・ <INPUT>・ <TEXTAREA>・ <SELECT> などの領域の幅の最大値を指定する際に使用します。
// 最大値を指定することで、これらの要素の幅を一定範囲内に収めることができます。
// 指定方法には、実数値にpxなどの単位をつけて指定する方法と、親ボックスに対する割合を％で指定する方法があります。
// また、幅を制限させないようにするにはnoneを指定します。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// none						: 最大値の制限をしません。（初期値）
// 数値＋単位で指定			: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: ％値で指定します。
// *************************************************
// =================================================
@mixin max-width($width: none) {
	max-width: #{$width};
}

// =================================================
// 高さの最小値を指定する
// @param $height			: 領域の高さの最小値（初期値は1%）
// -------------------------------------------------
// min-heightプロパティは、 <IMG>・ <INPUT>・ <TEXTAREA>・ <SELECT>などの領域の高さの最小値を指定する際に使用します。
// 最小値を指定することで、これらの要素の高さを一定範囲内に収めることができます。
// 指定方法には、実数値にpxなどの単位をつけて指定する方法と、親ボックスに対する割合を％で指定する方法があります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 数値＋単位で指定			: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: ％値で指定します。
// *************************************************
// =================================================
@mixin min-height($value: 1%, $isPrefixOnly: false) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if $legacy-support-for-ie7 {
			min-height: #{$value};
		}
	}
	@else {
		min-height: #{$value};
		// IE6をサポートする場合
		@if $legacy-support-for-ie6 {
			_height: #{$value};
		}
	}
}

// =================================================
// 幅の最小値を指定する
// @param $width			: 領域の幅の最小値（初期値は1%）
// -------------------------------------------------
// min-widthプロパティは、 <IMG>・ <INPUT>・ <TEXTAREA>・ <SELECT> などの領域の幅の最小値を指定する際に使用します。
// 最小値を指定することで、これらの要素の幅を一定範囲内に収めることができます。
// 指定方法には、実数値にpxなどの単位をつけて指定する方法と、親ボックスに対する割合を％で指定する方法があります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 数値＋単位で指定			: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: ％値で指定します。
// *************************************************
// =================================================
@mixin min-width($value: 1%, $isPrefixOnly: false) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if $legacy-support-for-ie6 {
			_width: #{$value};
		}
	}
	@else {
		min-width: #{$value};
		// IE6をサポートする場合
		@if $legacy-support-for-ie6 {
			_width: #{$value};
		}
	}
}

// ********************************************  O  **********************************************//

// =================================================
// フレックスアイテムの表示順序を指定する
// @param $lines			: 表示順序（初期値は0）
// -------------------------------------------------
// フレックスアイテムや、フレックスコンテナ内の絶対位置指定(position:absolute)の要素に対して、
// 表示する順序を指定します。指定した数字の小さな方から表示されます。
// 負数を指定することも可能です。フレキシブルボックスについての概要は flex を参照してください。
// -------------------------------------------------
// *************************************************
// ※表示順序の設定値一覧
// 自然数で指定				:
// *************************************************
// =================================================
@mixin order($order: 0) {
	-webkit-flex-order: #{$order};
	-ms-flex-order: #{$order};
	order: #{$order};
}

// =================================================
// 改ページされる際の前ページの最低行数を指定する
// @param $lines			: 改ページされる際の前ページの最低行数（初期値は2）
// -------------------------------------------------
// orphansプロパティは、改ページされる際の前ページの最低行数を指定する際に使用します。
// 印刷が複数ページにまたがって要素の途中で改ページされる際に、前ページに最低限あって欲しい行数を指定します。
// ちなみに、orphans（オーファン）とは、直訳すると孤児という意味で、
// 印刷用語では「次ページへと続く段落の始まりとなるページ末尾に残された孤立行」を指します。
// また、よく似たプロパティにwidows（ウィドー）がありますが、これは直訳すると未亡人という意味で、
// 印刷用語では「前ページから続く段落の終わりとなるページ最上部に残された孤立行」を指します。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 自然数で指定				: 改ページされる際、前ページに最低限あって欲しい行数を整数値で指定（初期値は2）
// *************************************************
// =================================================
@mixin orphans($lines: 2) {
	orphans: #{$lines};
}

// =================================================
// アウトラインのスタイル・太さ・色を指定する
// @param $values			: 設定値一覧（スタイル 太さ 色）（初期値はnone）
// -------------------------------------------------
// outlineプロパティは、アウトラインのスタイル・太さ・色をまとめて指定する際に使用します。
// スタイル・太さ・色のうち、指定する値を任意の順序でスペースで区切って記述します。
// borderプロパティとは異なり、outlineプロパティには上下左右の概念はありません。
// アウトラインをつける（縁取りをする）対象が丸い場合には、アウトラインも丸くなります。
// -------------------------------------------------
// *************************************************
// ※スタイルの設定値一覧
// none						: アウトラインは表示されず、太さも0になります。（初期値）
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のアウトラインが暗く、下と右のアウトラインが明るく表示され、アウトラインで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のアウトラインが明るく、下と右のアウトラインが暗く表示され、アウトラインで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// *************************************************
// ※太さの設定値一覧
// 数値で指定				: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// キーワードで指定			: thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// ※色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// invert					: 地の色を反転させた色になります。
// *************************************************
// =================================================
@mixin outline($values: none) {
	outline: #{$values};
}

// =================================================
// アウトラインの色を指定する
// @param $color			: 色（初期値はtransparent）
// -------------------------------------------------
// outline-colorプロパティは、アウトラインの色を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// invert					: 地の色を反転させた色になります。
// *************************************************
// =================================================
@mixin outline-color($color: transparent) {
	outline-color: #{$color};
}

// =================================================
// アウトラインのスタイルを指定する
// @param $style			: スタイル（初期値はnone）
// -------------------------------------------------
// outline-styleプロパティは、アウトラインのスタイルを指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※スタイルの設定値一覧
// none						: アウトラインは表示されず、太さも0になります。（初期値）
// solid					: 1本線で表示されます。
// double					: 2本線で表示されます。
// groove					: 立体的に窪んだ線で表示されます。
// ridge					: 立体的に隆起した線で表示されます。
// inset					: 上と左のアウトラインが暗く、下と右のアウトラインが明るく表示され、アウトラインで囲まれた領域全体が立体的に窪んだように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// outset					: 上と左のアウトラインが明るく、下と右のアウトラインが暗く表示され、アウトラインで囲まれた領域全体が立体的に隆起したように表示されます。上下左右の一部だけに指定しても立体感は出ません。
// dashed					: 破線で表示されます。
// dotted					: 点線で表示されます。
// =================================================
@mixin outline-style($style: none) {
	outline-style: #{$style};
}

// =================================================
// アウトラインの太さを指定する
// @param $width			: 太さ（初期値は0）
// -------------------------------------------------
// outline-widthプロパティは、アウトラインの太さを指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※太さの設定値一覧
// 数値で指定				: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// キーワードで指定			: thin（細い）、medium（普通）、thick（太い）のうち、いずれかを指定します。キーワードで指定する場合、実際に表示される太さはブラウザにより異なります。
// *************************************************
// =================================================
@mixin outline-width($width: 0) {
	outline-width: #{$width};
}

// =================================================
// アウトラインのオフセット値を指定する
// @param $offset			: アウトラインから離す距離（初期値は0）
// -------------------------------------------------
// outline-offsetプロパティは、アウトラインのオフセット値を指定する際に使用します。
// アウトラインは、デフォルトではボーダーのすぐ外側に描かれますが、
// outline-offsetプロパティを使用すると、ボーダーから離してオフセット表示することができます。
// outline-offsetプロパティでは、長さ値でボーダーの端からアウトラインを離す距離を指定します。 初期値は0です。
// -------------------------------------------------
// *************************************************
// ※アウトラインから離す距離の設定値一覧
// 数値 + 単位で指定		: ボーダーの端からアウトラインを離す距離を指定する（初期値は0）
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin outline-offset($offset: 0) {
	outline-offset: #{$offset};
}

// =================================================
// はみ出た内容の表示方法を指定する
// @param $type				: はみ出た部分の表示方法（初期値はauto）
// -------------------------------------------------
// overflowプロパティは、ボックスの範囲内に内容が入りきらない場合に、はみ出た部分の表示の仕方を指定する際に使用します。
// overflowプロパティは、デザインやインターフェースの好みで、 擬似フレームや擬似テキストエリア的な表現にしたい場合に用いるケースが多いようです。
// -------------------------------------------------
// *************************************************
// ※はみ出た部分の表示方法の設定値一覧
// visible					: ボックスからはみ出して表示されます。これが初期値です。尚、Internet Explorerでは、内容がはみ出すのではなく、ボックスの方が内容に合わせて拡張されます。
// scroll					: 入りきらない内容はスクロールして見られるようになります。
// hidden					: はみ出た部分は表示されません。
// auto						: ブラウザに依存します（一般的にはスクロールして見られるようになります）。
// *************************************************
// =================================================
@mixin overflow($type: auto) {
	overflow: #{$type};
}

// =================================================
// X軸方向ではみ出た内容の表示方法を指定する（IE独自の仕様）
// @param $type				: はみ出た部分の表示方法（初期値はauto）
// -------------------------------------------------
// overflow-xプロパティは、Internet Explorerが独自に追加したプロパティで、
// ボックスの範囲内に内容が入りきらない場合に、はみ出た部分の表示の仕方を指定する際に使用します。
// 機能としてはoverflowプロパティと同じですが、 横スクロールバーのみが表示され、縦スクロールバーは表示されません。
// overflow-xプロパティは、デザインやインターフェースの好みで、縦スクロールバーのみを消したり、
// 擬似フレームや擬似テキストエリア的な表現にしたい場合に用いるケースが多いようです。
// -------------------------------------------------
// *************************************************
// ※はみ出た部分の表示方法の設定値一覧
// visible					: ボックスからはみ出して表示されます。これが初期値です。尚、Internet Explorerでは、内容がはみ出すのではなく、ボックスの方が内容に合わせて拡張されます。
// scroll					: 入りきらない内容はスクロールして見られるようになります。
// hidden					: はみ出た部分は表示されません。
// auto						: ブラウザに依存します（一般的にはスクロールして見られるようになります）。
// *************************************************
// =================================================
@mixin overflow-x($type: auto) {
	overflow-x: #{$type};
}

// =================================================
// Y軸方向ではみ出た内容の表示方法を指定する（IE独自の仕様）
// @param $type				: はみ出た部分の表示方法（初期値はauto）
// -------------------------------------------------
//  overflow-yプロパティは、Internet Explorerが独自に追加したプロパティで、
// ボックスの範囲内に内容が入りきらない場合に、はみ出た部分の表示の仕方を指定する際に使用します。
// 機能としてはoverflowプロパティと同じですが、 縦スクロールバーのみが表示され、横スクロールバーは表示されません。
// overflow-yプロパティは、デザインやインターフェースの好みで、横スクロールバーのみを消したり、
// 擬似フレームや擬似テキストエリア的な表現にしたい場合に用いるケースが多いようです。
// -------------------------------------------------
// *************************************************
// ※はみ出た部分の表示方法の設定値一覧
// visible					: ボックスからはみ出して表示されます。これが初期値です。尚、Internet Explorerでは、内容がはみ出すのではなく、ボックスの方が内容に合わせて拡張されます。
// scroll					: 入りきらない内容はスクロールして見られるようになります。
// hidden					: はみ出た部分は表示されません。
// auto						: ブラウザに依存します（一般的にはスクロールして見られるようになります）。
// *************************************************
// =================================================
@mixin overflow-y($type: auto) {
	overflow-y: #{$type};
}

// =================================================
// 透明度を設定する
// @param $opacity			: 透明度（初期値は1）
// -------------------------------------------------
// opacityプロパティは、要素の透明度を指定する際に使用します。
// 透明度は、0.0（完全に透明）～1.0（完全に不透明）の数値で指定します。
// この範囲からはみ出した値を指定しても範囲内に収められます。
// opacityプロパティで1未満の数値を指定した際には、透明効果がオブジェクト全体に均一に適用されます。
// コンテナ要素に指定した場合には、その内容にも透明効果が適用されて背景と混合したような表示となります。
// 透明効果をオブジェクト全体ではなく、背景色やボーダー色に個別に適用したい場合には、rgba()で指定することができます。
// -------------------------------------------------
// *************************************************
// ※透明度の設定値一覧
// 値で指定					: 0[透明]～1[不透明]の間で指定します。(初期値は1)
// *************************************************
// =================================================
@mixin opacity($opacity: 1) {
	opacity: #{$opacity};
	-moz-opacity: #{$opacity};
	filter: #{alpha(opacity=$opacity * 100)};
	-ms-filter: "alpha(opacity=#{$opacity * 100})";
}

// =================================================
// マウスイベントの対象となりうる特定の可視要素への編集者のコントロールを設定します。
// @param $property			: マウスイベントの設定値（初期値はauto）
// -------------------------------------------------
// CSSプロパティ pointer-events は、マウスイベントの対象となりうる特定の可視要素への編集者のコントロールを可能にします。
// このプロパティを指定しない場合、同様な特性値である visiblePainted の値がSVGコンテンツに適用されます。
// 値noneは、要素がマウスイベントのターゲットにならないことを明示することに加え、
// その代わりにマウスイベントが通過する要素やその配下にあるどんなターゲット要素へも指示はしません。
// -------------------------------------------------
// *************************************************
// ※マウスイベントの設定値の設定値一覧
// auto						: 要素は、pointer-eventsプロパティが指定されていないときと同様にふるまいます。SVGコンテンツ内ではvisiblePaintedを指定したときと同じ効果になります。（初期値）
// none						: 要素は、マウスイベントのターゲットになることはありません。しかし、子孫要素がpointer-eventsの別の値をセットされていた場合は、その子孫要素自体はマウスイベントのターゲットとなりえます。
// 							  その場合、マウスイベントはそのイベント キャプチャ/バブル フェーズの過程で必要に応じて親要素のイベントリスナーをトリガーします。
// visiblePainted			: SVGの場合のみの値です。要素の visibility プロパティにvisibleがセットされていて、
// 							  fillプロパティにnone以外の値がセットされている塗りの（すなわちfill）要素の上、もしくはstrokeプロパティがnone以外の線の（すなわちstroke）
// 							  要素の上にマウスカーソルがある場合のみ、要素がマウスイベントのターゲットになりえます。visibilityプロパティの値はイベントプロセスに影響を与えません。
// visibleFill				: SVGの場合のみの値です。visibilityプロパティがvisibleにセットされていて、塗りの（すなわちfill）要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。
// 							  fillプロパティの値はイベントプロセスに影響を与えません。
// visibleStroke			: SVGの場合のみの値です。visibilityプロパティがvisibleにセットされていて、線の（すなわちstroke）要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。
// 							  strokeプロパティの値はイベントプロセスに影響を与えません。
// visible					: SVGの場合のみの値です。visibilityプロパティがvisibleにセットされていて、塗りの（すなわちfill）要素か線の（すなわちstroke）要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。
// 							  fillとstrokeプロパティの値はイベントプロセスに影響を与えません。
// painted					: SVGの場合のみの値です。fillプロパティがnone以外にセットされている塗りの（すなわちfill）要素、もしくはstrokeのプロパティがnone以外にセットされている線の（すなわちstroke）
// 							  要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。visibilityプロパティの値はイベントプロセスに影響を与えません。
// fill						: SVGの場合のみの値です。塗りの（すなわちfill）要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。
// 							  fillとvisibilityプロパティの値はイベントプロセスに影響を与えません。
// stroke					: SVGの場合のみの値です。線の（すなわちstroke）要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。
// 							  strokeとvisibilityの値はイベントプロセスに影響を与えません。
// all						: SVGの場合のみの値です。塗りの（すなわちfill）要素と線の（すなわちstroke）要素の上にマウスカーソルがいる場合にのみ要素がマウスイベントのターゲットになりえます。
// 							  fillとstrokeとvisibilityの値はイベントプロセスに影響を与えません。
// *************************************************
// =================================================
@mixin pointer-events($property: auto) {
	pointer-events: #{$property};
}

// ********************************************  P  **********************************************//

// =================================================
// パディングに関する指定をまとめて行う
// @param $values			: 設定値一覧（上の余白 右の余白 下の余白 左の余白 ）値（初期値は0）
// -------------------------------------------------
// paddingプロパティは、上下左右のパディングをまとめて指定する際に使用します。
// 上下左右を異なるパディング幅にしたい場合には、スペースで区切って複数の値を指定します。
// ・値を1つ指定した場合：	指定した値が[上下左右]のパディングになります。
// ・値を2つ指定した場合：	記述した順に[上下][左右]のパディングになります。
// ・値を3つ指定した場合：	記述した順に[上][左右][下]のパディングになります。
// ・値を4つ指定した場合：	記述した順に[上][右][下][左]のパディングになります。
// パディングはマージンとセットで覚えるのが良いと思います。
// マージンは領域間のスペース、パディングは領域内のスペースです。
// 尚、パディングには負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin padding($values: 0) {
	padding: #{$values};
}

// =================================================
// 上パディングを指定する
// @param $padding			: 上の余白（初期値は0）
// -------------------------------------------------
// padding-topプロパティは、上パディングを指定する際に使用します。パディングには負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin padding-top($padding: 0) {
	padding-top: #{$padding};
}

// =================================================
// 右パディングを指定する
// @param $padding			: 右の余白（初期値は0）
// -------------------------------------------------
// padding-rightプロパティは、右パディングを指定する際に使用します。パディングには負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin padding-right($padding: 0) {
	padding-right: #{$padding};
}

// =================================================
// 下パディングを指定する
// @param $padding			: 下の余白（初期値は0）
// -------------------------------------------------
// padding-bottomプロパティは、下パディングを指定する際に使用します。パディングには負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin padding-bottom($padding: 0) {
	padding-bottom: #{$padding};
}

// =================================================
// 左パディングを指定する
// @param $padding			: 左の余白（初期値は0）
// -------------------------------------------------
// padding-leftプロパティは、左パディングを指定する際に使用します。パディングには負の値を指定することはできません。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// 値 + 単位で指定			: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin padding-left($padding: 0) {
	padding-left: #{$padding};
}

// =================================================
// 印刷時の改ページ位置(前ページ)を指定する
// @param $position			: 印刷時の改ページ位置（初期値はauto）
// -------------------------------------------------
// page-break-beforeプロパティは、印刷時の改ページ位置を指定する際に使用します。
// このプロパティを指定した要素の直前で強制的に改ページさせたり、その位置での改ページを禁止したりします。
// -------------------------------------------------
// *************************************************
// ※印刷時の改ページ位置の設定値一覧
// auto						: 改ページについて特に指定しない（初期値）
// always					: その位置で強制的に改ページさせる
// left						: その位置で強制的に改ページさせて、指定要素を左側ページに印刷する（印刷して左右見開きのページにさせたい場合に使用する）
// right					: その位置で強制的に改ページさせて、指定要素を右側ページに印刷する（印刷して左右見開きのページにさせたい場合に使用する）
// avoid					: その位置での改ページを避ける
// *************************************************
// =================================================
@mixin page-break-before($position: auto) {
	page-break-before: #{$position};
}

// =================================================
// 印刷時の要素内での改ページを避ける
// @param $property			: 印刷時の要素内の改ページの設定（初期値はauto）
// -------------------------------------------------
// page-break-insideプロパティは、印刷時の要素内での改ページを避ける際に使用します。
// -------------------------------------------------
// *************************************************
// ※印刷時の要素内の改ページ設定の設定値一覧
// auto						: 改ページについて特に指定しない（初期値）
// avoid					: 要素内での改ページを避ける
// *************************************************
// =================================================
@mixin page-break-inside($property: auto) {
	page-break-inside: #{$property};
}

// =================================================
// 印刷時の改ページ位置(次ページ)を指定する
// @param $position			: 印刷時の改ページ位置（初期値はauto）
// -------------------------------------------------
// page-break-afterプロパティは、印刷時の改ページ位置を指定する際に使用します。
// このプロパティを指定した要素の直後で強制的に改ページさせたり、その位置での改ページを禁止したりします。
// -------------------------------------------------
// *************************************************
// ※印刷時の改ページ位置の設定値一覧
// auto						: 改ページについて特に指定しない（初期値）
// always					: その位置で強制的に改ページさせる
// left						: その位置で強制的に改ページさせて、指定要素を左側ページに印刷する（印刷して左右見開きのページにさせたい場合に使用する）
// right					: その位置で強制的に改ページさせて、指定要素を右側ページに印刷する（印刷して左右見開きのページにさせたい場合に使用する）
// avoid					: その位置での改ページを避ける
// *************************************************
// =================================================
@mixin page-break-after($position: auto) {
	page-break-after: #{$position};
}

// =================================================
// ボックスの配置方法（基準位置）を指定する
// @param $position			: ボックスの配置方法（基準位置）（初期値はstatic）
// -------------------------------------------------
// positionプロパティは、ボックスの配置方法（基準位置）が、相対位置か絶対位置かを指定する際に使用します。
// positionプロパティで指定するのは、配置方法（基準位置）のみです。
// 実際の表示位置の指定には、 top、 bottom、 left、 rightを併用して、基準位置からの距離を設定する必要があります。
// -------------------------------------------------
// *************************************************
// ※ボックスの配置方法（基準位置）の設定値一覧
// static					: 特に配置方法を指定しません。この値のときには、top、bottom、left、rightは適用されません。（初期値）
// relative					: 相対位置への配置となります。positionプロパティでstaticを指定した場合に表示される位置が基準位置となります。
// absolute					: 絶対位置への配置となります。親ボックスにpositionプロパティのstatic以外の値が指定されている場合には、親ボックスの左上が基準位置となります。親ボックスにpositionプロパティのstatic以外の値が指定されていない場合には、ウィンドウ全体の左上が基準位置となります。
// fixed					: 絶対位置への配置となるのはabsoluteと同じですが、スクロールしても位置が固定されたままとなります。
// *************************************************
// =================================================
@mixin position($position: static) {
	position: #{$position};
}

// =================================================
// 3D変形の奥行きの深さを指定する（親要素に指定）
// @param $dept				: 奥行きの深さ（初期値はnone）
// -------------------------------------------------
// perspectiveプロパティは、要素にtransform効果を適用するときの奥行きの深さを指定する際に使用します。
// 奥行きの深さは数値で指定します。初期値は none です。
// perspectiveプロパティの値に none 、または、0以下のを指定した場合には、変形の際に奥行きが適用されません。
// perspectiveプロパティによる指定は、 基本的には、transform:perspective(数値) を指定した場合と同じ変形効果となりますが、
// perspectiveプロパティを指定した要素自身ではなく、その子要素で位置や変形を指定されたものにだけ適用される点が異なります。
// -------------------------------------------------
// *************************************************
// ※奥行きの深さの設定値一覧
// none						: 変形の際の奥行きを指定しない。（初期値）
// 数値で指定				: 奥行きの深さを数値で指定
// *************************************************
// =================================================
@mixin perspective($dept: none) {
	@include grantPrefix(perspective
						 , #{$dept}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  Q  **********************************************//

// =================================================
// 引用符を設定する
// @param $quotes			: 設定値一覧（引用の先頭符 引用の末尾符）（初期値はnone） ※ペアで複数指定可能
// -------------------------------------------------
// quotesプロパティは、 contentプロパティで挿入する引用符を設定する際に使用します。
// 引用符のペアを複数設定することで、入れ子の階層に応じた引用符を設定することができます。
// 例: q {quotes: "「" "」" "『" "』"; }
//	 q:before {content: open-quote; }
//	 q::after {content: close-quote; }
//	 教科書には<q>ウイリアム・クラーク博士が<q>少年よ大志を抱け</q>と言った</q>と書いてある。
//	 ⇒ 教科書には「ウイリアム・クラーク博士が『少年よ大志を抱け』と言った」と書いてある。
// -------------------------------------------------
// *************************************************
// ※奥行きの深さの設定値一覧
// 引用符を指定				: 引用の先頭につける開始引用符と、引用の末尾につける終了引用符の二つをペアにして、スペースで区切って指定します。
//							  さらにスペースで区切って引用符のペアを指定することで、入れ子の階層の深い引用符を設定することができます。
// 数値で指定				: contentプロパティで引用符の挿入を指定しても、引用符を表示しません。（初期値）
// *************************************************
// =================================================
@mixin quotes($quotes: none) {
	quotes: #{$quotes};
}

// ********************************************  R  **********************************************//

// =================================================
// 右からの配置位置（距離）を指定する
// @param $position			: 右からの配置位置（距離）（初期値はauto）
// -------------------------------------------------
// rightプロパティは、ボックスを配置する場合の、右からの配置位置（距離）を指定する際に使用します。
// 右からの配置位置（距離）とは、基準位置の右端から配置するボックスの右端までの距離を指します。
// rightプロパティで指定するのは基準位置からの距離のみです。
// 実際の表示位置の指定には、positionプロパティを併用して、 配置方法（基準位置）を設定する必要があります。
// 尚、rightプロパティの値は、 positionプロパティの値がstatic以外のときに有効となります。
// -------------------------------------------------
// *************************************************
// ※配置位置（距離）の設定値一覧
// auto						: 自動的に調整されます。（初期値）
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: 基準となる親ボックスの幅・高さに対する割合を％値で指定します。
// *************************************************
// =================================================
@mixin right($position: auto) {
	right: #{$position};
}

// =================================================
// ルビの揃え位置を指定する
// @param $position			: ルビの行揃え位置（初期値はauto）
// -------------------------------------------------
// ruby-alignプロパティは、ルビの揃え位置を指定する際に使用します。
// 指定できる値は、auto、start、left、center、end、right、distribute-letter、distribute-space、line-edgeのいずれかです。
// -------------------------------------------------
// *************************************************
// ※ルビの行揃え位置の設定値一覧
// auto						: ユーザーエージェントに依存（ユーザーエージェントには、distribute-space、または、centerでの表示が推奨されている）（初期値）
// start					: 本体テキストの始端に、ルビテキストを揃える
// left						: 本体テキストの左端に、ルビテキストを揃える（startと同じ）
// center					: ルビテキストは本体テキストの幅の中央に配置される。もし、本体テキストがルビテキストより短い場合には、本体テキストがルビテキストの幅の中央に配置される
// end						: 本体テキストの終端に、ルビテキストを揃える
// right					: 本体テキストの右端に、ルビテキストを揃える（endと同じ）
// distribute-letter		: ルビテキストが本体テキストよりも短い場合、ルビテキストの文字が本体テキストの幅に対して均等割付される。
//							  ルビテキストが本体テキストよりも長い場合、本体テキストの文字がルビテキストの幅に対して均等割付される。
//							  この際、ルビテキストと本体テキストの両端は揃えられる
// distribute-space			: ルビテキストが本体テキストよりも短い場合、 ルビテキストは本体テキストの幅に対して均等割付される。
//							  この際、ルビテキストの前後には、いくらかのスペースが空けられる。
//							  ルビテキストが本体テキストよりも長い場合、 本体テキストがルビテキストの幅に対して均等割付される。
//							  この際、本体テキストの前後にいくらかのスペースが空けられる
// line-edge				: ルビテキストが行端に隣接していない場合はautoと同じ。
//							  ルビテキストが行端に隣接している場合もautoとほぼ同じだが、 行端に隣接している側のルビテキストの端が本体テキストの端に揃えられる。
//							  この動作はルビテキストが本体よりも長い場合のみ有効となる。 ルビテキストが短ければautoと同じになる
// *************************************************
// =================================================
@mixin ruby-align($position: auto) {
	ruby-align: #{$position};
}

// =================================================
// 本体に隣接するテキストへのルビのかかり方を指定する
// @param $overhang			: 隣接するテキストへのルビのかかり方（初期値はnone）
// -------------------------------------------------
// ruby-overhangプロパティは、ルビテキストが本体テキストよりも幅が広い場合に、 本体に隣接するテキストへのルビのかかり方を指定する際に使用します。
// 指定できる値は、auto、start、end、noneのいずれかです。 指定される値によって、ルビテキストが自身の本体テキストに加えて、
// 隣接するテキストに部分的にかかるのを許可するかどうか、 また、どちら側にかかるかを決定します。
// 尚、ルビテキストは、別のルビの本体テキストにかかることはありません。 また、ルビテキストが隣接するテキストにかかる最大量はユーザーエージェントに依存します。
// -------------------------------------------------
// *************************************************
// ※隣接するテキストへのルビのかかり方の設定値一覧
// none						: ルビテキストは、本体テキストにのみかかり、本体に隣接するテキストにかかることはできない（初期値）
// auto						: ルビテキストは、本体テキストに隣接するテキストの両側にかかることができる（※メモ：W3Cの仕様にはautoを初期値とする一文があるが、表記ミス？）
// start					: ルビテキストは、それを先行するテキストにかかることができる。 つまり、横書きで左から右へ表示されるレイアウトでは、
//							  左側のテキストにルビがかかることができる。 また、漢字などの表意文字による縦書きレイアウトでは、上側のテキストにルビがかかることができる
// end						: ルビテキストはその後に続くテキストにかかることができる。 つまり、横書きで左から右へ表示されるレイアウトでは、右側のテキストにルビがかかることができる。
//							  また、漢字などの表意文字による縦書きレイアウトでは、下側のテキストにルビがかかることができる
// *************************************************
// =================================================
@mixin ruby-overhang($overhang: none) {
	ruby-overhang: #{$overhang};
}

// =================================================
// ルビの配置位置を指定する
// @param $position			: ルビの表示位置（初期値はbefore）
// -------------------------------------------------
// ruby-positionプロパティは、ルビの配置位置を指定する際に使用します。
// 指定できる値は、before、after、rightのいずれかです。
// ruby-position:beforeを指定すると、ルビテキストはベースの前に表示されます。
// これは日本語など、東アジアの表意文字の記述方法では最も一般的な設定です。
// ルビをふられる本体が縦書きレイアウトモードで表示された場合、 ルビは本体の右側に表示されて本体と同じ縦書きレイアウトモードで描画されます。
// 台湾・香港・マカオなどで使用される繁体字中国語にルビをふる場合には、特殊なケースとなるので注意が必要です。
// この場合のルビはボポモフォ（注音符号）になりますが、ルビを縦書きレイアウトにして本体の右側に表示させると分かりやすくなるでしょう。
// ルビは縦書きですが、ルビをふる本体のレイアウトは横書きなので、本体自体は水平行で表示されます。 以下の例では、ルビ部分を分かりやすくするために青くしています。
// それぞれ個別の文字の横にルビを振るには、それぞれ個別のルビに ruby.bopomofo {writing-mode:tb-rl} といった指定をして、縦書き表意レイアウトにする必要があります。
// ruby-position::afterを指定すると、ルビテキストは本体の後に表示されます。
// これは日本語など、東アジアの表意文字の記述方法では比較的稀な設定ですが、教育用テキストなどで使用されることがあります。
// ルビをふられる本体が縦書きレイアウトモードで表示された場合、 ルビは本体の左側に表示されて本体と同じ縦書きレイアウトモードで描画されます。
// ruby-position:rightを指定すると、ルビテキストはベースの右側に表示されます。
// rightの場合には beforeやafterの場合とは異なり、テキストの記述方向には関連しません。
// -------------------------------------------------
// *************************************************
// ※ルビの表示位置の設定値一覧
// before					: 本体の前にルビテキストを表示（横書きの場合は本体の上、縦書きの場合は本体の右）（初期値）
// after					: 本体の後にルビテキストを表示（横書きの場合は本体の下、縦書きの場合は本体の左）
// right					: 本体の右側にルビテキストを表示（横書き、縦書きを問わない）
// *************************************************
// =================================================
@mixin ruby-position($position: before) {
	ruby-position: #{$position};
}

// =================================================
// ルビ注釈がどこまでまたがるかを制御する
// @param $span				: ルビ注釈の跨る要素数（初期値はnone）
// -------------------------------------------------
// ruby-spanプロパティは、ルビ注釈がどこまでまたがるかを制御する際に使用します。
// ※XHTMLのユーザエージェントでは、同じ効果を得るためにrbspan属性も使うかもしれません。
// -------------------------------------------------
// *************************************************
// ※ルビ注釈の跨る要素数の設定値一覧
// none						: ルビ注釈はルビ本体要素にまたがらない。算出される数値は1となる（初期値）
// attr(x)					: 属性値'x'を文字列で指定する。 文字列の値は、ルビ注釈の要素がまたがるルビ本体の要素数を決定する数値として評価される。
//							  もし数値が0の場合、1に置き換えられる
// *************************************************
// =================================================
@mixin ruby-span($span: none) {
	ruby-span: #{$span};
}

// =================================================
// ユーザーが要素のサイズを変更できるかどうかを指定する
// @param $property			: リサイズの設定（初期値はnone）
// -------------------------------------------------
// resizeプロパティは、ユーザーが要素のサイズを変更できるかどうかを指定する際に使用します。
// ユーザーによる要素のリサイズを許可する場合、 リサイズを許可する要素にはresizeプロパティと同時に overflowプロパティのvisible以外の値を指定する必要があります。
// -------------------------------------------------
// *************************************************
// ※リサイズの設定の設定値一覧
// none						: ユーザーに要素のリサイズ機能を提供しない（初期値）
// both						: ユーザーに要素の幅と高さのリサイズ機能を提供する
// horizontal				: ユーザーに要素の幅のリサイズ機能を提供する
// vertical					: ユーザーに要素の高さのリサイズ機能を提供する
// inherit					: 親要素の値を継承する
// *************************************************
// =================================================
@mixin resize($property: none) {
	resize: #{$property};
}

// ********************************************  S  **********************************************//

// =================================================
// スクロールバーの左端と上端の色を指定する（IE独自の仕様）
// @param $color			: スクロールバーの縁取りの左端と上端の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-3dlight-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーの縁取りの左端と上端の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーの縁取りの左端と上端の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-3dlight-color($color: transparent) {
	scrollbar-3dlight-color: #{$color};
}

// =================================================
// スクロールバーの矢印の色を指定する（IE独自の仕様）
// @param $color			: スクロールバーの矢印の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-arrow-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーの矢印の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーの矢印の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-arrow-color($color: transparent) {
	scrollbar-arrow-color: #{$color};
}

// =================================================
// スクロールバーのベース色を指定する（IE独自の仕様）
// @param $color			: スクロールバーのベースの色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-base-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーのベースの色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーのベース色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-base-color($color: transparent) {
	scrollbar-base-color: #{$color};
}

// =================================================
// スクロールバーの右端と下端の色を指定する（IE独自の仕様）
// @param $color			: スクロールバーの縁取りの右端と下端の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-darkshadow-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーの縁取りの右端と下端の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーの縁取りの右端と下端の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-darkshadow-color($color: transparent) {
	scrollbar-darkshadow-color: #{$color};
}

// =================================================
// スクロールバーの表面の色を指定する（IE独自の仕様）
// @param $color			: スクロールバーの表面の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-face-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーの表面の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーの表面の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-face-color($color: transparent) {
	scrollbar-face-color: #{$color};
}

// =================================================
// スクロールバーのハイライトの色を指定する（IE独自の仕様）
// @param $color			: スクロールバーのハイライト部分の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-highlight-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーのハイライト部分の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーのハイライト部分の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-highlight-color($color: transparent) {
	scrollbar-highlight-color: #{$color};
}

// =================================================
// スクロールバーの影の色を指定する（IE独自の仕様）
// @param $color			: クロールバーの影の部分の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-shadow-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーの影の部分の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※クロールバーの影の部分の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-shadow-color($color: transparent) {
	scrollbar-shadow-color: #{$color};
}

// =================================================
// スクロールバーの下地の色を指定する（IE独自の仕様）
// @param $color			: スクロールバーの下地（路線）の部分の色（初期値はtransparent）
// -------------------------------------------------
// scrollbar-track-colorプロパティは、Internet Explorerが独自に追加したプロパティで、 スクロールバーの下地（路線）の部分の色を指定します。
// スクロールバーの色指定は、 IE5.5では<BODY>タグへの指定で有効となりますが、 IE6以降では<!DOCTYPE>宣言でブラウザの表示モードが「標準モード」となった場合、
// <BODY>タグのみへの指定では無効となることがあります。 IE5.5とIE6以降の両方でスクロールバーの色指定を有効にするには、 <HTML>と <BODY>の両方に指定します。
// また、Operaでは、ブラウザの表示モードが「互換モード」のときに <BODY>に指定すると有効となります。
// 尚、Netscape Navigator等のスクロールバーの色指定に対応していないブラウザでは無視されるので注意してください。
// -------------------------------------------------
// *************************************************
// ※スクロールバーの下地（路線）の部分の色の設定値一覧
// 色で指定					: #000000などの記述やカラーネームで色指定をします。
// *************************************************
// =================================================
@mixin scrollbar-track-color($color: transparent) {
	scrollbar-track-color: #{$color};
}

// =================================================
// フォントフェースのリソースを設定します
// @param $resources 			: リソース
// -------------------------------------------------
// -------------------------------------------------
// *************************************************
// ※リソースの設定値一覧
// url 						: リソース箇所を「,(カンマ)」区切りで指定します。
// *************************************************
// =================================================
@mixin src($resources...) {
	$src: "";
	@each $resource in $resources {
		@if $src != "" {
			$src: $src + ", ";
		}
		$src: $src + $resource;
	}
	src: #{$src};
}

// ********************************************  T  **********************************************//

// =================================================
// テーブル（表）の表示方法を指定する
// @param $layout			: テーブル（表）の列幅のレイアウト（初期値はauto）
// -------------------------------------------------
// table-layoutプロパティは、テーブル（表）の表示方法を指定する際に使用します。
// 指定できるのは、テーブル（表）の列幅を自動レイアウトにするか（auto）、固定レイアウトにするか（fixed）についてです。
// いずれの場合も行の高さは自動的に算出されます。
// 初期値のtable-layout:auto; では、ブラウザはテーブル（表）全体を読み込んでから、セル内容に合わせて各列の幅を決定して表示を開始しますが、
// table-layout:fixed; を指定すると、最初の一行目を読み込んだ時点で各列の幅を固定して表示を開始するため、 表示が速くなるメリットがあります。
// table-layoutプロパティに「fixed」を指定する場合には、必要に応じて各列（セル）の幅を指定しますが、幅が指定されていない列には残りの幅が均等に割り当てられます。
// -------------------------------------------------
// *************************************************
// ※テーブル（表）の列幅のレイアウトの設定値一覧
// auto						: テーブル（表）の列幅を自動レイアウトにする（初期値）
// fixed					: テーブル（表）の列幅を固定レイアウトにする
// *************************************************
// =================================================
@mixin table-layout($layout: auto) {
	table-layout: #{$layout};
}

// =================================================
// 行揃えの位置・均等割付を指定する
// @param $align			: 行揃えの位置（初期値はauto）
// -------------------------------------------------
// text-alignプロパティは、行揃えの位置や、均等割付を指定する際に使用します。
// 均等割付については、text-alignプロパティの値にjustifyを指定した上で、 text-justifyプロパティで均等割付の形式を指定しないと実際に均等割付にならないようです。
// text-justifyプロパティは、W3Cで審議中の仕様をInternet Explorerが独自に採用したもので、Internet Explorerの5.0以降にしか対応していないので注意してください。
// -------------------------------------------------
// *************************************************
// ※行揃えの位置の設定値一覧
// left						: 左寄せにします。（初期値）
// right					: 右寄せにします。
// center					: 中央揃えにします。
// justify					: 均等割付にします。
// *************************************************
// =================================================
@mixin text-align($align: left) {
	text-align: #{$align};
	@include grantPrefixValue(text-align
							  , #{$align}
							  , -moz, -webkit, -o, -khtml, -ms, false
							  );
}

// =================================================
// アルファベット等との間隔を指定する（Internet Explorerが独自に採用）
// @param $space			: 非表意文字・数字との間隔（初期値はnone）
// -------------------------------------------------
// text-autospaceプロパティは、W3Cで審議中の仕様をInternet Explorerが独自に採用したもので、
// 日本語・中国語・韓国語などの表意文字と、アルファベットなどの非表意文字・数字との間隔を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※非表意文字・数字との間隔の設定値一覧
// none						: 特に間隔を空けません。（初期値）
// ideograph-alpha			: 日本語・中国語・韓国語などの表意文字と、アルファベットなどの非表意文字との境い目に間隔を空けます。
// ideograph-numeric		: 日本語・中国語・韓国語などの表意文字と、数字との境い目に間隔を空けます。
// ideograph-parenthesis	: 日本語・中国語・韓国語などの表意文字と、半角の(括弧)との境い目に間隔を空けます。
// ideograph-space			: 日本語・中国語・韓国語などの表意文字に隣接するスペース文字の幅を拡げます。
// *************************************************
// =================================================
@mixin text-autospace($space: none) {
	text-autospace: #{$space};
}

// =================================================
// テキストの下線・上線・打ち消し線・点滅を指定する
// @param $decoration		: テキストのオプション（初期値はnone）
// -------------------------------------------------
// text-decorationプロパティは、テキストに下線・上線・打ち消し線を付けたり、点滅させる際に使用します。
// 同時に複数の値を指定する場合には、値を任意の順序でスペースで区切って記述してください。
// 尚、テキストを点滅させる blink は、FirefoxやOperaなどの過去のバージョンではサポートされていましたが、
// 現在主要なブラウザでサポートを外されており動作しないようです。blink の使用は避けた方が良いでしょう。
// -------------------------------------------------
// *************************************************
// ※テキストのオプションの設定値一覧
// none						: テキストに線は付かず、点滅もしません。（初期値）
// underline				: テキストに下線が付きます。
// overline					: テキストに上線が付きます。
// line-through				: テキストに打ち消し線が付きます。
// blink					: テキストが点滅します。
// *************************************************
// =================================================
@mixin text-decoration($decoration: none) {
	text-decoration: #{$decoration};
}

// =================================================
// 一行目のインデント幅を指定する
// @param $indent			: インデント幅（初期値は1em）
// -------------------------------------------------
// text-indentプロパティは、文章の段落などの一行目のインデント幅を指定する際に使用します。インデントには負の値を指定することもできます。
// -------------------------------------------------
// *************************************************
// ※インデント幅の設定値一覧
// 数値で指定				: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
//							  また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// パーセントで表示			: ％値で指定します。
// *************************************************
// =================================================
@mixin text-indent($indent: 1em) {
	text-indent: #{$indent};
}

// =================================================
// 行端揃えの形式を選択する
// @param $type				: 行端揃えの形式（初期値はauto）
// -------------------------------------------------
// text-justifyプロパティは、text-alignプロパティの値にjustifyを指定した際の、行端揃えの形式を選択する際に使用します。
// -------------------------------------------------
// *************************************************
// ※行端揃えの形式の設定値一覧
// auto						: ユーザーエージェントは、パフォーマンスとプレゼンテーション品質のバランスをとって行端揃えのアルゴリズムを決定する（初期値）
// inter-word				: 主に単語区切りスペースの間隔を変更して行端揃えをする
// inter-ideograph			: 主に単語の区切りスペース、および、単語区切りスペースが無い文では 書記素（言語を記述する際の文字・数字・記号などの基本単位）の境界の間隔を変更して行端揃えをする
// inter-cluster			: 主に単語の区切りスペース、および、 タイ語・ラオ語・クメール語・ミャンマー語などのクラスタスクリプトにおける書記クラスタ（単語間にスペースは無いが個別単位を形成する部分）の境界の間隔を変更して行端揃えをする
// distribute				: 主に単語の区切りスペースと、 デーヴァナーガリー・ベンガル文字・グルムキー文字・アラビア文字などでの記述を除くすべてのスクリプトにおける 書記クラスタの境界、その両方の間隔を変更して行端揃えをする
// kashida					: 主にカシダや他の筆記体を引き伸ばしたものを使用することで、アラビア語などのスクリプトを引き伸ばして行端揃えをする
// tivetan					: （メモ：この値は次回の草案では削除される可能性が高いそうです）
// *************************************************
// =================================================
@mixin text-justify($property: auto) {
	text-justify: #{$property};
}

// =================================================
// テキストに影をつける
// @param $values			: 設定値一覧（X軸距離 Y軸距離 半径 影の色）（初期値はnone）
// -------------------------------------------------
// text-shadowプロパティは、テキストに影をつける際に使用します。
// text-shadowプロパティでは、スペース区切りで<水平方向の距離> <垂直方向の距離> <影のぼかし半径> <影の色>を指定することができます。長さの値には、pxやemやexなどの単位が利用できます。
// ・1番目の長さの値は、水平方向の影のオフセット距離を表します。正の値を指定すると右へ、負の値を指定すると左へ影が移動します。
// ・2番目の長さの値は、垂直方向の影のオフセット距離を表します。正の値を指定すると下へ、負の値を指定すると上へ影が移動します。
// ・3番目の長さの値は省略可能ですが、指定した場合には影のぼかし半径を表します。ぼかし半径が指定されない場合はゼロとなります。
// 尚、ぼかし半径とは、ぼかし効果の境界までの距離のことですが、ぼかし効果を計算する厳密なアルゴリズムは定義されていません。
// 色の値は省略可能ですが、指定した場合には影の色を表します。長さの値の前か後に任意で指定します。色の値が指定されない場合には、ブラウザが選択した色が使用されます。
// 上記の値のセットをカンマ（ , ）で区切って、複数の影を指定することもできます。
// 影は、他のテキスト装飾が適用されるのと同じように、要素のすべてのテキストに適用されます。
// 指定の仕方によっては影同士が重なり合うかもしれませんが、テキスト自身の上に覆われることはありません。
// また、ボックスからはみだして影が表示されることがありますが、ボックスのサイズ自体が変わることはありません。
// ボックスに影をつける場合には、box-shadowプロパティを使用します。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// none						: テキストに影を付けない（初期値）
// 数値 + 単位				: 影をずらす距離とぼかす半径を3つの長さ（水平方向距離 垂直方向距離 影のぼかし半径）で指定
// 色						: 影の色
// *************************************************
// =================================================
@mixin text-shadow($values...) {
	$value: "";
	@if length($values) == 0 {
		$value: none;
	}
	@else{
		@each $param in $values {
			@if $value != "" {
				$value: $value, $param;
			}
			@else {
				$value: $param;
			}
		}
	}
	@include grantPrefix(text-shadow
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// テキストの折り返し方法を指定する
// @param $wrap				: テキストの折り返し方法（初期値はnormal）
// -------------------------------------------------
// text-wrapプロパティは、テキストの折り返し方法を指定する際に使用します。
// text-wrapプロパティにどの値を指定しても、改行のふるまいは、強制改行（BK）・キャリッジリターン（CR）・ラインフィード（LF）などに基づいて決定されます。
// text-wrapプロパティにnormal、または、suppressを指定すると、 スペース以外の句読点での改行を許可するブラウザでは改行ポイントが最優先されます。
// スラッシュ（ / ）の後の改行がスペースよりも優先度が低い場合、例えば、"check /etc"という記述では、'/' と 'e'の間では決して改行されません。
// ブラウザはコンテナブロックの幅、テキストの言語、その他の指定条件を使用するかもしれません。
// 間の悪い改行を避けるため、ブラウザにはスペース以外の適切な句読点が改行位置として推奨されています。
// 特に狭い寸法の場合、その結果がより等しいマージンになるからです。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// normal					: 改行ルールにしたがって改行ポイントで改行される（初期値）
// none						: 改行しない。ブロックボックスに入りきらないテキストは、はみ出して表示される
// unrestricted				: 行は２つの書記素（テキストを記述する際の基本単位）の間のどの位置でも改行する。
//							  改行制限は効き目がなく、ハイフンも付かない。改行箇所では、まるで改行されていないかのように文字が整形される
// suppress					: 要素内では改行が抑制される。 他に妥当な改行ポイントが無い場合のみ、要素内で改行する
// *************************************************
// =================================================
@mixin text-wrap($wrap: normal) {
	text-wrap: #{$wrap};
}

// =================================================
// テキストがコンテンツからはみ出た場合に末尾に「...」を表示するか（初期値はclip）
// -------------------------------------------------
// text-overflow CSS プロパティは、テキストが表示領域をオーバーフローしていることを、
// ユーザに知らせる方法を決めます。クリップするか、省略記号 ('…'、U+2026、&hellip;) を表示するか、
// ウェブ著作者の定義した文字を表示させることができます。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// clip 					: 省略符号を表示しない（初期値）
// ellipsis 				: 省略符号を表示する
// *************************************************
// =================================================
@mixin text-overflow($overflow: clip) {
	text-overflow: #{$overflow};
}

// =================================================
// テキストの大文字表示・小文字表示を指定する
// @param $type				: 文字の表示形式（初期値はnone）
// -------------------------------------------------
// text-transformプロパティは、英語などのテキストの大文字表示・小文字表示を指定する際に使用します。
// 単語の先頭文字だけを大文字で表示することもできます。
// -------------------------------------------------
// *************************************************
// ※文字の表示形式の設定値一覧
// none						: 記述した通りに表示します。（初期値）
// capitalize				: 単語の先頭文字を大文字で表示します。
// lowercase				: 全てを小文字で表示します。
// uppercase				: 全てを大文字で表示します。
// *************************************************
// =================================================
@mixin text-transform($type: none) {
	text-transform: #{$type};
}

// =================================================
// 下線の表示位置を指定する（IE独自拡張）
// @param $position			: 下線の表示位置（初期値はbelow）
// -------------------------------------------------
// text-underline-positionプロパティは、Internet Explorerの独自拡張で、
// text-decorationプロパティでテキストに下線がつけられた場合の下線の表示位置を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※下線の表示位置の設定値一覧
// above					: 下線をテキストの上に表示します。
// below					: 下線をテキストの下に表示します。（初期値）
// *************************************************
// =================================================
@mixin text-underline-position($position: below) {
	text-underline-position: #{$position};
}

// =================================================
// テキストのレンダリング処理を指定する
// @param $rendering		: レンダリング処理（初期値はauto）
// -------------------------------------------------
// text-renderingプロパティを利用すると、欧文のレンダリング処理について、スピード優先(optimizeSpeed)か読みやすさ優先(optimizeLegibility)かを指定することができます。
// optimizeLegibilityで処理した場合、カーニング(文字詰め)やリガチャ(合字)が行われます。
// -------------------------------------------------
// *************************************************
// ※レンダリング処理の設定値一覧
// auto 					: ブラウザの自動判断（初期値）
// optimizeSpeed 			: スピードを優先。Firefox4ではスピードが確保できることからoptimizeLegibilityと同じ処理になります。
// optimizeLegibility 		: 読みやすさを優先。
// geometricPrecision 		: 幾何学的精密さを優先。現在のところ、optimizeLegibilityと同じ処理になります。
// inherit 					: 親コンテナの設定値を継承
// *************************************************
// =================================================
@mixin text-rendering($rendering: auto) {
	text-rendering: #{$rendering};
}

// =================================================
// 上からの配置位置（距離）を指定する
// @param $position			: 上からの配置位置（距離）（初期値はauto）
// -------------------------------------------------
// topプロパティは、ボックスを配置する場合の、上からの配置位置（距離）を指定する際に使用します。
// 上からの配置位置（距離）とは、基準位置の上l端から配置するボックスの上端までの距離を指します。
// topプロパティで指定するのは基準位置からの距離のみです。
// 実際の表示位置の指定には、positionプロパティを併用して、配置方法（基準位置）を設定する必要があります。
// 尚、topプロパティの値は、positionプロパティの値がstatic以外のときに有効となります。
// -------------------------------------------------
// *************************************************
// ※上からの配置位置の設定値一覧
// auto 					: 自動的に調整されます。（初期値）
// 数値 + 単位で指定 		: 数値にpxやemやexなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、
// 							: 実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: 基準となる親ボックスの幅・高さに対する割合を％値で指定します。
// *************************************************
// =================================================
@mixin top($position: auto) {
	top: #{$position};
}

// =================================================
// 要素に2D変形、または、3D変形を適用する
// @param $transform		: transform関数（初期値はnone）
// -------------------------------------------------
// transformプロパティは、要素に2D変形、または、3D変形を適用する際に使用します。
// transformプロパティの値に、用意されているtransform関数を指定することで、
// 要素にマトリクス変形、移動、縮尺、回転、傾斜などの変形を適用することができます。
// transform関数をホワイトスペースで区切って複数指定することで、複数のtransform効果を適用することもできます。
// この場合、最終的に要素に適用されるのは、それぞれのtransform関数の値を結合したものとなります。
// -------------------------------------------------
// *************************************************
// ※行列を使用して要素に2D変形を適用するの設定値一覧
// matrix()					: 引数一覧（水平方向の縮尺, 垂直方向の傾斜率, 水平方向の傾斜率, 垂直方向の縮尺, 水平方向の移動距離, 垂直方向の移動距離）（初期値はnone）
//							  6個の数値で2D変形を指定します。
//							  matrix(1, 0, 0, 1, 0, 0)を指定すると、座標は変化しません。
// *************************************************
// ※行列を使用して要素に3D変形を適用するの設定値一覧
// matrix3d()				: 引数一覧（a1, a2, a3, a4,
//									  b1, b2, b3, b4,
//									  c1, c2, c3, c4,
//									  d1, d2, d3, d4）（初期値はnone）
//							  16個の数値で2D変形を指定します。
//							  matrix(1, 0, 0, 0,
//									 0, 1, 0, 0,
//									 0, 0, 1, 0,
//									 0, 0, 0, 1 )で、この場合には座標は変化しません。
// *************************************************
// ※移動の設定値一覧
// translate()				: 引数一覧（X軸方向の距離, Y軸方向の距離）（初期値はnone）
// translateX()				: 引数一覧（X軸方向の距離）（初期値はnone）
// translateY()				: 引数一覧（Y軸方向の距離）（初期値はnone）
// translateZ()				: 引数一覧（Z軸方向の距離）（初期値はnone）
// translate3d()			: 引数一覧（X軸方向の距離, Y軸方向の距離, Z軸方向の距離）（初期値はnone）
// *************************************************
// ※縮尺の設定値一覧
// scale()					: 引数一覧（X軸方向の縮尺比率 Y軸方向の縮尺比率）（初期値はnone）
// scaleX()					: 引数一覧（X軸方向の縮尺比率）（初期値はnone）
// scaleY()					: 引数一覧（Y軸方向の縮尺比率）（初期値はnone）
// scaleZ()					: 引数一覧（Z軸方向の縮尺比率）（初期値はnone）
// scale3d()				: 引数一覧（X軸方向の縮尺比率, Y軸方向の縮尺比率, Z軸方向の縮尺比率）（初期値はnone）
// *************************************************
// ※回転の設定値一覧
// rotate()					: 引数一覧（回転角度[0～360の範囲で単位はdeg]）（初期値はnone）
// rotateX()				: 引数一覧（X軸方向の回転角度[0～360の範囲で単位はdeg]）（初期値はnone）
// rotateY()				: 引数一覧（Y軸方向の回転角度[0～360の範囲で単位はdeg]）（初期値はnone）
// rotateZ()				: 引数一覧（Z軸方向の回転角度[0～360の範囲で単位はdeg]）（初期値はnone）
// roteta3d()				: 引数一覧（X軸方向のベクトル, Y軸方向のベクトル, Z軸方向のベクトル, 回転角度[0～360の範囲で単位はdeg]）（初期値はnone）
// *************************************************
// ※傾斜の設定値一覧
// skew()					: 引数一覧（X軸方向の傾斜角度, Y軸方向の傾斜角度）（初期値はnone）
// skewX()					: 引数一覧（X軸方向の傾斜角度）（初期値はnone）
// skewY()					: 引数一覧（Y軸方向の傾斜角度）（初期値はnone）
// *************************************************
// =================================================
@mixin transform($transform: none) {
	@include grantPrefix(transform
						 , #{$transform}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 2D変形、または、3D変形の原点を指定する
// @param $position			: 座標（初期値は50% 50% 0）
// -------------------------------------------------
// transform-originプロパティは、要素に2D変形、または、3D変形を適用するときの変形の原点を指定する際に使用します。
// 値は1つ、または、スペースで区切って2つ指定します。値を1つだけ指定すると、2番目の値はcenterとみなされます。
// 値を2つ指定すると、両方がキーワード値である場合を除いて、最初の値は水平方向、2番目の値は垂直方向の値となります。
// 値をパーセンテージや長さで指定する場合、2D変形では変形前の要素の左上位置（0,0）から右下方向への距離（ローカル座標システム）で指定します。
// また、、3D変形では変形前の要素の左上位置（0,0,0）から右下方向への距離（ローカル座標システム）で指定します。
// 値には負のパーセンテージや負の長さを指定することもできます。
// -------------------------------------------------
// *************************************************
// ※座標の設定値一覧
// パーセンテージで指定		: 変形を適用する要素の左上位置(0%,0%)からのパーセンテージ、および、3Dの場合にはZ軸方向の長さを指定（初期値は50% 50% 0）
// 数値 + 単位で指定		: 変形を適用する要素の左上位置(0,0)からの長さを指定、3D変形では左上位置(0,0,0)からの長さを指定
// left						: X軸の0%と同じ
// center					: X軸の50%と同じ
// right					: X軸の100%と同じ
// top						: Y軸の0%と同じ
// center					: Y軸の50%と同じ
// bottom					: Y軸の100%と同じ
// *************************************************
// =================================================
@mixin transform-origin($position: 50% 50% 0) {
	@include grantPrefix(transform-origin
						 , #{$position}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 子要素がフラットに描画されるか立体的に描画されるかを指定する
// @param $property			: 設定値（初期値はflat）
// -------------------------------------------------
// transform-styleプロパティは、 このプロパティを指定した要素の子要素が、
// 3D空間の中でフラットに（平らに）描画されるか、立体的に描画されるかを指定する際に使用します。
// 指定できる値は、flat と preserve-3d のいずれかで、初期値は flat です。
// 要素に transform-style:flat; を指定すると、 その子要素は、transform-style:flat; を指定した要素の2D平面でフラットに描画されます。
// この場合、X軸やY軸で要素を回転させると、 transform-style:flat; を指定した要素の子要素は、
// 前や後ろに重なるのではなく、 transform-style:flat; を指定した要素の平面上に乗った状態で、 Z軸の正位置や負位置に現れることになります。
// 要素に transform-style:preserve-3d; を指定すると、 transform-style:flat; を指定した要素の子要素は、
// フラット化されずに3D空間の中でのそれらの位置を維持します。 transform-style:preserve-3d; を指定する場合、指定の仕方によっては、
// 3D空間の中に配置された要素が、祖先要素の背後に隠れて見えなくなるかもしれません。
// また、overflow:hidden; が指定されている要素に transform-style:preserve-3d; を指定しても、子要素を3Dに保つことはできないかもしれません。
// この場合には、transform-style:flat; を指定したのと同じ表示となります。
// -------------------------------------------------
// *************************************************
// ※設定値一覧
// flat						: 要素の2D平面上に子要素をフラットに（平らに）描画
// preserve-3d				: 3D空間の中で子要素がそれぞれの位置を維持するように描画
// *************************************************
// =================================================
@mixin transform-style($property: flat) {
	@include grantPrefix(transform-style
						 , #{$property}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// transition効果（時間的変化）をまとめて指定する
// @param $values			: 設定値一覧（CSSプロパティ名 変化に掛かる時間 進行割合 遅延時間）
// -------------------------------------------------
// transitionプロパティは、transition効果（時間的変化）をまとめて指定する際に使用します。
// transitionプロパティでは、 transition-property、 transition-duration、 transition-timing-function、 transition-delay の各プロパティの値を、まとめて指定することができます。
// このプロパティでは、値を指定する順序が重要となります。 時間として指定される最初の値はtransition-durationに割り当てられ、
// 時間として指定される二番目の値はtransition-delayに割り当てられます。
// 複数の種類のCSSプロパティに対してtransition効果を適用する場合には、値のセットをカンマ（ , ）で区切って指定します。
// -------------------------------------------------
// *************************************************
// ※CSSプロパティ名の設定値一覧
// all						: 変化を適用できるプロパティすべてが変化する（初期値）
// none						: どのプロパティも変化しない
// プロパティ名を指定		: 変化させるプロパティ名のリストをカンマ（ , ）区切りで指定
// *************************************************
// ※変化に掛かる時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// ※進行割合の設定値一覧
// cubic-vezier				: 0～1の範囲内で変化時間軸を設定
// ease						: cubic-bezier(0.25, 0.1, 0.25, 1.0) を指定したのと同じ（開始と完了を滑らかにする）（初期値）
// linear					: cubic-bezier(0.0, 0.0, 1.0, 1.0) を指定したのと同じ（一定）
// ease-in					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-out					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-in-out				: cubic-bezier(0.42, 0, 0.58, 1.0) を指定したのと同じ（ゆっくり始まってゆっくり終わる）
// *************************************************
// ※遅延時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// =================================================
@mixin transition($values...) {
	$value: "";
	@if length($values) == 0 {
		$value: all 0 ease 0;
	}
	@else {
		@each $param in $values {
			@if $value != "" {
				$value	: $value + ", " + $param;
			}
			@else {
				$value	: $param;
			}
		}
	}
	@include grantPrefix(transition
						 , #{$value}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 変化がいつ始まるかを指定する
// @param $timing			: 時間（初期値は0）
// -------------------------------------------------
// transition-delayプロパティは、変化がいつ始まるかを指定する際に使用します。
// transition-delayプロパティの値には、時間を指定しますが、その指定時間が経過した後に変化が開始されます。
// 初期値は0ですが、これは変化がすぐに開始されることを意味します。
// 値に負の時間を指定すると、変化はすぐに開始されますが、指定した時間をさかのぼって実行を開始したような表示になります。
// transition-durationプロパティ（変化に掛かる時間）との組み合わせによっては、変化再生サイクルの途中から変化が開始されるでしょう。
// -------------------------------------------------
// *************************************************
// ※変化に掛かる時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// =================================================
@mixin transition-delay($timing: 0) {
	@include grantPrefix(transition-delay
						 , #{$timing}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// 変化に掛かる時間を指定する
// @param $duration			: 変化に掛かる時間（初期値は0）
// -------------------------------------------------
// transition-durationプロパティは、変化に掛かる時間を指定する際に使用します。
// transition-durationプロパティの値には時間を指定して、
// 変化を適用するプロパティの値が古い値から新しい値に変化するのにどのくらいの時間が掛かるかを定義します。
// 初期値は0ですが、これは変化がすぐに起きるという意味でアニメーションにはなりません。
// transition-durationプロパティに負の値を指定すると、0として扱われます。
// -------------------------------------------------
// *************************************************
// ※変化に掛かる時間の設定値一覧
// 時間で指定				: 時間を指定する（例：5秒なら5s）（初期値は0）
// *************************************************
// =================================================
@mixin transition-duration($duration: $default-transition-duration) {
	@include grantPrefix(transition-duration
						 , #{$duration}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// =================================================
// transition効果を適用するCSSプロパティ名を指定する
// @param $name				: CSSプロパティ名（初期値は設定ファイルの設定値）
// -------------------------------------------------
// transition-propertyプロパティは、transition（時間的変化）効果を適用するCSSプロパティ名を指定する際に使用します。
// 複数のCSSプロパティに変化を適用する場合には、変化させるプロパティのリストをカンマ区切りで指定します。
// 値にnoneを指定すると、どのプロパティも変化しません。 また、allを指定すると、変化を適用できるプロパティすべてが変化します。
// -------------------------------------------------
// *************************************************
// ※CSSプロパティ名の設定値一覧
// all						: 変化を適用できるプロパティすべてが変化する
// none						: どのプロパティも変化しない
// プロパティ名を指定		: 変化させるプロパティ名のリストをカンマ（ , ）区切りで指定
// *************************************************
// =================================================
@mixin transition-property($properties: $default-transition-property) {
	@if $properties == transform {
		@include grantPrefixPropValue(transition-property
									  , #{$properties}
									  , -moz, -webkit, -o, -khtml, -ms, official
									 );
	}
	@else {
		@include grantPrefix(transition-property
							 , #{$properties}
							 , -moz, -webkit, -o, -khtml, -ms, official
							);
	}
}

// =================================================
// 変化のタイミング・進行割合を指定する
// @param $timing			: 進行割合（初期値は設定ファイルの設定値）
// -------------------------------------------------
// transition-timing-functionプロパティは、変化のタイミング・進行割合を指定する際に使用します。
// 変化が継続している際に、その変化速度の割合を変更して調整することで動きを滑らかにすることができます。
// これは一般的にイージング機能と呼ばれるもので、 グラフィックソフトで曲線を描く際などに利用されるベジェ曲線と呼ばれる数学的な関数を使います。
// transition-timing-functionプロパティでは、変化の進行割合を3次ベジェ曲線で指定します。
// 3次ベジェ曲線は、以下の図のような4つのコントロールポイント（P0、P1、P2、P3）で定義されます。
// P0が変化の開始ポイント、P3が変化の完了ポイントで、 横軸が変化継続時間がどこまで経過したのか、縦軸が変化がどの程度実行されたのかを表します。
// 仮にP0→P3までが直線なら、変化は一定の割合で進行することになります。
// P0（開始ポイント）とP3（完了ポイント）は固定なので、 transition-timing-functionプロパティでは、P1とP2の値を指定することで変化の進行割合を調整します。
// -------------------------------------------------
// *************************************************
// ※進行割合の設定値一覧
// cubic-vezier				: 0～1の範囲内で変化時間軸を設定
// ease						: cubic-bezier(0.25, 0.1, 0.25, 1.0) を指定したのと同じ（開始と完了を滑らかにする）（初期値）
// linear					: cubic-bezier(0.0, 0.0, 1.0, 1.0) を指定したのと同じ（一定）
// ease-in					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-out					: cubic-bezier(0.42, 0, 1.0, 1.0) を指定したのと同じ（ゆっくり始まる）
// ease-in-out				: cubic-bezier(0.42, 0, 0.58, 1.0) を指定したのと同じ（ゆっくり始まってゆっくり終わる）
// *************************************************
// =================================================
@mixin transition-timing-function($timing: $default-transition-function) {
	@include grantPrefix(transition-timing-function
						 , #{$timing}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  U  **********************************************//

// =================================================
// Unicodeの文字表記の方向を上書きする
// @param $direction		: 文字表記の方向（初期値はnormal）
// -------------------------------------------------
// unicode-bidiプロパティは、Unicodeの文字表記の方向を上書きする際に使用します。
// Unicode（ユニコード）とは、言語に関係なくすべての文字に独立した番号を与え、 文字コードの切り替えなしに、
// 世界中の文字を統一された文字コードで表現しようとする規格です。
// Unicodeでは英語や日本語は左から右へ、アラビア語やヘブライ語は右から左へというように、
// 言語により文字表記の方向が規定されていますが、 unicode-bidiプロパティは、この設定に新たに文字方向に関する指定を組み込んだり、
// 設定を無効にする上書きを行います。 上書きする文字表記の方向は、directionプロパティで値を指定します。
// -------------------------------------------------
// *************************************************
// ※文字表記の方向の設定値一覧
// normal					: Unicodeによる文字表記の方向設定がそのまま適用されます。（初期値）
// embed					: Unicodeによる文字表記の方向設定の中に、新たにdirectionプロパティで指定された値が組み込まれます。
// bidi-override			: Unicodeによる文字表記の方向設定を無効にします。この場合、文字表記の方向はdirectionプロパティで指定された値が適用されます。
// *************************************************
// =================================================
@mixin unicode-bidi($direction: normal) {
	unicode-bidi: #{$direction};
}

// =================================================
// テキストが選択不可にするために使用することができます。
// @param $property			: テキストの設定（初期値はtext）
// -------------------------------------------------
// コピー＆ペーストを提供したくない場合に有効です。
// このプロパティ（非標準）のための仕様ではありませんので、すべてのブラウザで動作するかは注意が必要です。
// -------------------------------------------------
// *************************************************
// ※文字表記の方向の設定値一覧
// none						: 要素及びサブ要素のテキストが選択されることができません。選択は、これらの要素を含むことができます。
// auto						: テキストは、ブラウザのデフォルトの特性に応じて選択されます。
// text						: テキストは、ユーザによって選択することができます。（初期値）
// -moz-none				: 選択することができないかのように要素とサブ要素のテキストが表示されます。選択は、これらの要素を含めることができます。
// all						: ダブルクリックするか、コンテキスト・クリックはサブ要素で発生した場合、HTMLエディタでは、この値を持つ最高の祖先が選択されます。
// contain					: 要素内に開始するように選択を可能にします。ただし、選択は、その要素の境界に含まれます。Internet Explorerでのみサポートされています。
// *************************************************
// =================================================
@mixin user-select($property: text) {
	@include grantPrefix(user-select
						 , #{$property}
						 , -moz, -webkit, -o, -khtml, -ms, official
						);
}

// ********************************************  V  **********************************************//

// =================================================
// 縦方向の揃え位置を指定する
// @param $position			: 文字の揃え位置（初期値はbaseline）
// -------------------------------------------------
// vertical-alignプロパティは、行のなかでのテキストや画像などの縦方向の揃え位置を指定する際に使用します。
// vertical-alignプロパティを適用できるのは、インライン要素とテーブルセルです。ブロックレベル要素には適用できません。
// -------------------------------------------------
// *************************************************
// ※文字の揃え位置の設定値一覧
// baseline					: 適用した要素のベースラインを親要素のベースラインに揃える（初期値）
// top						: 上端揃え
// middle					: 中央揃え
// bottom					: 下端揃え
// text-top					: テキストの上端揃え（テーブルセルへの指定は無効）
// text-bottom				: テキストの下端揃え（テーブルセルへの指定は無効）
// super					: 上付き文字（テーブルセルへの指定は無効）
// sub						: 下付き文字（テーブルセルへの指定は無効）
// パーセントで指定			: その要素のline-heightプロパティの値に対する割合を%で指定（ベースラインが揃った状態を0として、正の値なら上、負の値なら下へ移動）
// 数値 + 単位で指定		: 数値にemやexやpxなどの単位をつけて指定（ベースラインが揃った状態を0として、正の値なら上、負の値なら下へ移動）
// *************************************************
// =================================================
@mixin vertical-align($position: baseline) {
	vertical-align: #{$position};
}

// =================================================
// ボックスの表示・非表示を指定する
// @param $property			: ボックスの表示（初期値はvisible）
// -------------------------------------------------
// visibilityプロパティは、ボックスの表示（visible）・非表示（hidden）を指定する際に使用します。
// 非表示にした場合にも、ボックス自体が無くなってしまうわけではなく、表示・非表示を切り替えてもページのレイアウトは変わりません。
// ボックス自体を無くしてしまいたい場合には、displayプロパティでnoneを指定します。
// テーブル（表）の行や列にvisibility:collapseを指定した場合の表示は、ブラウザの種類やバージョンによって若干異なるので注意してください。
// -------------------------------------------------
// *************************************************
// ※ボックスの表示の設定値一覧
// visible					: ボックスを表示します。
// hidden					: ボックスを非表示にします。
// collapse					: テーブル（表）の行や列にこの値を指定すると、その部分を詰めて表示します。
// *************************************************
// =================================================
@mixin visibility($property: visible) {
	visibility: #{$property};
}

// ********************************************  W  **********************************************//

// =================================================
// ソース中のスペース・タブ・改行の表示の仕方を指定する
// @param $property			: 表示方法（初期値はnormal）
// -------------------------------------------------
// white-spaceプロパティは、ソース中の半角スペース・タブ・改行の表示の仕方を指定する際に使用します。
// -------------------------------------------------
// *************************************************
// ※表示方法の設定値一覧
// normal					: ソース中の連続する半角スペース・タブ・改行を、1つの半角スペースとして表示します。ボックスの大きさが指定されている場合には、その大きさに応じて自動的に改行されます。
// pre						: ソース中の連続する半角スペース・タブ・改行を、そのまま表示します。
// nowrap					: ソース中の連続する半角スペース・タブ・改行を、1つの半角スペースとして表示します。ボックスの大きさが指定されている場合にも、自動的に改行されません。
// *************************************************
// =================================================
@mixin white-space($property: normal) {
	white-space: #{$property};
}

// =================================================
// 改ページされる際の次ページの最低行数を指定する
// @param $minLine			: 最低行数（初期値は2）
// -------------------------------------------------
// widowsプロパティは、改ページされる際の次ページの最低行数を指定する際に使用します。
// 印刷が複数ページにまたがって要素の途中で改ページされる際に、次ページに最低限あって欲しい行数を指定します。
// ちなみに、widows（ウィドー）とは、直訳すると未亡人という意味で、 印刷用語では「前ページから続く段落の終わりとなるページ最上部に残された孤立行」を指します。
// また、よく似たプロパティにorphans（オーファン）がありますが、これは直訳すると孤児という意味で、
// 印刷用語では「次ページへと続く段落の始まりとなるページ末尾に残された孤立行」を指します。
// -------------------------------------------------
// *************************************************
// ※最低行数の設定値一覧
// 数値で指定				: 改ページされる際、次ページに最低限あって欲しい行数を整数値で指定（初期値は2）
// *************************************************
// =================================================
@mixin windows($minLine: 2) {
	windows: #{$minLine};
}

// =================================================
// 幅を指定する
// @param $width			: 領域の幅（初期値はauto）
// -------------------------------------------------
// widthプロパティは、 <TABLE>・ <TD>・ <IMG>・ <INPUT>・ <TEXTAREA>・ <SELECT>などの領域の幅を指定する際に使用します。
// 指定方法には、実数値にpxなどの単位をつけて指定する方法と、親ボックスに対する割合を％で指定する方法と、
// 状況に応じて大きさが設定されるautoを指定する方法があります。widthプロパティに負の値は指定できません。
// -------------------------------------------------
// *************************************************
// ※領域の幅の設定値一覧
// auto						: 状況に応じて自動設定します。（初期値）
// 数値 + 単位で指定		: 数値にpxなどの単位をつけて指定します。pxとは1ピクセルを1とする単位で、実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
// パーセントで指定			: ％値で指定します。
// *************************************************
// =================================================
@mixin width($width: auto) {
	width: #{$width};
}

// =================================================
// 行の改行方法を指定する
// @param $property			: 行の改行方法（初期値はnormal）
// -------------------------------------------------
// word-breakプロパティは、行の改行方法を指定する際に使用します。
// word-breakプロパティで指定できる値には、normal・keep-all・loose・break-strict・break-allがあります。
// キーワードによってCJK（ハングル、日本語のカナ、および、CJK表意文字）と非CJKにおける改行制限の厳格さの程度を指定することができます。
// ちなみに、CJKとは、中国語(Chinese)、日本語(Japanese)、韓国語(Korean)の頭文字をとったものです。
// アラビア語のような整形文が、break-all、あるいは、break-strictで単語内での改行が許可されるとき、文字はあたかも単語が改行されなかったように整形されます。
// -------------------------------------------------
// *************************************************
// ※行の改行方法の設定値一覧
// normal					: CJKは厳格に改行制限される、非CJKはそれら自身のルールに従って改行される（初期値）
// keep-all					: CJKは改行しない、非CSKはnormalと同じ（keep-allは、韓国語のようにホワイトスペースの存在が改行のきっかけとなる場合にのみ使用するべき値）
// loose					: CJKはより緩やかな改行制限となる、非CSKはnormalと同様
// break-strict				: CJKはnormalと同様、非CJKはどこでも改行できる（break-strictは、CJK文字が中心で非CJKの抜粋をわずかに含むようなテキストを、それぞれの行に均等に分布させたいときに使用されることがほとんど）
// break-all				: CJKはlooseと同様、非CJKはbreak-strictと同様
// *************************************************
// =================================================
@mixin word-break($property: normal) {
	word-break: #{$property};
}

// =================================================
// 単語の間隔を指定する
// @param $property			: 単語の間隔（初期値はnormal）
// -------------------------------------------------
// word-spacingプロパティは、単語の間隔を指定する際に使用します。単語の間隔にはマイナスの値を指定することもできます。
// -------------------------------------------------
// *************************************************
// ※単語の間隔の設定値一覧
// normal					: 標準の間隔にします。（初期値）
// 数値 + 単位で指定		: 数値にpxやemやexなどの単位をつけて指定します。尚、pxとは1ピクセルを1とする単位で、
//							  実際に表示されるサイズは72dpiや96dpiといったモニタの解像度により変化します。
//							  また、emとはフォントの高さを1とする単位で、exとは小文字の｢x｣の高さを1とする単位です。
// *************************************************
// =================================================
@mixin word-spacing($property: normal) {
	word-spacing: #{$property};
}

// =================================================
// 単語の途中で改行するかどうかを指定する
// @param $property			: 単語の途中での改行方法（初期値はnormal）
// -------------------------------------------------
// word-wrapプロパティは、単語の途中で改行するかどうかを指定する際に使用します。
// 改行しない文字列が長すぎて行ボックスに収まらないとき、通常は文字列がボックスからはみ出して表示されます。
// このような場合、word-wrapプロパティの値にbreak-wordを指定すると、単語内で改行してボックスからのオーバーフロー（はみ出し）を防ぐことができます。
// word-wrapプロパティは、text-wrapプロパティの値がnormal、または、suppressのときにだけ有効となります。
// -------------------------------------------------
// *************************************************
// ※単語の途中での改行方法の設定値一覧
// normal					: 改行ポイントでのみ改行する（初期値）
// break-word				: 行の中に他の改行ポイントが無い場合には、単語途中でも改行する
// *************************************************
// =================================================
@mixin word-wrap($property: normal) {
	word-wrap: #{$property};
}

// =================================================
// 文字表記の方向（縦横）を指定する
// @param $property			: 文字表記の方向（初期値はinherit）
// -------------------------------------------------
// writing-mode プロパティは、テキストの行のレイアウトを水平または垂直に、ブロックの流れる方向を左向きまたは右向きに定義します。
// このプロパティは、ブロックの流れる方向 を指定します。
// これは、ブロックレベルのコンテナが積まれる方向と、インラインレベルのコンテンツがブロックコンテナ内で流れる方向です。
// このように、writing-mode プロパティはブロックレベルのコンテンツの順序も決定します。
// -------------------------------------------------
// *************************************************
// ※文字表記の方向の設定値一覧
// horizontal-tb			: コンテンツは左から右へ水平に、上から下へ垂直方向に流れます。次の水平な行は、前の行の下に配置されます。
// vertical-rl				: コンテンツは上から下へ垂直に、右から左へ水平方向に流れます。次の垂直な行は、前の行の左に配置されます。
// vertical-lr				: コンテンツは上から下へ垂直に、左から右へ水平方向に流れます。次の垂直な行は、前の行の右に配置されます。
// sideways-rl				: コンテンツは上から下へ垂直に、また垂直方向に並べられる書体を含むすべてのグリフを右へ横倒しにします。
// sideways-lr				: コンテンツは上から下へ垂直に、また垂直方向に並べられる書体を含むすべてのグリフを左へ横倒しにします。
// inherit					: 親コンテナの要素を引き継ぎます（初期値）
// *************************************************
// =================================================
@mixin writing-mode($property: inherit) {
	writing-mode: #{$property};
}

// ********************************************  Z  **********************************************//

// =================================================
// 重なりの順序を指定する
// @param $order			: 重なりの順序（初期値はauto）
// -------------------------------------------------
// z-indexプロパティは、ボックスの重なりの順序を指定する際に使用します。
// z-indexプロパティは、positionプロパティでstatic以外の値が指定されている要素に適用されます。
// -------------------------------------------------
// *************************************************
// ※重なりの順序の設定値一覧
// auto						: 親要素と同じ階層になります。（初期値）
// 整数値で指定				: 重なりの順序を整数で指定します。0を基準として、値が大きいものほど上になります。
// *************************************************
// =================================================
@mixin z-index($order: auto) {
	z-index: #{$order};
}

// =================================================
// 拡大・縮小表示する（IE独自拡張）
// @param $zoom				: 拡大率（初期値はnormal）
// -------------------------------------------------
// zoomプロパティは、Internet Explorerの独自拡張で、指定要素を拡大表示する際に使用します。
// -------------------------------------------------
// *************************************************
// ※拡大率の設定値一覧
// normal					: 標準サイズで表示します。（初期値）
// 数値で指定				: 拡大率を数値で指定します。1.0が標準サイズです。
// パーセントで指定			: 拡大率を％値で指定します。100％が標準サイズです。
// *************************************************
// =================================================
@mixin zoom($zoom: normal, $isPrefixOnly: false) {
	// プレフィックスのみの場合
	@if $isPrefixOnly {
		@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
			*zoom: #{$zoom};
		}
	}
	@else {
		zoom: #{$zoom};
		// IEサポートをする場合
		@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
			*zoom: #{$zoom};
		}
	}
}

